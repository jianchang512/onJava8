import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.c3fbb961.js";const A=JSON.parse('{"title":"附录:集合主题","description":"","frontmatter":{},"headers":[],"relativePath":"book/Appendix-Collection-Topics.md","filePath":"book/Appendix-Collection-Topics.md"}'),p={name:"book/Appendix-Collection-Topics.md"},o=l(`<p>[TOC]</p><h1 id="附录-集合主题" tabindex="-1">附录:集合主题 <a class="header-anchor" href="#附录-集合主题" aria-label="Permalink to &quot;附录:集合主题&quot;">​</a></h1><blockquote><p>本附录是一些比<a href="./.html">第十二章 集合</a>中介绍的更高级的内容。</p></blockquote><h2 id="示例数据" tabindex="-1">示例数据 <a class="header-anchor" href="#示例数据" aria-label="Permalink to &quot;示例数据&quot;">​</a></h2><p>这里创建一些样本数据用于集合示例。 以下数据将颜色名称与HTML颜色的RGB值相关联。请注意，每个键和值都是唯一的：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// onjava/HTMLColors.java</span></span>
<span class="line"><span style="color:#6A737D;">// Sample data for collection examples</span></span>
<span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> onjava;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.stream.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.concurrent.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">HTMLColors</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">Object</span><span style="color:#E1E4E8;">[][] ARRAY </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xF0F8FF</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;AliceBlue&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFAEBD7</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;AntiqueWhite&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x7FFFD4</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Aquamarine&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xF0FFFF</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Azure&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xF5F5DC</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Beige&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFFE4C4</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Bisque&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x000000</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Black&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFFEBCD</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;BlanchedAlmond&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x0000FF</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Blue&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x8A2BE2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;BlueViolet&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xA52A2A</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Brown&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xDEB887</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;BurlyWood&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x5F9EA0</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;CadetBlue&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x7FFF00</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Chartreuse&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xD2691E</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Chocolate&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFF7F50</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Coral&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x6495ED</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;CornflowerBlue&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFFF8DC</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Cornsilk&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xDC143C</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Crimson&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x00FFFF</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Cyan&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x00008B</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;DarkBlue&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x008B8B</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;DarkCyan&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xB8860B</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;DarkGoldenRod&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xA9A9A9</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;DarkGray&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x006400</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;DarkGreen&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xBDB76B</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;DarkKhaki&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x8B008B</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;DarkMagenta&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x556B2F</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;DarkOliveGreen&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFF8C00</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;DarkOrange&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x9932CC</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;DarkOrchid&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x8B0000</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;DarkRed&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xE9967A</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;DarkSalmon&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x8FBC8F</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;DarkSeaGreen&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x483D8B</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;DarkSlateBlue&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x2F4F4F</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;DarkSlateGray&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x00CED1</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;DarkTurquoise&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x9400D3</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;DarkViolet&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFF1493</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;DeepPink&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x00BFFF</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;DeepSkyBlue&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x696969</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;DimGray&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x1E90FF</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;DodgerBlue&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xB22222</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;FireBrick&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFFFAF0</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;FloralWhite&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x228B22</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;ForestGreen&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xDCDCDC</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Gainsboro&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xF8F8FF</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;GhostWhite&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFFD700</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Gold&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xDAA520</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;GoldenRod&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x808080</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Gray&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x008000</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Green&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xADFF2F</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;GreenYellow&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xF0FFF0</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;HoneyDew&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFF69B4</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;HotPink&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xCD5C5C</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;IndianRed&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x4B0082</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Indigo&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFFFFF0</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Ivory&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xF0E68C</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Khaki&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xE6E6FA</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Lavender&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFFF0F5</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;LavenderBlush&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x7CFC00</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;LawnGreen&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFFFACD</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;LemonChiffon&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xADD8E6</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;LightBlue&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xF08080</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;LightCoral&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xE0FFFF</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;LightCyan&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFAFAD2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;LightGoldenRodYellow&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xD3D3D3</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;LightGray&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x90EE90</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;LightGreen&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFFB6C1</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;LightPink&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFFA07A</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;LightSalmon&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x20B2AA</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;LightSeaGreen&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x87CEFA</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;LightSkyBlue&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x778899</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;LightSlateGray&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xB0C4DE</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;LightSteelBlue&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFFFFE0</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;LightYellow&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x00FF00</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Lime&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x32CD32</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;LimeGreen&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFAF0E6</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Linen&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFF00FF</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Magenta&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x800000</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Maroon&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x66CDAA</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;MediumAquaMarine&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x0000CD</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;MediumBlue&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xBA55D3</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;MediumOrchid&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x9370DB</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;MediumPurple&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x3CB371</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;MediumSeaGreen&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x7B68EE</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;MediumSlateBlue&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x00FA9A</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;MediumSpringGreen&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x48D1CC</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;MediumTurquoise&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xC71585</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;MediumVioletRed&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x191970</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;MidnightBlue&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xF5FFFA</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;MintCream&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFFE4E1</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;MistyRose&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFFE4B5</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Moccasin&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFFDEAD</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;NavajoWhite&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x000080</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Navy&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFDF5E6</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;OldLace&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x808000</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Olive&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x6B8E23</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;OliveDrab&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFFA500</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Orange&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFF4500</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;OrangeRed&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xDA70D6</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Orchid&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xEEE8AA</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;PaleGoldenRod&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x98FB98</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;PaleGreen&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xAFEEEE</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;PaleTurquoise&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xDB7093</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;PaleVioletRed&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFFEFD5</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;PapayaWhip&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFFDAB9</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;PeachPuff&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xCD853F</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Peru&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFFC0CB</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Pink&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xDDA0DD</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Plum&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xB0E0E6</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;PowderBlue&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x800080</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Purple&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFF0000</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Red&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xBC8F8F</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;RosyBrown&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x4169E1</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;RoyalBlue&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x8B4513</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;SaddleBrown&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFA8072</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Salmon&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xF4A460</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;SandyBrown&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x2E8B57</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;SeaGreen&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFFF5EE</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;SeaShell&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xA0522D</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Sienna&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xC0C0C0</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Silver&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x87CEEB</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;SkyBlue&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x6A5ACD</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;SlateBlue&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x708090</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;SlateGray&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFFFAFA</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Snow&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x00FF7F</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;SpringGreen&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x4682B4</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;SteelBlue&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xD2B48C</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Tan&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x008080</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Teal&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xD8BFD8</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Thistle&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFF6347</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Tomato&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x40E0D0</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Turquoise&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xEE82EE</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Violet&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xF5DEB3</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Wheat&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFFFFFF</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;White&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xF5F5F5</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;WhiteSmoke&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0xFFFF00</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Yellow&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { </span><span style="color:#79B8FF;">0x9ACD32</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;YellowGreen&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  };</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> Map&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; MAP </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    Arrays.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">(ARRAY)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors.</span><span style="color:#B392F0;">toMap</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        element </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> (Integer)element[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        element </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> (String)element[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        (v1, v2) </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> { </span><span style="color:#6A737D;">// Merge function</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IllegalStateException</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">        LinkedHashMap</span><span style="color:#F97583;">::new</span></span>
<span class="line"><span style="color:#E1E4E8;">      ));</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// Inversion only works if values are unique:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">V</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">K</span><span style="color:#E1E4E8;">&gt; Map&lt;</span><span style="color:#F97583;">V</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">K</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">invert</span><span style="color:#E1E4E8;">(Map&lt;</span><span style="color:#F97583;">K</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">V</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">map</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> map.</span><span style="color:#B392F0;">entrySet</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors.</span><span style="color:#B392F0;">toMap</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        Map.Entry</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">getValue,</span></span>
<span class="line"><span style="color:#E1E4E8;">        Map.Entry</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">getKey,</span></span>
<span class="line"><span style="color:#E1E4E8;">        (v1, v2) </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IllegalStateException</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">        LinkedHashMap</span><span style="color:#F97583;">::new</span></span>
<span class="line"><span style="color:#E1E4E8;">      ));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> Map&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    INVMAP </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">invert</span><span style="color:#E1E4E8;">(MAP);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// Look up RGB value given a name:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Integer </span><span style="color:#B392F0;">rgb</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">colorName</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> INVMAP.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(colorName);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; LIST </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    Arrays.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">(ARRAY)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(item </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> (String)item[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors.</span><span style="color:#B392F0;">toList</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> List&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">&gt; RGBLIST </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    Arrays.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">(ARRAY)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(item </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> (Integer)item[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors.</span><span style="color:#B392F0;">toList</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(Map.Entry&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">format</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;0x%06X: %s%n&quot;</span><span style="color:#E1E4E8;">, e.</span><span style="color:#B392F0;">getKey</span><span style="color:#E1E4E8;">(), e.</span><span style="color:#B392F0;">getValue</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(Map&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">m</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">count</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    m.</span><span style="color:#B392F0;">entrySet</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">limit</span><span style="color:#E1E4E8;">(count)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">(e </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(e));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(Map&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">m</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(m, m.</span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(Collection&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">lst</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">count</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    lst.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">limit</span><span style="color:#E1E4E8;">(count)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">(System.out</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">println);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(Collection&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">lst</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(lst, lst.</span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">showrgb</span><span style="color:#E1E4E8;">(Collection&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">lst</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">count</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    lst.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">limit</span><span style="color:#E1E4E8;">(count)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">(n </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> System.out.</span><span style="color:#B392F0;">format</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;0x%06X%n&quot;</span><span style="color:#E1E4E8;">, n));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">showrgb</span><span style="color:#E1E4E8;">(Collection&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">lst</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">showrgb</span><span style="color:#E1E4E8;">(lst, lst.</span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">showInv</span><span style="color:#E1E4E8;">(Map&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">m</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">count</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    m.</span><span style="color:#B392F0;">entrySet</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">limit</span><span style="color:#E1E4E8;">(count)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">(e </span><span style="color:#F97583;">-&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        System.out.</span><span style="color:#B392F0;">format</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">&quot;%-20s  0x%06X%n&quot;</span><span style="color:#E1E4E8;">, e.</span><span style="color:#B392F0;">getKey</span><span style="color:#E1E4E8;">(), e.</span><span style="color:#B392F0;">getValue</span><span style="color:#E1E4E8;">()));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">showInv</span><span style="color:#E1E4E8;">(Map&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">m</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">showInv</span><span style="color:#E1E4E8;">(m, m.</span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">border</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;******************************&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// onjava/HTMLColors.java</span></span>
<span class="line"><span style="color:#6A737D;">// Sample data for collection examples</span></span>
<span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> onjava;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.stream.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.concurrent.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HTMLColors</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">[][] ARRAY </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xF0F8FF</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;AliceBlue&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFAEBD7</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;AntiqueWhite&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x7FFFD4</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Aquamarine&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xF0FFFF</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Azure&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xF5F5DC</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Beige&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFFE4C4</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Bisque&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x000000</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Black&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFFEBCD</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;BlanchedAlmond&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x0000FF</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Blue&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x8A2BE2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;BlueViolet&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xA52A2A</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Brown&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xDEB887</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;BurlyWood&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x5F9EA0</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;CadetBlue&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x7FFF00</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Chartreuse&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xD2691E</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Chocolate&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFF7F50</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Coral&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x6495ED</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;CornflowerBlue&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFFF8DC</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Cornsilk&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xDC143C</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Crimson&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x00FFFF</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Cyan&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x00008B</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;DarkBlue&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x008B8B</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;DarkCyan&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xB8860B</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;DarkGoldenRod&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xA9A9A9</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;DarkGray&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x006400</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;DarkGreen&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xBDB76B</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;DarkKhaki&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x8B008B</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;DarkMagenta&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x556B2F</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;DarkOliveGreen&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFF8C00</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;DarkOrange&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x9932CC</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;DarkOrchid&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x8B0000</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;DarkRed&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xE9967A</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;DarkSalmon&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x8FBC8F</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;DarkSeaGreen&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x483D8B</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;DarkSlateBlue&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x2F4F4F</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;DarkSlateGray&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x00CED1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;DarkTurquoise&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x9400D3</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;DarkViolet&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFF1493</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;DeepPink&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x00BFFF</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;DeepSkyBlue&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x696969</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;DimGray&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x1E90FF</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;DodgerBlue&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xB22222</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;FireBrick&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFFFAF0</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;FloralWhite&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x228B22</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;ForestGreen&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xDCDCDC</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Gainsboro&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xF8F8FF</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;GhostWhite&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFFD700</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Gold&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xDAA520</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;GoldenRod&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x808080</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Gray&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x008000</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Green&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xADFF2F</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;GreenYellow&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xF0FFF0</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;HoneyDew&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFF69B4</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;HotPink&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xCD5C5C</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;IndianRed&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x4B0082</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Indigo&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFFFFF0</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Ivory&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xF0E68C</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Khaki&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xE6E6FA</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Lavender&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFFF0F5</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;LavenderBlush&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x7CFC00</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;LawnGreen&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFFFACD</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;LemonChiffon&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xADD8E6</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;LightBlue&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xF08080</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;LightCoral&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xE0FFFF</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;LightCyan&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFAFAD2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;LightGoldenRodYellow&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xD3D3D3</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;LightGray&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x90EE90</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;LightGreen&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFFB6C1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;LightPink&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFFA07A</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;LightSalmon&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x20B2AA</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;LightSeaGreen&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x87CEFA</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;LightSkyBlue&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x778899</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;LightSlateGray&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xB0C4DE</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;LightSteelBlue&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFFFFE0</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;LightYellow&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x00FF00</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Lime&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x32CD32</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;LimeGreen&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFAF0E6</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Linen&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFF00FF</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Magenta&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x800000</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Maroon&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x66CDAA</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;MediumAquaMarine&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x0000CD</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;MediumBlue&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xBA55D3</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;MediumOrchid&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x9370DB</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;MediumPurple&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x3CB371</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;MediumSeaGreen&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x7B68EE</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;MediumSlateBlue&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x00FA9A</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;MediumSpringGreen&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x48D1CC</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;MediumTurquoise&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xC71585</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;MediumVioletRed&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x191970</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;MidnightBlue&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xF5FFFA</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;MintCream&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFFE4E1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;MistyRose&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFFE4B5</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Moccasin&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFFDEAD</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;NavajoWhite&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x000080</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Navy&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFDF5E6</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;OldLace&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x808000</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Olive&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x6B8E23</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;OliveDrab&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFFA500</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Orange&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFF4500</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;OrangeRed&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xDA70D6</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Orchid&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xEEE8AA</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;PaleGoldenRod&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x98FB98</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;PaleGreen&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xAFEEEE</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;PaleTurquoise&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xDB7093</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;PaleVioletRed&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFFEFD5</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;PapayaWhip&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFFDAB9</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;PeachPuff&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xCD853F</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Peru&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFFC0CB</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Pink&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xDDA0DD</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Plum&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xB0E0E6</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;PowderBlue&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x800080</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Purple&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFF0000</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Red&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xBC8F8F</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;RosyBrown&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x4169E1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;RoyalBlue&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x8B4513</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;SaddleBrown&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFA8072</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Salmon&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xF4A460</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;SandyBrown&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x2E8B57</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;SeaGreen&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFFF5EE</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;SeaShell&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xA0522D</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Sienna&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xC0C0C0</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Silver&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x87CEEB</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;SkyBlue&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x6A5ACD</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;SlateBlue&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x708090</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;SlateGray&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFFFAFA</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Snow&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x00FF7F</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;SpringGreen&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x4682B4</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;SteelBlue&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xD2B48C</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Tan&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x008080</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Teal&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xD8BFD8</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Thistle&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFF6347</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Tomato&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x40E0D0</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Turquoise&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xEE82EE</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Violet&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xF5DEB3</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Wheat&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFFFFFF</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;White&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xF5F5F5</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;WhiteSmoke&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0xFFFF00</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Yellow&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { </span><span style="color:#005CC5;">0x9ACD32</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;YellowGreen&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  };</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> Map&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; MAP </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    Arrays.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">(ARRAY)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors.</span><span style="color:#6F42C1;">toMap</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        element </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> (Integer)element[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        element </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> (String)element[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        (v1, v2) </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> { </span><span style="color:#6A737D;">// Merge function</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IllegalStateException</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">        LinkedHashMap</span><span style="color:#D73A49;">::new</span></span>
<span class="line"><span style="color:#24292E;">      ));</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Inversion only works if values are unique:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">V</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">K</span><span style="color:#24292E;">&gt; Map&lt;</span><span style="color:#D73A49;">V</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">K</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">invert</span><span style="color:#24292E;">(Map&lt;</span><span style="color:#D73A49;">K</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">V</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">map</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> map.</span><span style="color:#6F42C1;">entrySet</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors.</span><span style="color:#6F42C1;">toMap</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        Map.Entry</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">getValue,</span></span>
<span class="line"><span style="color:#24292E;">        Map.Entry</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">getKey,</span></span>
<span class="line"><span style="color:#24292E;">        (v1, v2) </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IllegalStateException</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">        LinkedHashMap</span><span style="color:#D73A49;">::new</span></span>
<span class="line"><span style="color:#24292E;">      ));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    INVMAP </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">invert</span><span style="color:#24292E;">(MAP);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Look up RGB value given a name:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Integer </span><span style="color:#6F42C1;">rgb</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">colorName</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> INVMAP.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(colorName);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; LIST </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    Arrays.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">(ARRAY)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(item </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> (String)item[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors.</span><span style="color:#6F42C1;">toList</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> List&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">&gt; RGBLIST </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    Arrays.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">(ARRAY)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(item </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> (Integer)item[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors.</span><span style="color:#6F42C1;">toList</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(Map.Entry&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;0x%06X: %s%n&quot;</span><span style="color:#24292E;">, e.</span><span style="color:#6F42C1;">getKey</span><span style="color:#24292E;">(), e.</span><span style="color:#6F42C1;">getValue</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(Map&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">m</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">count</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    m.</span><span style="color:#6F42C1;">entrySet</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">limit</span><span style="color:#24292E;">(count)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(e </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(e));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(Map&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">m</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(m, m.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(Collection&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">lst</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">count</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    lst.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">limit</span><span style="color:#24292E;">(count)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(System.out</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">println);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(Collection&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">lst</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(lst, lst.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">showrgb</span><span style="color:#24292E;">(Collection&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">lst</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">count</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    lst.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">limit</span><span style="color:#24292E;">(count)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(n </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> System.out.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;0x%06X%n&quot;</span><span style="color:#24292E;">, n));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">showrgb</span><span style="color:#24292E;">(Collection&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">lst</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">showrgb</span><span style="color:#24292E;">(lst, lst.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">showInv</span><span style="color:#24292E;">(Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">m</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">count</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    m.</span><span style="color:#6F42C1;">entrySet</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">limit</span><span style="color:#24292E;">(count)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(e </span><span style="color:#D73A49;">-&gt;</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">&quot;%-20s  0x%06X%n&quot;</span><span style="color:#24292E;">, e.</span><span style="color:#6F42C1;">getKey</span><span style="color:#24292E;">(), e.</span><span style="color:#6F42C1;">getValue</span><span style="color:#24292E;">()));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">showInv</span><span style="color:#24292E;">(Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">m</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">showInv</span><span style="color:#24292E;">(m, m.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">border</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;******************************&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>MAP</strong> 是使用Streams（<a href="./.html">第十四章 流式编程</a>）创建的。 二维数组 <strong>ARRAY</strong> 作为流传输到 <strong>Map</strong> 中，但请注意我们不仅仅是使用简单版本的 <code>Collectors.toMap()</code> 。 那个版本生成一个 <strong>HashMap</strong> ，它使用散列函数来控制对键的排序。 为了保留原来的顺序，我们必须将键值对直接放入 <strong>TreeMap</strong> 中，这意味着我们需要使用更复杂的 <code>Collectors.toMap()</code> 版本。这需要两个函数从每个流元素中提取键和值，就像简单版本的<code>Collectors.toMap()</code> 一样。 然后它需要一个<em>合并函数</em>（merge function），它解决了与同一个键相关的两个值之间的冲突。这里的数据已经预先审查过，因此绝不会发生这种情况，如果有的话，这里会抛出异常。最后，传递生成所需类型的空map的函数，然后用流来填充它。</p><p><code>rgb()</code> 方法是一个便捷函数（convenience function），它接受颜色名称 <strong>String</strong> 参数并生成其数字RGB值。为此，我们需要一个反转版本的 <strong>COLORS</strong> ，它接受一个 <strong>String</strong>键并查找RGB的 <strong>Integer</strong> 值。 这是通过 <code>invert()</code> 方法实现的，如果任何 <strong>COLORS</strong> 值不唯一，则抛出异常。</p><p>我们还创建包含所有名称的 <strong>LIST</strong> ，以及包含十六进制表示法的RGB值的 <strong>RGBLIST</strong> 。</p><p>第一个 <code>show()</code> 方法接受一个 <strong>Map.Entry</strong> 并显示以十六进制表示的键，以便轻松地对原始 <strong>ARRAY</strong> 进行双重检查。 名称以 <strong>show</strong> 开头的每个方法都会重载两个版本，其中一个版本采用 <strong>count</strong> 参数来指示要显示的元素数量，第二个版本显示序列中的所有元素。</p><p>这里是一个基本的测试：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/HTMLColorTest.java</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> onjava.HTMLColors.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">HTMLColorTest</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> DISPLAY_SIZE </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(MAP, DISPLAY_SIZE);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">border</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">showInv</span><span style="color:#E1E4E8;">(INVMAP, DISPLAY_SIZE);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">border</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(LIST, DISPLAY_SIZE);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">border</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">showrgb</span><span style="color:#E1E4E8;">(RGBLIST, DISPLAY_SIZE);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">0xF0F8FF: AliceBlue</span></span>
<span class="line"><span style="color:#6A737D;">0xFAEBD7: AntiqueWhite</span></span>
<span class="line"><span style="color:#6A737D;">0x7FFFD4: Aquamarine</span></span>
<span class="line"><span style="color:#6A737D;">0xF0FFFF: Azure</span></span>
<span class="line"><span style="color:#6A737D;">0xF5F5DC: Beige</span></span>
<span class="line"><span style="color:#6A737D;">0xFFE4C4: Bisque</span></span>
<span class="line"><span style="color:#6A737D;">0x000000: Black</span></span>
<span class="line"><span style="color:#6A737D;">0xFFEBCD: BlanchedAlmond</span></span>
<span class="line"><span style="color:#6A737D;">0x0000FF: Blue</span></span>
<span class="line"><span style="color:#6A737D;">0x8A2BE2: BlueViolet</span></span>
<span class="line"><span style="color:#6A737D;">0xA52A2A: Brown</span></span>
<span class="line"><span style="color:#6A737D;">0xDEB887: BurlyWood</span></span>
<span class="line"><span style="color:#6A737D;">0x5F9EA0: CadetBlue</span></span>
<span class="line"><span style="color:#6A737D;">0x7FFF00: Chartreuse</span></span>
<span class="line"><span style="color:#6A737D;">0xD2691E: Chocolate</span></span>
<span class="line"><span style="color:#6A737D;">0xFF7F50: Coral</span></span>
<span class="line"><span style="color:#6A737D;">0x6495ED: CornflowerBlue</span></span>
<span class="line"><span style="color:#6A737D;">0xFFF8DC: Cornsilk</span></span>
<span class="line"><span style="color:#6A737D;">0xDC143C: Crimson</span></span>
<span class="line"><span style="color:#6A737D;">0x00FFFF: Cyan</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue             0xF0F8FF</span></span>
<span class="line"><span style="color:#6A737D;">AntiqueWhite          0xFAEBD7</span></span>
<span class="line"><span style="color:#6A737D;">Aquamarine            0x7FFFD4</span></span>
<span class="line"><span style="color:#6A737D;">Azure                 0xF0FFFF</span></span>
<span class="line"><span style="color:#6A737D;">Beige                 0xF5F5DC</span></span>
<span class="line"><span style="color:#6A737D;">Bisque                0xFFE4C4</span></span>
<span class="line"><span style="color:#6A737D;">Black                 0x000000</span></span>
<span class="line"><span style="color:#6A737D;">BlanchedAlmond        0xFFEBCD</span></span>
<span class="line"><span style="color:#6A737D;">Blue                  0x0000FF</span></span>
<span class="line"><span style="color:#6A737D;">BlueViolet            0x8A2BE2</span></span>
<span class="line"><span style="color:#6A737D;">Brown                 0xA52A2A</span></span>
<span class="line"><span style="color:#6A737D;">BurlyWood             0xDEB887</span></span>
<span class="line"><span style="color:#6A737D;">CadetBlue             0x5F9EA0</span></span>
<span class="line"><span style="color:#6A737D;">Chartreuse            0x7FFF00</span></span>
<span class="line"><span style="color:#6A737D;">Chocolate             0xD2691E</span></span>
<span class="line"><span style="color:#6A737D;">Coral                 0xFF7F50</span></span>
<span class="line"><span style="color:#6A737D;">CornflowerBlue        0x6495ED</span></span>
<span class="line"><span style="color:#6A737D;">Cornsilk              0xFFF8DC</span></span>
<span class="line"><span style="color:#6A737D;">Crimson               0xDC143C</span></span>
<span class="line"><span style="color:#6A737D;">Cyan                  0x00FFFF</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue</span></span>
<span class="line"><span style="color:#6A737D;">AntiqueWhite</span></span>
<span class="line"><span style="color:#6A737D;">Aquamarine</span></span>
<span class="line"><span style="color:#6A737D;">Azure</span></span>
<span class="line"><span style="color:#6A737D;">Beige</span></span>
<span class="line"><span style="color:#6A737D;">Bisque</span></span>
<span class="line"><span style="color:#6A737D;">Black</span></span>
<span class="line"><span style="color:#6A737D;">BlanchedAlmond</span></span>
<span class="line"><span style="color:#6A737D;">Blue</span></span>
<span class="line"><span style="color:#6A737D;">BlueViolet</span></span>
<span class="line"><span style="color:#6A737D;">Brown</span></span>
<span class="line"><span style="color:#6A737D;">BurlyWood</span></span>
<span class="line"><span style="color:#6A737D;">CadetBlue</span></span>
<span class="line"><span style="color:#6A737D;">Chartreuse</span></span>
<span class="line"><span style="color:#6A737D;">Chocolate</span></span>
<span class="line"><span style="color:#6A737D;">Coral</span></span>
<span class="line"><span style="color:#6A737D;">CornflowerBlue</span></span>
<span class="line"><span style="color:#6A737D;">Cornsilk</span></span>
<span class="line"><span style="color:#6A737D;">Crimson</span></span>
<span class="line"><span style="color:#6A737D;">Cyan</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">0xF0F8FF</span></span>
<span class="line"><span style="color:#6A737D;">0xFAEBD7</span></span>
<span class="line"><span style="color:#6A737D;">0x7FFFD4</span></span>
<span class="line"><span style="color:#6A737D;">0xF0FFFF</span></span>
<span class="line"><span style="color:#6A737D;">0xF5F5DC</span></span>
<span class="line"><span style="color:#6A737D;">0xFFE4C4</span></span>
<span class="line"><span style="color:#6A737D;">0x000000</span></span>
<span class="line"><span style="color:#6A737D;">0xFFEBCD</span></span>
<span class="line"><span style="color:#6A737D;">0x0000FF</span></span>
<span class="line"><span style="color:#6A737D;">0x8A2BE2</span></span>
<span class="line"><span style="color:#6A737D;">0xA52A2A</span></span>
<span class="line"><span style="color:#6A737D;">0xDEB887</span></span>
<span class="line"><span style="color:#6A737D;">0x5F9EA0</span></span>
<span class="line"><span style="color:#6A737D;">0x7FFF00</span></span>
<span class="line"><span style="color:#6A737D;">0xD2691E</span></span>
<span class="line"><span style="color:#6A737D;">0xFF7F50</span></span>
<span class="line"><span style="color:#6A737D;">0x6495ED</span></span>
<span class="line"><span style="color:#6A737D;">0xFFF8DC</span></span>
<span class="line"><span style="color:#6A737D;">0xDC143C</span></span>
<span class="line"><span style="color:#6A737D;">0x00FFFF</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/HTMLColorTest.java</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> onjava.HTMLColors.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HTMLColorTest</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> DISPLAY_SIZE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(MAP, DISPLAY_SIZE);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">border</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">showInv</span><span style="color:#24292E;">(INVMAP, DISPLAY_SIZE);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">border</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(LIST, DISPLAY_SIZE);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">border</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">showrgb</span><span style="color:#24292E;">(RGBLIST, DISPLAY_SIZE);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">0xF0F8FF: AliceBlue</span></span>
<span class="line"><span style="color:#6A737D;">0xFAEBD7: AntiqueWhite</span></span>
<span class="line"><span style="color:#6A737D;">0x7FFFD4: Aquamarine</span></span>
<span class="line"><span style="color:#6A737D;">0xF0FFFF: Azure</span></span>
<span class="line"><span style="color:#6A737D;">0xF5F5DC: Beige</span></span>
<span class="line"><span style="color:#6A737D;">0xFFE4C4: Bisque</span></span>
<span class="line"><span style="color:#6A737D;">0x000000: Black</span></span>
<span class="line"><span style="color:#6A737D;">0xFFEBCD: BlanchedAlmond</span></span>
<span class="line"><span style="color:#6A737D;">0x0000FF: Blue</span></span>
<span class="line"><span style="color:#6A737D;">0x8A2BE2: BlueViolet</span></span>
<span class="line"><span style="color:#6A737D;">0xA52A2A: Brown</span></span>
<span class="line"><span style="color:#6A737D;">0xDEB887: BurlyWood</span></span>
<span class="line"><span style="color:#6A737D;">0x5F9EA0: CadetBlue</span></span>
<span class="line"><span style="color:#6A737D;">0x7FFF00: Chartreuse</span></span>
<span class="line"><span style="color:#6A737D;">0xD2691E: Chocolate</span></span>
<span class="line"><span style="color:#6A737D;">0xFF7F50: Coral</span></span>
<span class="line"><span style="color:#6A737D;">0x6495ED: CornflowerBlue</span></span>
<span class="line"><span style="color:#6A737D;">0xFFF8DC: Cornsilk</span></span>
<span class="line"><span style="color:#6A737D;">0xDC143C: Crimson</span></span>
<span class="line"><span style="color:#6A737D;">0x00FFFF: Cyan</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue             0xF0F8FF</span></span>
<span class="line"><span style="color:#6A737D;">AntiqueWhite          0xFAEBD7</span></span>
<span class="line"><span style="color:#6A737D;">Aquamarine            0x7FFFD4</span></span>
<span class="line"><span style="color:#6A737D;">Azure                 0xF0FFFF</span></span>
<span class="line"><span style="color:#6A737D;">Beige                 0xF5F5DC</span></span>
<span class="line"><span style="color:#6A737D;">Bisque                0xFFE4C4</span></span>
<span class="line"><span style="color:#6A737D;">Black                 0x000000</span></span>
<span class="line"><span style="color:#6A737D;">BlanchedAlmond        0xFFEBCD</span></span>
<span class="line"><span style="color:#6A737D;">Blue                  0x0000FF</span></span>
<span class="line"><span style="color:#6A737D;">BlueViolet            0x8A2BE2</span></span>
<span class="line"><span style="color:#6A737D;">Brown                 0xA52A2A</span></span>
<span class="line"><span style="color:#6A737D;">BurlyWood             0xDEB887</span></span>
<span class="line"><span style="color:#6A737D;">CadetBlue             0x5F9EA0</span></span>
<span class="line"><span style="color:#6A737D;">Chartreuse            0x7FFF00</span></span>
<span class="line"><span style="color:#6A737D;">Chocolate             0xD2691E</span></span>
<span class="line"><span style="color:#6A737D;">Coral                 0xFF7F50</span></span>
<span class="line"><span style="color:#6A737D;">CornflowerBlue        0x6495ED</span></span>
<span class="line"><span style="color:#6A737D;">Cornsilk              0xFFF8DC</span></span>
<span class="line"><span style="color:#6A737D;">Crimson               0xDC143C</span></span>
<span class="line"><span style="color:#6A737D;">Cyan                  0x00FFFF</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue</span></span>
<span class="line"><span style="color:#6A737D;">AntiqueWhite</span></span>
<span class="line"><span style="color:#6A737D;">Aquamarine</span></span>
<span class="line"><span style="color:#6A737D;">Azure</span></span>
<span class="line"><span style="color:#6A737D;">Beige</span></span>
<span class="line"><span style="color:#6A737D;">Bisque</span></span>
<span class="line"><span style="color:#6A737D;">Black</span></span>
<span class="line"><span style="color:#6A737D;">BlanchedAlmond</span></span>
<span class="line"><span style="color:#6A737D;">Blue</span></span>
<span class="line"><span style="color:#6A737D;">BlueViolet</span></span>
<span class="line"><span style="color:#6A737D;">Brown</span></span>
<span class="line"><span style="color:#6A737D;">BurlyWood</span></span>
<span class="line"><span style="color:#6A737D;">CadetBlue</span></span>
<span class="line"><span style="color:#6A737D;">Chartreuse</span></span>
<span class="line"><span style="color:#6A737D;">Chocolate</span></span>
<span class="line"><span style="color:#6A737D;">Coral</span></span>
<span class="line"><span style="color:#6A737D;">CornflowerBlue</span></span>
<span class="line"><span style="color:#6A737D;">Cornsilk</span></span>
<span class="line"><span style="color:#6A737D;">Crimson</span></span>
<span class="line"><span style="color:#6A737D;">Cyan</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">0xF0F8FF</span></span>
<span class="line"><span style="color:#6A737D;">0xFAEBD7</span></span>
<span class="line"><span style="color:#6A737D;">0x7FFFD4</span></span>
<span class="line"><span style="color:#6A737D;">0xF0FFFF</span></span>
<span class="line"><span style="color:#6A737D;">0xF5F5DC</span></span>
<span class="line"><span style="color:#6A737D;">0xFFE4C4</span></span>
<span class="line"><span style="color:#6A737D;">0x000000</span></span>
<span class="line"><span style="color:#6A737D;">0xFFEBCD</span></span>
<span class="line"><span style="color:#6A737D;">0x0000FF</span></span>
<span class="line"><span style="color:#6A737D;">0x8A2BE2</span></span>
<span class="line"><span style="color:#6A737D;">0xA52A2A</span></span>
<span class="line"><span style="color:#6A737D;">0xDEB887</span></span>
<span class="line"><span style="color:#6A737D;">0x5F9EA0</span></span>
<span class="line"><span style="color:#6A737D;">0x7FFF00</span></span>
<span class="line"><span style="color:#6A737D;">0xD2691E</span></span>
<span class="line"><span style="color:#6A737D;">0xFF7F50</span></span>
<span class="line"><span style="color:#6A737D;">0x6495ED</span></span>
<span class="line"><span style="color:#6A737D;">0xFFF8DC</span></span>
<span class="line"><span style="color:#6A737D;">0xDC143C</span></span>
<span class="line"><span style="color:#6A737D;">0x00FFFF</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>可以看到，使用 <strong>LinkedHashMap</strong> 确实能够保留 <strong>HTMLColors.ARRAY</strong> 的顺序。</p><h2 id="list行为" tabindex="-1">List行为 <a class="header-anchor" href="#list行为" aria-label="Permalink to &quot;List行为&quot;">​</a></h2><p><strong>Lists</strong> 是存储和检索对象（次于数组）的最基本方法。基本列表操作包括：</p><ul><li><code>add()</code> 用于插入元素</li><li><code>get()</code> 用于随机访问元素</li><li><code>iterator()</code> 获取序列上的一个 <strong>Iterator</strong></li><li><code>stream()</code> 生成元素的一个 <strong>Stream</strong></li></ul><p>列表构造方法始终保留元素的添加顺序。</p><p>以下示例中的方法各自涵盖了一组不同的行为：每个 <strong>List</strong> 可以执行的操作（ <code>basicTest()</code> ），使用 <strong>Iterator</strong> （ <code>iterMotion()</code> ）遍历序列，使用 <strong>Iterator</strong> （ <code>iterManipulation()</code> ）更改内容，查看 <strong>List</strong> 操作（ <code>testVisual()</code> ）的效果，以及仅可用于 <strong>LinkedLists</strong> 的操作：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/ListOps.java</span></span>
<span class="line"><span style="color:#6A737D;">// Things you can do with Lists</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> onjava.HTMLColors;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ListOps</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// Create a short list for testing:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; LIST </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    HTMLColors.LIST.</span><span style="color:#B392F0;">subList</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> b;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> String s;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Iterator&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; it;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> ListIterator&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; lit;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">basicTest</span><span style="color:#E1E4E8;">(List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    a.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;x&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// Add at location 1</span></span>
<span class="line"><span style="color:#E1E4E8;">    a.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;x&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// Add at end</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Add a collection:</span></span>
<span class="line"><span style="color:#E1E4E8;">    a.</span><span style="color:#B392F0;">addAll</span><span style="color:#E1E4E8;">(LIST);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Add a collection starting at location 3:</span></span>
<span class="line"><span style="color:#E1E4E8;">    a.</span><span style="color:#B392F0;">addAll</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, LIST);</span></span>
<span class="line"><span style="color:#E1E4E8;">    b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a.</span><span style="color:#B392F0;">contains</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;1&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// Is it in there?</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Is the entire collection in there?</span></span>
<span class="line"><span style="color:#E1E4E8;">    b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a.</span><span style="color:#B392F0;">containsAll</span><span style="color:#E1E4E8;">(LIST);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Lists allow random access, which is cheap</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// for ArrayList, expensive for LinkedList:</span></span>
<span class="line"><span style="color:#E1E4E8;">    s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// Get (typed) object at location 1</span></span>
<span class="line"><span style="color:#E1E4E8;">    i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a.</span><span style="color:#B392F0;">indexOf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;1&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// Tell index of object</span></span>
<span class="line"><span style="color:#E1E4E8;">    b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a.</span><span style="color:#B392F0;">isEmpty</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// Any elements inside?</span></span>
<span class="line"><span style="color:#E1E4E8;">    it </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a.</span><span style="color:#B392F0;">iterator</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// Ordinary Iterator</span></span>
<span class="line"><span style="color:#E1E4E8;">    lit </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a.</span><span style="color:#B392F0;">listIterator</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// ListIterator</span></span>
<span class="line"><span style="color:#E1E4E8;">    lit </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a.</span><span style="color:#B392F0;">listIterator</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// Start at location 3</span></span>
<span class="line"><span style="color:#E1E4E8;">    i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a.</span><span style="color:#B392F0;">lastIndexOf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;1&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// Last match</span></span>
<span class="line"><span style="color:#E1E4E8;">    a.</span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// Remove location 1</span></span>
<span class="line"><span style="color:#E1E4E8;">    a.</span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;3&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// Remove this object</span></span>
<span class="line"><span style="color:#E1E4E8;">    a.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;y&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// Set location 1 to &quot;y&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Keep everything that&#39;s in the argument</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// (the intersection of the two sets):</span></span>
<span class="line"><span style="color:#E1E4E8;">    a.</span><span style="color:#B392F0;">retainAll</span><span style="color:#E1E4E8;">(LIST);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Remove everything that&#39;s in the argument:</span></span>
<span class="line"><span style="color:#E1E4E8;">    a.</span><span style="color:#B392F0;">removeAll</span><span style="color:#E1E4E8;">(LIST);</span></span>
<span class="line"><span style="color:#E1E4E8;">    i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a.</span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// How big is it?</span></span>
<span class="line"><span style="color:#E1E4E8;">    a.</span><span style="color:#B392F0;">clear</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// Remove all elements</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">iterMotion</span><span style="color:#E1E4E8;">(List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    ListIterator&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; it </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a.</span><span style="color:#B392F0;">listIterator</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> it.</span><span style="color:#B392F0;">hasNext</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> it.</span><span style="color:#B392F0;">hasPrevious</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> it.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> it.</span><span style="color:#B392F0;">nextIndex</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> it.</span><span style="color:#B392F0;">previous</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> it.</span><span style="color:#B392F0;">previousIndex</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">iterManipulation</span><span style="color:#E1E4E8;">(List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    ListIterator&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; it </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a.</span><span style="color:#B392F0;">listIterator</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    it.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;47&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Must move to an element after add():</span></span>
<span class="line"><span style="color:#E1E4E8;">    it.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Remove the element after the new one:</span></span>
<span class="line"><span style="color:#E1E4E8;">    it.</span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Must move to an element after remove():</span></span>
<span class="line"><span style="color:#E1E4E8;">    it.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Change the element after the deleted one:</span></span>
<span class="line"><span style="color:#E1E4E8;">    it.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;47&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">testVisual</span><span style="color:#E1E4E8;">(List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(a);</span></span>
<span class="line"><span style="color:#E1E4E8;">    List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> LIST;</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;b = &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> b);</span></span>
<span class="line"><span style="color:#E1E4E8;">    a.</span><span style="color:#B392F0;">addAll</span><span style="color:#E1E4E8;">(b);</span></span>
<span class="line"><span style="color:#E1E4E8;">    a.</span><span style="color:#B392F0;">addAll</span><span style="color:#E1E4E8;">(b);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(a);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Insert, remove, and replace elements</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// using a ListIterator:</span></span>
<span class="line"><span style="color:#E1E4E8;">    ListIterator&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; x </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      a.</span><span style="color:#B392F0;">listIterator</span><span style="color:#E1E4E8;">(a.</span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    x.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;one&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(a);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(x.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    x.</span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(x.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    x.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;47&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(a);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Traverse the list backwards:</span></span>
<span class="line"><span style="color:#E1E4E8;">    x </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a.</span><span style="color:#B392F0;">listIterator</span><span style="color:#E1E4E8;">(a.</span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(x.</span><span style="color:#B392F0;">hasPrevious</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">      System.out.</span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(x.</span><span style="color:#B392F0;">previous</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;testVisual finished&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// There are some things that only LinkedLists can do:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">testLinkedList</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    LinkedList&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; ll </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedList&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">    ll.</span><span style="color:#B392F0;">addAll</span><span style="color:#E1E4E8;">(LIST);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(ll);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Treat it like a stack, pushing:</span></span>
<span class="line"><span style="color:#E1E4E8;">    ll.</span><span style="color:#B392F0;">addFirst</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;one&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    ll.</span><span style="color:#B392F0;">addFirst</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;two&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(ll);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Like &quot;peeking&quot; at the top of a stack:</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(ll.</span><span style="color:#B392F0;">getFirst</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Like popping a stack:</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(ll.</span><span style="color:#B392F0;">removeFirst</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(ll.</span><span style="color:#B392F0;">removeFirst</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Treat it like a queue, pulling elements</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// off the tail end:</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(ll.</span><span style="color:#B392F0;">removeLast</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(ll);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Make and fill a new list each time:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">basicTest</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedList&lt;&gt;(LIST));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">basicTest</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;(LIST));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">iterMotion</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedList&lt;&gt;(LIST));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">iterMotion</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;(LIST));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">iterManipulation</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedList&lt;&gt;(LIST));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">iterManipulation</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;(LIST));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">testVisual</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedList&lt;&gt;(LIST));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">testLinkedList</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">[AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,</span></span>
<span class="line"><span style="color:#6A737D;">Bisque, Black, BlanchedAlmond, Blue, BlueViolet]</span></span>
<span class="line"><span style="color:#6A737D;">b = [AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,</span></span>
<span class="line"><span style="color:#6A737D;">Bisque, Black, BlanchedAlmond, Blue, BlueViolet]</span></span>
<span class="line"><span style="color:#6A737D;">[AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,</span></span>
<span class="line"><span style="color:#6A737D;">Bisque, Black, BlanchedAlmond, Blue, BlueViolet,</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,</span></span>
<span class="line"><span style="color:#6A737D;">Bisque, Black, BlanchedAlmond, Blue, BlueViolet,</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,</span></span>
<span class="line"><span style="color:#6A737D;">Bisque, Black, BlanchedAlmond, Blue, BlueViolet]</span></span>
<span class="line"><span style="color:#6A737D;">[AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,</span></span>
<span class="line"><span style="color:#6A737D;">Bisque, Black, BlanchedAlmond, Blue, BlueViolet,</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige, one,</span></span>
<span class="line"><span style="color:#6A737D;">Bisque, Black, BlanchedAlmond, Blue, BlueViolet,</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,</span></span>
<span class="line"><span style="color:#6A737D;">Bisque, Black, BlanchedAlmond, Blue, BlueViolet]</span></span>
<span class="line"><span style="color:#6A737D;">Bisque</span></span>
<span class="line"><span style="color:#6A737D;">Black</span></span>
<span class="line"><span style="color:#6A737D;">[AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,</span></span>
<span class="line"><span style="color:#6A737D;">Bisque, Black, BlanchedAlmond, Blue, BlueViolet,</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige, one,</span></span>
<span class="line"><span style="color:#6A737D;">47, BlanchedAlmond, Blue, BlueViolet, AliceBlue,</span></span>
<span class="line"><span style="color:#6A737D;">AntiqueWhite, Aquamarine, Azure, Beige, Bisque, Black,</span></span>
<span class="line"><span style="color:#6A737D;">BlanchedAlmond, Blue, BlueViolet]</span></span>
<span class="line"><span style="color:#6A737D;">BlueViolet Blue BlanchedAlmond Black Bisque Beige Azure</span></span>
<span class="line"><span style="color:#6A737D;">Aquamarine AntiqueWhite AliceBlue BlueViolet Blue</span></span>
<span class="line"><span style="color:#6A737D;">BlanchedAlmond 47 one Beige Azure Aquamarine</span></span>
<span class="line"><span style="color:#6A737D;">AntiqueWhite AliceBlue BlueViolet Blue BlanchedAlmond</span></span>
<span class="line"><span style="color:#6A737D;">Black Bisque Beige Azure Aquamarine AntiqueWhite</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue</span></span>
<span class="line"><span style="color:#6A737D;">testVisual finished</span></span>
<span class="line"><span style="color:#6A737D;">[AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,</span></span>
<span class="line"><span style="color:#6A737D;">Bisque, Black, BlanchedAlmond, Blue, BlueViolet]</span></span>
<span class="line"><span style="color:#6A737D;">[two, one, AliceBlue, AntiqueWhite, Aquamarine, Azure,</span></span>
<span class="line"><span style="color:#6A737D;">Beige, Bisque, Black, BlanchedAlmond, Blue, BlueViolet]</span></span>
<span class="line"><span style="color:#6A737D;">two</span></span>
<span class="line"><span style="color:#6A737D;">two</span></span>
<span class="line"><span style="color:#6A737D;">one</span></span>
<span class="line"><span style="color:#6A737D;">BlueViolet</span></span>
<span class="line"><span style="color:#6A737D;">[AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,</span></span>
<span class="line"><span style="color:#6A737D;">Bisque, Black, BlanchedAlmond, Blue]</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/ListOps.java</span></span>
<span class="line"><span style="color:#6A737D;">// Things you can do with Lists</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> onjava.HTMLColors;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ListOps</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Create a short list for testing:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; LIST </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    HTMLColors.LIST.</span><span style="color:#6F42C1;">subList</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> b;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> String s;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Iterator&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; it;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> ListIterator&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; lit;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">basicTest</span><span style="color:#24292E;">(List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">a</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    a.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;x&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// Add at location 1</span></span>
<span class="line"><span style="color:#24292E;">    a.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;x&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// Add at end</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Add a collection:</span></span>
<span class="line"><span style="color:#24292E;">    a.</span><span style="color:#6F42C1;">addAll</span><span style="color:#24292E;">(LIST);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Add a collection starting at location 3:</span></span>
<span class="line"><span style="color:#24292E;">    a.</span><span style="color:#6F42C1;">addAll</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, LIST);</span></span>
<span class="line"><span style="color:#24292E;">    b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">contains</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;1&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// Is it in there?</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Is the entire collection in there?</span></span>
<span class="line"><span style="color:#24292E;">    b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">containsAll</span><span style="color:#24292E;">(LIST);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Lists allow random access, which is cheap</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// for ArrayList, expensive for LinkedList:</span></span>
<span class="line"><span style="color:#24292E;">    s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// Get (typed) object at location 1</span></span>
<span class="line"><span style="color:#24292E;">    i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;1&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// Tell index of object</span></span>
<span class="line"><span style="color:#24292E;">    b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// Any elements inside?</span></span>
<span class="line"><span style="color:#24292E;">    it </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">iterator</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// Ordinary Iterator</span></span>
<span class="line"><span style="color:#24292E;">    lit </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">listIterator</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// ListIterator</span></span>
<span class="line"><span style="color:#24292E;">    lit </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">listIterator</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// Start at location 3</span></span>
<span class="line"><span style="color:#24292E;">    i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">lastIndexOf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;1&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// Last match</span></span>
<span class="line"><span style="color:#24292E;">    a.</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// Remove location 1</span></span>
<span class="line"><span style="color:#24292E;">    a.</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;3&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// Remove this object</span></span>
<span class="line"><span style="color:#24292E;">    a.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;y&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// Set location 1 to &quot;y&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Keep everything that&#39;s in the argument</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// (the intersection of the two sets):</span></span>
<span class="line"><span style="color:#24292E;">    a.</span><span style="color:#6F42C1;">retainAll</span><span style="color:#24292E;">(LIST);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Remove everything that&#39;s in the argument:</span></span>
<span class="line"><span style="color:#24292E;">    a.</span><span style="color:#6F42C1;">removeAll</span><span style="color:#24292E;">(LIST);</span></span>
<span class="line"><span style="color:#24292E;">    i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// How big is it?</span></span>
<span class="line"><span style="color:#24292E;">    a.</span><span style="color:#6F42C1;">clear</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// Remove all elements</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">iterMotion</span><span style="color:#24292E;">(List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">a</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    ListIterator&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; it </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">listIterator</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> it.</span><span style="color:#6F42C1;">hasNext</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> it.</span><span style="color:#6F42C1;">hasPrevious</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> it.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> it.</span><span style="color:#6F42C1;">nextIndex</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> it.</span><span style="color:#6F42C1;">previous</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> it.</span><span style="color:#6F42C1;">previousIndex</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">iterManipulation</span><span style="color:#24292E;">(List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">a</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    ListIterator&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; it </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">listIterator</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    it.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;47&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Must move to an element after add():</span></span>
<span class="line"><span style="color:#24292E;">    it.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Remove the element after the new one:</span></span>
<span class="line"><span style="color:#24292E;">    it.</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Must move to an element after remove():</span></span>
<span class="line"><span style="color:#24292E;">    it.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Change the element after the deleted one:</span></span>
<span class="line"><span style="color:#24292E;">    it.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;47&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">testVisual</span><span style="color:#24292E;">(List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">a</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(a);</span></span>
<span class="line"><span style="color:#24292E;">    List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LIST;</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;b = &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> b);</span></span>
<span class="line"><span style="color:#24292E;">    a.</span><span style="color:#6F42C1;">addAll</span><span style="color:#24292E;">(b);</span></span>
<span class="line"><span style="color:#24292E;">    a.</span><span style="color:#6F42C1;">addAll</span><span style="color:#24292E;">(b);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(a);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Insert, remove, and replace elements</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// using a ListIterator:</span></span>
<span class="line"><span style="color:#24292E;">    ListIterator&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; x </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      a.</span><span style="color:#6F42C1;">listIterator</span><span style="color:#24292E;">(a.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    x.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;one&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(a);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(x.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    x.</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(x.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    x.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;47&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(a);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Traverse the list backwards:</span></span>
<span class="line"><span style="color:#24292E;">    x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">listIterator</span><span style="color:#24292E;">(a.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(x.</span><span style="color:#6F42C1;">hasPrevious</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">      System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(x.</span><span style="color:#6F42C1;">previous</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;testVisual finished&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// There are some things that only LinkedLists can do:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">testLinkedList</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    LinkedList&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; ll </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedList&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">    ll.</span><span style="color:#6F42C1;">addAll</span><span style="color:#24292E;">(LIST);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(ll);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Treat it like a stack, pushing:</span></span>
<span class="line"><span style="color:#24292E;">    ll.</span><span style="color:#6F42C1;">addFirst</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;one&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    ll.</span><span style="color:#6F42C1;">addFirst</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;two&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(ll);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Like &quot;peeking&quot; at the top of a stack:</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(ll.</span><span style="color:#6F42C1;">getFirst</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Like popping a stack:</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(ll.</span><span style="color:#6F42C1;">removeFirst</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(ll.</span><span style="color:#6F42C1;">removeFirst</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Treat it like a queue, pulling elements</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// off the tail end:</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(ll.</span><span style="color:#6F42C1;">removeLast</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(ll);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Make and fill a new list each time:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">basicTest</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedList&lt;&gt;(LIST));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">basicTest</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;(LIST));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">iterMotion</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedList&lt;&gt;(LIST));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">iterMotion</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;(LIST));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">iterManipulation</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedList&lt;&gt;(LIST));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">iterManipulation</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;(LIST));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">testVisual</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedList&lt;&gt;(LIST));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">testLinkedList</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">[AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,</span></span>
<span class="line"><span style="color:#6A737D;">Bisque, Black, BlanchedAlmond, Blue, BlueViolet]</span></span>
<span class="line"><span style="color:#6A737D;">b = [AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,</span></span>
<span class="line"><span style="color:#6A737D;">Bisque, Black, BlanchedAlmond, Blue, BlueViolet]</span></span>
<span class="line"><span style="color:#6A737D;">[AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,</span></span>
<span class="line"><span style="color:#6A737D;">Bisque, Black, BlanchedAlmond, Blue, BlueViolet,</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,</span></span>
<span class="line"><span style="color:#6A737D;">Bisque, Black, BlanchedAlmond, Blue, BlueViolet,</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,</span></span>
<span class="line"><span style="color:#6A737D;">Bisque, Black, BlanchedAlmond, Blue, BlueViolet]</span></span>
<span class="line"><span style="color:#6A737D;">[AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,</span></span>
<span class="line"><span style="color:#6A737D;">Bisque, Black, BlanchedAlmond, Blue, BlueViolet,</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige, one,</span></span>
<span class="line"><span style="color:#6A737D;">Bisque, Black, BlanchedAlmond, Blue, BlueViolet,</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,</span></span>
<span class="line"><span style="color:#6A737D;">Bisque, Black, BlanchedAlmond, Blue, BlueViolet]</span></span>
<span class="line"><span style="color:#6A737D;">Bisque</span></span>
<span class="line"><span style="color:#6A737D;">Black</span></span>
<span class="line"><span style="color:#6A737D;">[AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,</span></span>
<span class="line"><span style="color:#6A737D;">Bisque, Black, BlanchedAlmond, Blue, BlueViolet,</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige, one,</span></span>
<span class="line"><span style="color:#6A737D;">47, BlanchedAlmond, Blue, BlueViolet, AliceBlue,</span></span>
<span class="line"><span style="color:#6A737D;">AntiqueWhite, Aquamarine, Azure, Beige, Bisque, Black,</span></span>
<span class="line"><span style="color:#6A737D;">BlanchedAlmond, Blue, BlueViolet]</span></span>
<span class="line"><span style="color:#6A737D;">BlueViolet Blue BlanchedAlmond Black Bisque Beige Azure</span></span>
<span class="line"><span style="color:#6A737D;">Aquamarine AntiqueWhite AliceBlue BlueViolet Blue</span></span>
<span class="line"><span style="color:#6A737D;">BlanchedAlmond 47 one Beige Azure Aquamarine</span></span>
<span class="line"><span style="color:#6A737D;">AntiqueWhite AliceBlue BlueViolet Blue BlanchedAlmond</span></span>
<span class="line"><span style="color:#6A737D;">Black Bisque Beige Azure Aquamarine AntiqueWhite</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue</span></span>
<span class="line"><span style="color:#6A737D;">testVisual finished</span></span>
<span class="line"><span style="color:#6A737D;">[AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,</span></span>
<span class="line"><span style="color:#6A737D;">Bisque, Black, BlanchedAlmond, Blue, BlueViolet]</span></span>
<span class="line"><span style="color:#6A737D;">[two, one, AliceBlue, AntiqueWhite, Aquamarine, Azure,</span></span>
<span class="line"><span style="color:#6A737D;">Beige, Bisque, Black, BlanchedAlmond, Blue, BlueViolet]</span></span>
<span class="line"><span style="color:#6A737D;">two</span></span>
<span class="line"><span style="color:#6A737D;">two</span></span>
<span class="line"><span style="color:#6A737D;">one</span></span>
<span class="line"><span style="color:#6A737D;">BlueViolet</span></span>
<span class="line"><span style="color:#6A737D;">[AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,</span></span>
<span class="line"><span style="color:#6A737D;">Bisque, Black, BlanchedAlmond, Blue]</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>在 <code>basicTest()</code> 和 <code>iterMotion()</code> 中，方法调用是为了展示正确的语法，尽管获取了返回值，但不会使用它。在某些情况下，根本不会去获取返回值。在使用这些方法之前，请查看JDK文档中这些方法的完整用法。</p><h2 id="set行为" tabindex="-1">Set行为 <a class="header-anchor" href="#set行为" aria-label="Permalink to &quot;Set行为&quot;">​</a></h2><p><strong>Set</strong> 的主要用处是测试成员身份，不过也可以将其用作删除重复元素的工具。如果不关心元素顺序或并发性， <strong>HashSet</strong> 总是最好的选择，因为它是专门为了快速查找而设计的（这里使用了在<a href="./.html">附录：理解equals和hashCode方法</a>章节中探讨的散列函数）。</p><p>其它的 <strong>Set</strong> 实现产生不同的排序行为：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/SetOrder.java</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> onjava.HTMLColors;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SetOrder</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] sets </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;java.util.HashSet&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;java.util.TreeSet&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;java.util.concurrent.ConcurrentSkipListSet&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;java.util.LinkedHashSet&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;java.util.concurrent.CopyOnWriteArraySet&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  };</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; RLIST </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;(HTMLColors.LIST);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    Collections.</span><span style="color:#B392F0;">reverse</span><span style="color:#E1E4E8;">(RLIST);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">throws</span><span style="color:#E1E4E8;"> Exception {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(String type</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> sets) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      System.out.</span><span style="color:#B392F0;">format</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;[-&gt; %s &lt;-]%n&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        type.</span><span style="color:#B392F0;">substring</span><span style="color:#E1E4E8;">(type.</span><span style="color:#B392F0;">lastIndexOf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;.&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">      @</span><span style="color:#F97583;">SuppressWarnings</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;unchecked&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      Set&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; set </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (Set</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">String</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        Class.</span><span style="color:#B392F0;">forName</span><span style="color:#E1E4E8;">(type).</span><span style="color:#B392F0;">newInstance</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      set.</span><span style="color:#B392F0;">addAll</span><span style="color:#E1E4E8;">(RLIST);</span></span>
<span class="line"><span style="color:#E1E4E8;">      set.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">limit</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">(System.out</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">println);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">[-&gt; HashSet &lt;-]</span></span>
<span class="line"><span style="color:#6A737D;">MediumOrchid</span></span>
<span class="line"><span style="color:#6A737D;">PaleGoldenRod</span></span>
<span class="line"><span style="color:#6A737D;">Sienna</span></span>
<span class="line"><span style="color:#6A737D;">LightSlateGray</span></span>
<span class="line"><span style="color:#6A737D;">DarkSeaGreen</span></span>
<span class="line"><span style="color:#6A737D;">Black</span></span>
<span class="line"><span style="color:#6A737D;">Gainsboro</span></span>
<span class="line"><span style="color:#6A737D;">Orange</span></span>
<span class="line"><span style="color:#6A737D;">LightCoral</span></span>
<span class="line"><span style="color:#6A737D;">DodgerBlue</span></span>
<span class="line"><span style="color:#6A737D;">[-&gt; TreeSet &lt;-]</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue</span></span>
<span class="line"><span style="color:#6A737D;">AntiqueWhite</span></span>
<span class="line"><span style="color:#6A737D;">Aquamarine</span></span>
<span class="line"><span style="color:#6A737D;">Azure</span></span>
<span class="line"><span style="color:#6A737D;">Beige</span></span>
<span class="line"><span style="color:#6A737D;">Bisque</span></span>
<span class="line"><span style="color:#6A737D;">Black</span></span>
<span class="line"><span style="color:#6A737D;">BlanchedAlmond</span></span>
<span class="line"><span style="color:#6A737D;">Blue</span></span>
<span class="line"><span style="color:#6A737D;">BlueViolet</span></span>
<span class="line"><span style="color:#6A737D;">[-&gt; ConcurrentSkipListSet &lt;-]</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue</span></span>
<span class="line"><span style="color:#6A737D;">AntiqueWhite</span></span>
<span class="line"><span style="color:#6A737D;">Aquamarine</span></span>
<span class="line"><span style="color:#6A737D;">Azure</span></span>
<span class="line"><span style="color:#6A737D;">Beige</span></span>
<span class="line"><span style="color:#6A737D;">Bisque</span></span>
<span class="line"><span style="color:#6A737D;">Black</span></span>
<span class="line"><span style="color:#6A737D;">BlanchedAlmond</span></span>
<span class="line"><span style="color:#6A737D;">Blue</span></span>
<span class="line"><span style="color:#6A737D;">BlueViolet</span></span>
<span class="line"><span style="color:#6A737D;">[-&gt; LinkedHashSet &lt;-]</span></span>
<span class="line"><span style="color:#6A737D;">YellowGreen</span></span>
<span class="line"><span style="color:#6A737D;">Yellow</span></span>
<span class="line"><span style="color:#6A737D;">WhiteSmoke</span></span>
<span class="line"><span style="color:#6A737D;">White</span></span>
<span class="line"><span style="color:#6A737D;">Wheat</span></span>
<span class="line"><span style="color:#6A737D;">Violet</span></span>
<span class="line"><span style="color:#6A737D;">Turquoise</span></span>
<span class="line"><span style="color:#6A737D;">Tomato</span></span>
<span class="line"><span style="color:#6A737D;">Thistle</span></span>
<span class="line"><span style="color:#6A737D;">Teal</span></span>
<span class="line"><span style="color:#6A737D;">[-&gt; CopyOnWriteArraySet &lt;-]</span></span>
<span class="line"><span style="color:#6A737D;">YellowGreen</span></span>
<span class="line"><span style="color:#6A737D;">Yellow</span></span>
<span class="line"><span style="color:#6A737D;">WhiteSmoke</span></span>
<span class="line"><span style="color:#6A737D;">White</span></span>
<span class="line"><span style="color:#6A737D;">Wheat</span></span>
<span class="line"><span style="color:#6A737D;">Violet</span></span>
<span class="line"><span style="color:#6A737D;">Turquoise</span></span>
<span class="line"><span style="color:#6A737D;">Tomato</span></span>
<span class="line"><span style="color:#6A737D;">Thistle</span></span>
<span class="line"><span style="color:#6A737D;">Teal</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/SetOrder.java</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> onjava.HTMLColors;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SetOrder</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] sets </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;java.util.HashSet&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;java.util.TreeSet&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;java.util.concurrent.ConcurrentSkipListSet&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;java.util.LinkedHashSet&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;java.util.concurrent.CopyOnWriteArraySet&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  };</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; RLIST </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;(HTMLColors.LIST);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    Collections.</span><span style="color:#6F42C1;">reverse</span><span style="color:#24292E;">(RLIST);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> Exception {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(String type</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> sets) {</span></span>
<span class="line"><span style="color:#24292E;">      System.out.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;[-&gt; %s &lt;-]%n&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        type.</span><span style="color:#6F42C1;">substring</span><span style="color:#24292E;">(type.</span><span style="color:#6F42C1;">lastIndexOf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;.&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">      @</span><span style="color:#D73A49;">SuppressWarnings</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;unchecked&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      Set&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; set </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (Set</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">String</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        Class.</span><span style="color:#6F42C1;">forName</span><span style="color:#24292E;">(type).</span><span style="color:#6F42C1;">newInstance</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">      set.</span><span style="color:#6F42C1;">addAll</span><span style="color:#24292E;">(RLIST);</span></span>
<span class="line"><span style="color:#24292E;">      set.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">limit</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(System.out</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">println);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">[-&gt; HashSet &lt;-]</span></span>
<span class="line"><span style="color:#6A737D;">MediumOrchid</span></span>
<span class="line"><span style="color:#6A737D;">PaleGoldenRod</span></span>
<span class="line"><span style="color:#6A737D;">Sienna</span></span>
<span class="line"><span style="color:#6A737D;">LightSlateGray</span></span>
<span class="line"><span style="color:#6A737D;">DarkSeaGreen</span></span>
<span class="line"><span style="color:#6A737D;">Black</span></span>
<span class="line"><span style="color:#6A737D;">Gainsboro</span></span>
<span class="line"><span style="color:#6A737D;">Orange</span></span>
<span class="line"><span style="color:#6A737D;">LightCoral</span></span>
<span class="line"><span style="color:#6A737D;">DodgerBlue</span></span>
<span class="line"><span style="color:#6A737D;">[-&gt; TreeSet &lt;-]</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue</span></span>
<span class="line"><span style="color:#6A737D;">AntiqueWhite</span></span>
<span class="line"><span style="color:#6A737D;">Aquamarine</span></span>
<span class="line"><span style="color:#6A737D;">Azure</span></span>
<span class="line"><span style="color:#6A737D;">Beige</span></span>
<span class="line"><span style="color:#6A737D;">Bisque</span></span>
<span class="line"><span style="color:#6A737D;">Black</span></span>
<span class="line"><span style="color:#6A737D;">BlanchedAlmond</span></span>
<span class="line"><span style="color:#6A737D;">Blue</span></span>
<span class="line"><span style="color:#6A737D;">BlueViolet</span></span>
<span class="line"><span style="color:#6A737D;">[-&gt; ConcurrentSkipListSet &lt;-]</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue</span></span>
<span class="line"><span style="color:#6A737D;">AntiqueWhite</span></span>
<span class="line"><span style="color:#6A737D;">Aquamarine</span></span>
<span class="line"><span style="color:#6A737D;">Azure</span></span>
<span class="line"><span style="color:#6A737D;">Beige</span></span>
<span class="line"><span style="color:#6A737D;">Bisque</span></span>
<span class="line"><span style="color:#6A737D;">Black</span></span>
<span class="line"><span style="color:#6A737D;">BlanchedAlmond</span></span>
<span class="line"><span style="color:#6A737D;">Blue</span></span>
<span class="line"><span style="color:#6A737D;">BlueViolet</span></span>
<span class="line"><span style="color:#6A737D;">[-&gt; LinkedHashSet &lt;-]</span></span>
<span class="line"><span style="color:#6A737D;">YellowGreen</span></span>
<span class="line"><span style="color:#6A737D;">Yellow</span></span>
<span class="line"><span style="color:#6A737D;">WhiteSmoke</span></span>
<span class="line"><span style="color:#6A737D;">White</span></span>
<span class="line"><span style="color:#6A737D;">Wheat</span></span>
<span class="line"><span style="color:#6A737D;">Violet</span></span>
<span class="line"><span style="color:#6A737D;">Turquoise</span></span>
<span class="line"><span style="color:#6A737D;">Tomato</span></span>
<span class="line"><span style="color:#6A737D;">Thistle</span></span>
<span class="line"><span style="color:#6A737D;">Teal</span></span>
<span class="line"><span style="color:#6A737D;">[-&gt; CopyOnWriteArraySet &lt;-]</span></span>
<span class="line"><span style="color:#6A737D;">YellowGreen</span></span>
<span class="line"><span style="color:#6A737D;">Yellow</span></span>
<span class="line"><span style="color:#6A737D;">WhiteSmoke</span></span>
<span class="line"><span style="color:#6A737D;">White</span></span>
<span class="line"><span style="color:#6A737D;">Wheat</span></span>
<span class="line"><span style="color:#6A737D;">Violet</span></span>
<span class="line"><span style="color:#6A737D;">Turquoise</span></span>
<span class="line"><span style="color:#6A737D;">Tomato</span></span>
<span class="line"><span style="color:#6A737D;">Thistle</span></span>
<span class="line"><span style="color:#6A737D;">Teal</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>这里需要使用 <strong>@SuppressWarnings(“unchecked”)</strong> ，因为这里将一个 <strong>String</strong> （可能是任何东西）传递给了 <code>Class.forName(type).newInstance()</code> 。编译器并不能保证这是一次成功的操作。</p><p><strong>RLIST</strong> 是 <strong>HTMLColors.LIST</strong> 的反转版本。因为 <code>Collections.reverse()</code> 是通过修改参数来执行反向操作，而不是返回包含反向元素的新 <strong>List</strong> ，所以该调用在 <strong>static</strong> 块内执行。 <strong>RLIST</strong> 可以防止我们意外地认为 <strong>Set</strong> 对其结果进行了排序。</p><p><strong>HashSet</strong> 的输出结果似乎没有可辨别的顺序，因为它是基于散列函数的。 <strong>TreeSet</strong> 和 <strong>ConcurrentSkipListSet</strong> 都对它们的元素进行了排序，它们都实现了 <strong>SortedSet</strong> 接口来标识这个特点。因为实现该接口的 <strong>Set</strong> 按顺序排列，所以该接口还有一些其他的可用操作。 <strong>LinkedHashSet</strong> 和 <strong>CopyOnWriteArraySet</strong> 尽管没有用于标识的接口，但它们还是保留了元素的插入顺序。</p><p><strong>ConcurrentSkipListSet</strong> 和 <strong>CopyOnWriteArraySet</strong> 是线程安全的。</p><p>在附录的最后，我们将了解在非 <strong>HashSet</strong> 实现的 <strong>Set</strong> 上添加额外排序的性能成本，以及不同实现中的任何其他功能的成本。</p><h2 id="在map中使用函数式操作" tabindex="-1">在Map中使用函数式操作 <a class="header-anchor" href="#在map中使用函数式操作" aria-label="Permalink to &quot;在Map中使用函数式操作&quot;">​</a></h2><p>与 <strong>Collection</strong> 接口一样，<code>forEach()</code> 也内置在 <strong>Map</strong> 接口中。但是如果想要执行任何其他的基本功能操作，比如 <code>map()</code> ，<code>flatMap()</code> ，<code>reduce()</code> 或 <code>filter()</code> 时，该怎么办？ 查看 <strong>Map</strong> 接口发现并没有这些。</p><p>可以通过 <code>entrySet()</code> 连接到这些方法，该方法会生成一个由 <strong>Map.Entry</strong> 对象组成的 <strong>Set</strong> 。这个 <strong>Set</strong> 包含 <code>stream()</code> 和 <code>parallelStream()</code> 方法。只需要记住一件事，这里正在使用的是 <strong>Map.Entry</strong> 对象：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/FunctionalMap.java</span></span>
<span class="line"><span style="color:#6A737D;">// Functional operations on a Map</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.stream.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.concurrent.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> onjava.HTMLColors.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FunctionalMap</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    MAP.</span><span style="color:#B392F0;">entrySet</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(Map.Entry</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">getValue)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">filter</span><span style="color:#E1E4E8;">(v </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> v.</span><span style="color:#B392F0;">startsWith</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Dark&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(v </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> v.</span><span style="color:#B392F0;">replaceFirst</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Dark&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Hot&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">(System.out</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">println);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">HotBlue</span></span>
<span class="line"><span style="color:#6A737D;">HotCyan</span></span>
<span class="line"><span style="color:#6A737D;">HotGoldenRod</span></span>
<span class="line"><span style="color:#6A737D;">HotGray</span></span>
<span class="line"><span style="color:#6A737D;">HotGreen</span></span>
<span class="line"><span style="color:#6A737D;">HotKhaki</span></span>
<span class="line"><span style="color:#6A737D;">HotMagenta</span></span>
<span class="line"><span style="color:#6A737D;">HotOliveGreen</span></span>
<span class="line"><span style="color:#6A737D;">HotOrange</span></span>
<span class="line"><span style="color:#6A737D;">HotOrchid</span></span>
<span class="line"><span style="color:#6A737D;">HotRed</span></span>
<span class="line"><span style="color:#6A737D;">HotSalmon</span></span>
<span class="line"><span style="color:#6A737D;">HotSeaGreen</span></span>
<span class="line"><span style="color:#6A737D;">HotSlateBlue</span></span>
<span class="line"><span style="color:#6A737D;">HotSlateGray</span></span>
<span class="line"><span style="color:#6A737D;">HotTurquoise</span></span>
<span class="line"><span style="color:#6A737D;">HotViolet</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/FunctionalMap.java</span></span>
<span class="line"><span style="color:#6A737D;">// Functional operations on a Map</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.stream.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.concurrent.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> onjava.HTMLColors.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FunctionalMap</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    MAP.</span><span style="color:#6F42C1;">entrySet</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(Map.Entry</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">getValue)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(v </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> v.</span><span style="color:#6F42C1;">startsWith</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Dark&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(v </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> v.</span><span style="color:#6F42C1;">replaceFirst</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Dark&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Hot&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(System.out</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">println);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">HotBlue</span></span>
<span class="line"><span style="color:#6A737D;">HotCyan</span></span>
<span class="line"><span style="color:#6A737D;">HotGoldenRod</span></span>
<span class="line"><span style="color:#6A737D;">HotGray</span></span>
<span class="line"><span style="color:#6A737D;">HotGreen</span></span>
<span class="line"><span style="color:#6A737D;">HotKhaki</span></span>
<span class="line"><span style="color:#6A737D;">HotMagenta</span></span>
<span class="line"><span style="color:#6A737D;">HotOliveGreen</span></span>
<span class="line"><span style="color:#6A737D;">HotOrange</span></span>
<span class="line"><span style="color:#6A737D;">HotOrchid</span></span>
<span class="line"><span style="color:#6A737D;">HotRed</span></span>
<span class="line"><span style="color:#6A737D;">HotSalmon</span></span>
<span class="line"><span style="color:#6A737D;">HotSeaGreen</span></span>
<span class="line"><span style="color:#6A737D;">HotSlateBlue</span></span>
<span class="line"><span style="color:#6A737D;">HotSlateGray</span></span>
<span class="line"><span style="color:#6A737D;">HotTurquoise</span></span>
<span class="line"><span style="color:#6A737D;">HotViolet</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>生成 <strong>Stream</strong> 后，所有的基本功能方法，甚至更多就都可以使用了。</p><h2 id="选择map片段" tabindex="-1">选择Map片段 <a class="header-anchor" href="#选择map片段" aria-label="Permalink to &quot;选择Map片段&quot;">​</a></h2><p>由 <strong>TreeMap</strong> 和 <strong>ConcurrentSkipListMap</strong> 实现的 <strong>NavigableMap</strong> 接口解决了需要选择Map片段的问题。下面是一个示例，使用了 <strong>HTMLColors</strong> ：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/NavMap.java</span></span>
<span class="line"><span style="color:#6A737D;">// NavigableMap produces pieces of a Map</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.concurrent.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> onjava.HTMLColors.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">NavMap</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span></span>
<span class="line"><span style="color:#E1E4E8;">  NavigableMap&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; COLORS </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ConcurrentSkipListMap&lt;&gt;(MAP);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(COLORS.</span><span style="color:#B392F0;">firstEntry</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">border</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(COLORS.</span><span style="color:#B392F0;">lastEntry</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">border</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    NavigableMap&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; toLime </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      COLORS.</span><span style="color:#B392F0;">headMap</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">rgb</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Lime&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(toLime);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">border</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(COLORS.</span><span style="color:#B392F0;">ceilingEntry</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">rgb</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;DeepSkyBlue&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">border</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(COLORS.</span><span style="color:#B392F0;">floorEntry</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">rgb</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;DeepSkyBlue&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">border</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(toLime.</span><span style="color:#B392F0;">descendingMap</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">border</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(COLORS.</span><span style="color:#B392F0;">tailMap</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">rgb</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;MistyRose&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">border</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(COLORS.</span><span style="color:#B392F0;">subMap</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">rgb</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Orchid&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">rgb</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;DarkSalmon&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">0x000000: Black</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">0xFFFFFF: White</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">0x000000: Black</span></span>
<span class="line"><span style="color:#6A737D;">0x000080: Navy</span></span>
<span class="line"><span style="color:#6A737D;">0x00008B: DarkBlue</span></span>
<span class="line"><span style="color:#6A737D;">0x0000CD: MediumBlue</span></span>
<span class="line"><span style="color:#6A737D;">0x0000FF: Blue</span></span>
<span class="line"><span style="color:#6A737D;">0x006400: DarkGreen</span></span>
<span class="line"><span style="color:#6A737D;">0x008000: Green</span></span>
<span class="line"><span style="color:#6A737D;">0x008080: Teal</span></span>
<span class="line"><span style="color:#6A737D;">0x008B8B: DarkCyan</span></span>
<span class="line"><span style="color:#6A737D;">0x00BFFF: DeepSkyBlue</span></span>
<span class="line"><span style="color:#6A737D;">0x00CED1: DarkTurquoise</span></span>
<span class="line"><span style="color:#6A737D;">0x00FA9A: MediumSpringGreen</span></span>
<span class="line"><span style="color:#6A737D;">0x00FF00: Lime</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">0x00BFFF: DeepSkyBlue</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">0x008B8B: DarkCyan</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">0x00FF00: Lime</span></span>
<span class="line"><span style="color:#6A737D;">0x00FA9A: MediumSpringGreen</span></span>
<span class="line"><span style="color:#6A737D;">0x00CED1: DarkTurquoise</span></span>
<span class="line"><span style="color:#6A737D;">0x00BFFF: DeepSkyBlue</span></span>
<span class="line"><span style="color:#6A737D;">0x008B8B: DarkCyan</span></span>
<span class="line"><span style="color:#6A737D;">0x008080: Teal</span></span>
<span class="line"><span style="color:#6A737D;">0x008000: Green</span></span>
<span class="line"><span style="color:#6A737D;">0x006400: DarkGreen</span></span>
<span class="line"><span style="color:#6A737D;">0x0000FF: Blue</span></span>
<span class="line"><span style="color:#6A737D;">0x0000CD: MediumBlue</span></span>
<span class="line"><span style="color:#6A737D;">0x00008B: DarkBlue</span></span>
<span class="line"><span style="color:#6A737D;">0x000080: Navy</span></span>
<span class="line"><span style="color:#6A737D;">0x000000: Black</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">0xFFE4E1: MistyRose</span></span>
<span class="line"><span style="color:#6A737D;">0xFFEBCD: BlanchedAlmond</span></span>
<span class="line"><span style="color:#6A737D;">0xFFEFD5: PapayaWhip</span></span>
<span class="line"><span style="color:#6A737D;">0xFFF0F5: LavenderBlush</span></span>
<span class="line"><span style="color:#6A737D;">0xFFF5EE: SeaShell</span></span>
<span class="line"><span style="color:#6A737D;">0xFFF8DC: Cornsilk</span></span>
<span class="line"><span style="color:#6A737D;">0xFFFACD: LemonChiffon</span></span>
<span class="line"><span style="color:#6A737D;">0xFFFAF0: FloralWhite</span></span>
<span class="line"><span style="color:#6A737D;">0xFFFAFA: Snow</span></span>
<span class="line"><span style="color:#6A737D;">0xFFFF00: Yellow</span></span>
<span class="line"><span style="color:#6A737D;">0xFFFFE0: LightYellow</span></span>
<span class="line"><span style="color:#6A737D;">0xFFFFF0: Ivory</span></span>
<span class="line"><span style="color:#6A737D;">0xFFFFFF: White</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">0xDA70D6: Orchid</span></span>
<span class="line"><span style="color:#6A737D;">0xDAA520: GoldenRod</span></span>
<span class="line"><span style="color:#6A737D;">0xDB7093: PaleVioletRed</span></span>
<span class="line"><span style="color:#6A737D;">0xDC143C: Crimson</span></span>
<span class="line"><span style="color:#6A737D;">0xDCDCDC: Gainsboro</span></span>
<span class="line"><span style="color:#6A737D;">0xDDA0DD: Plum</span></span>
<span class="line"><span style="color:#6A737D;">0xDEB887: BurlyWood</span></span>
<span class="line"><span style="color:#6A737D;">0xE0FFFF: LightCyan</span></span>
<span class="line"><span style="color:#6A737D;">0xE6E6FA: Lavender</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/NavMap.java</span></span>
<span class="line"><span style="color:#6A737D;">// NavigableMap produces pieces of a Map</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.concurrent.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> onjava.HTMLColors.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">NavMap</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span></span>
<span class="line"><span style="color:#24292E;">  NavigableMap&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; COLORS </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ConcurrentSkipListMap&lt;&gt;(MAP);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(COLORS.</span><span style="color:#6F42C1;">firstEntry</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">border</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(COLORS.</span><span style="color:#6F42C1;">lastEntry</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">border</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    NavigableMap&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; toLime </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      COLORS.</span><span style="color:#6F42C1;">headMap</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">rgb</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Lime&quot;</span><span style="color:#24292E;">), </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(toLime);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">border</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(COLORS.</span><span style="color:#6F42C1;">ceilingEntry</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">rgb</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;DeepSkyBlue&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">border</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(COLORS.</span><span style="color:#6F42C1;">floorEntry</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">rgb</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;DeepSkyBlue&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">border</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(toLime.</span><span style="color:#6F42C1;">descendingMap</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">border</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(COLORS.</span><span style="color:#6F42C1;">tailMap</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">rgb</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;MistyRose&quot;</span><span style="color:#24292E;">), </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">border</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(COLORS.</span><span style="color:#6F42C1;">subMap</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">rgb</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Orchid&quot;</span><span style="color:#24292E;">), </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">rgb</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;DarkSalmon&quot;</span><span style="color:#24292E;">), </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">0x000000: Black</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">0xFFFFFF: White</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">0x000000: Black</span></span>
<span class="line"><span style="color:#6A737D;">0x000080: Navy</span></span>
<span class="line"><span style="color:#6A737D;">0x00008B: DarkBlue</span></span>
<span class="line"><span style="color:#6A737D;">0x0000CD: MediumBlue</span></span>
<span class="line"><span style="color:#6A737D;">0x0000FF: Blue</span></span>
<span class="line"><span style="color:#6A737D;">0x006400: DarkGreen</span></span>
<span class="line"><span style="color:#6A737D;">0x008000: Green</span></span>
<span class="line"><span style="color:#6A737D;">0x008080: Teal</span></span>
<span class="line"><span style="color:#6A737D;">0x008B8B: DarkCyan</span></span>
<span class="line"><span style="color:#6A737D;">0x00BFFF: DeepSkyBlue</span></span>
<span class="line"><span style="color:#6A737D;">0x00CED1: DarkTurquoise</span></span>
<span class="line"><span style="color:#6A737D;">0x00FA9A: MediumSpringGreen</span></span>
<span class="line"><span style="color:#6A737D;">0x00FF00: Lime</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">0x00BFFF: DeepSkyBlue</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">0x008B8B: DarkCyan</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">0x00FF00: Lime</span></span>
<span class="line"><span style="color:#6A737D;">0x00FA9A: MediumSpringGreen</span></span>
<span class="line"><span style="color:#6A737D;">0x00CED1: DarkTurquoise</span></span>
<span class="line"><span style="color:#6A737D;">0x00BFFF: DeepSkyBlue</span></span>
<span class="line"><span style="color:#6A737D;">0x008B8B: DarkCyan</span></span>
<span class="line"><span style="color:#6A737D;">0x008080: Teal</span></span>
<span class="line"><span style="color:#6A737D;">0x008000: Green</span></span>
<span class="line"><span style="color:#6A737D;">0x006400: DarkGreen</span></span>
<span class="line"><span style="color:#6A737D;">0x0000FF: Blue</span></span>
<span class="line"><span style="color:#6A737D;">0x0000CD: MediumBlue</span></span>
<span class="line"><span style="color:#6A737D;">0x00008B: DarkBlue</span></span>
<span class="line"><span style="color:#6A737D;">0x000080: Navy</span></span>
<span class="line"><span style="color:#6A737D;">0x000000: Black</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">0xFFE4E1: MistyRose</span></span>
<span class="line"><span style="color:#6A737D;">0xFFEBCD: BlanchedAlmond</span></span>
<span class="line"><span style="color:#6A737D;">0xFFEFD5: PapayaWhip</span></span>
<span class="line"><span style="color:#6A737D;">0xFFF0F5: LavenderBlush</span></span>
<span class="line"><span style="color:#6A737D;">0xFFF5EE: SeaShell</span></span>
<span class="line"><span style="color:#6A737D;">0xFFF8DC: Cornsilk</span></span>
<span class="line"><span style="color:#6A737D;">0xFFFACD: LemonChiffon</span></span>
<span class="line"><span style="color:#6A737D;">0xFFFAF0: FloralWhite</span></span>
<span class="line"><span style="color:#6A737D;">0xFFFAFA: Snow</span></span>
<span class="line"><span style="color:#6A737D;">0xFFFF00: Yellow</span></span>
<span class="line"><span style="color:#6A737D;">0xFFFFE0: LightYellow</span></span>
<span class="line"><span style="color:#6A737D;">0xFFFFF0: Ivory</span></span>
<span class="line"><span style="color:#6A737D;">0xFFFFFF: White</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">0xDA70D6: Orchid</span></span>
<span class="line"><span style="color:#6A737D;">0xDAA520: GoldenRod</span></span>
<span class="line"><span style="color:#6A737D;">0xDB7093: PaleVioletRed</span></span>
<span class="line"><span style="color:#6A737D;">0xDC143C: Crimson</span></span>
<span class="line"><span style="color:#6A737D;">0xDCDCDC: Gainsboro</span></span>
<span class="line"><span style="color:#6A737D;">0xDDA0DD: Plum</span></span>
<span class="line"><span style="color:#6A737D;">0xDEB887: BurlyWood</span></span>
<span class="line"><span style="color:#6A737D;">0xE0FFFF: LightCyan</span></span>
<span class="line"><span style="color:#6A737D;">0xE6E6FA: Lavender</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>在主方法中可以看到 <strong>NavigableMap</strong> 的各种功能。 因为 <strong>NavigableMap</strong> 具有键顺序，所以它使用了 <code>firstEntry()</code> 和 <code>lastEntry()</code> 的概念。调用 <code>headMap()</code> 会生成一个 <strong>NavigableMap</strong> ，其中包含了从 <strong>Map</strong> 的开头到 <code>headMap()</code> 参数中所指向的一组元素，其中 <strong>boolean</strong> 值指示结果中是否包含该参数。调用 <code>tailMap()</code> 执行了类似的操作，只不过是从参数开始到 <strong>Map</strong> 的末尾。 <code>subMap()</code> 则允许生成 <strong>Map</strong> 中间的一部分。</p><p><code>ceilingEntry()</code> 从当前键值对向上搜索下一个键值对，<code>floorEntry()</code> 则是向下搜索。 <code>descendingMap()</code> 反转了 <strong>NavigableMap</strong> 的顺序。</p><p>如果需要通过分割 <strong>Map</strong> 来简化所正在解决的问题，则 <strong>NavigableMap</strong> 可以做到。具有类似的功能的其它集合实现也可以用来帮助解决问题。</p><h2 id="填充集合" tabindex="-1">填充集合 <a class="header-anchor" href="#填充集合" aria-label="Permalink to &quot;填充集合&quot;">​</a></h2><p>与 <strong>Arrays</strong> 一样，这里有一个名为 <strong>Collections</strong> 的伴随类（companion class），包含了一些 <strong>static</strong> 的实用方法，其中包括一个名为 <code>fill()</code> 的方法。 <code>fill()</code> 只复制整个集合中的单个对象引用。此外，它仅适用于 <strong>List</strong> 对象，但结果列表可以传递给构造方法或 <code>addAll()</code> 方法：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/FillingLists.java</span></span>
<span class="line"><span style="color:#6A737D;">// Collections.fill() &amp; Collections.nCopies()</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">StringAddress</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String s;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">StringAddress</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">s</span><span style="color:#E1E4E8;">) { </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> s; }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> s;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FillingLists</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    List&lt;</span><span style="color:#F97583;">StringAddress</span><span style="color:#E1E4E8;">&gt; list </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;(</span></span>
<span class="line"><span style="color:#E1E4E8;">      Collections.</span><span style="color:#B392F0;">nCopies</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">StringAddress</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Hello&quot;</span><span style="color:#E1E4E8;">)));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(list);</span></span>
<span class="line"><span style="color:#E1E4E8;">    Collections.</span><span style="color:#B392F0;">fill</span><span style="color:#E1E4E8;">(list,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">StringAddress</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;World!&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(list);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">[StringAddress@15db9742 Hello, StringAddress@15db9742</span></span>
<span class="line"><span style="color:#6A737D;">Hello, StringAddress@15db9742 Hello,</span></span>
<span class="line"><span style="color:#6A737D;">StringAddress@15db9742 Hello]</span></span>
<span class="line"><span style="color:#6A737D;">[StringAddress@6d06d69c World!, StringAddress@6d06d69c</span></span>
<span class="line"><span style="color:#6A737D;">World!, StringAddress@6d06d69c World!,</span></span>
<span class="line"><span style="color:#6A737D;">StringAddress@6d06d69c World!]</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/FillingLists.java</span></span>
<span class="line"><span style="color:#6A737D;">// Collections.fill() &amp; Collections.nCopies()</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StringAddress</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String s;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">StringAddress</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">s</span><span style="color:#24292E;">) { </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> s; }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">super</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> s;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FillingLists</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    List&lt;</span><span style="color:#D73A49;">StringAddress</span><span style="color:#24292E;">&gt; list </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;(</span></span>
<span class="line"><span style="color:#24292E;">      Collections.</span><span style="color:#6F42C1;">nCopies</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StringAddress</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello&quot;</span><span style="color:#24292E;">)));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(list);</span></span>
<span class="line"><span style="color:#24292E;">    Collections.</span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(list,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StringAddress</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;World!&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(list);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">[StringAddress@15db9742 Hello, StringAddress@15db9742</span></span>
<span class="line"><span style="color:#6A737D;">Hello, StringAddress@15db9742 Hello,</span></span>
<span class="line"><span style="color:#6A737D;">StringAddress@15db9742 Hello]</span></span>
<span class="line"><span style="color:#6A737D;">[StringAddress@6d06d69c World!, StringAddress@6d06d69c</span></span>
<span class="line"><span style="color:#6A737D;">World!, StringAddress@6d06d69c World!,</span></span>
<span class="line"><span style="color:#6A737D;">StringAddress@6d06d69c World!]</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>这个示例展示了两种使用对单个对象的引用来填充 <strong>Collection</strong> 的方法。 第一个： <code>Collections.nCopies()</code> ，创建一个 <strong>List</strong>，并传递给 <strong>ArrayList</strong> 的构造方法，进而填充了 <strong>ArrayList</strong> 。</p><p><strong>StringAddress</strong> 中的 <code>toString()</code> 方法调用了 <code>Object.toString()</code> ，它先生成类名，后跟着对象的哈希码的无符号十六进制表示（哈希吗由 <code>hashCode()</code> 方法生成）。 输出显示所有的引用都指向同一个对象。调用第二个方法 <code>Collections.fill()</code> 后也是如此。 <code>fill()</code> 方法的用处非常有限，它只能替换 <strong>List</strong> 中已有的元素,而且不会添加新元素，</p><h3 id="使用-suppliers-填充集合" tabindex="-1">使用 Suppliers 填充集合 <a class="header-anchor" href="#使用-suppliers-填充集合" aria-label="Permalink to &quot;使用 Suppliers 填充集合&quot;">​</a></h3><p><a href="./.html">第二十章 泛型</a>章节中介绍的 <strong>onjava.Suppliers</strong> 类为填充集合提供了通用解决方案。 这是一个使用 <strong>Suppliers</strong> 初始化几种不同类型的 <strong>Collection</strong> 的示例：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/SuppliersCollectionTest.java</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.function.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.stream.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> onjava.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Government</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Supplier</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] foundation </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;strange women lying in ponds &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;distributing swords is no basis &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;for a system of government&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">split</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> index;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> foundation[index</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SuppliersCollectionTest</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Suppliers class from the Generics chapter:</span></span>
<span class="line"><span style="color:#E1E4E8;">    Set&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; set </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Suppliers.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      LinkedHashSet</span><span style="color:#F97583;">::new</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Government</span><span style="color:#E1E4E8;">(), </span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(set);</span></span>
<span class="line"><span style="color:#E1E4E8;">    List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; list </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Suppliers.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      LinkedList</span><span style="color:#F97583;">::new</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Government</span><span style="color:#E1E4E8;">(), </span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(list);</span></span>
<span class="line"><span style="color:#E1E4E8;">    list </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">    Suppliers.</span><span style="color:#B392F0;">fill</span><span style="color:#E1E4E8;">(list, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Government</span><span style="color:#E1E4E8;">(), </span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(list);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Or we can use Streams:</span></span>
<span class="line"><span style="color:#E1E4E8;">    set </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Arrays.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">(Government.foundation)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors.</span><span style="color:#B392F0;">toSet</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(set);</span></span>
<span class="line"><span style="color:#E1E4E8;">    list </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Arrays.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">(Government.foundation)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors.</span><span style="color:#B392F0;">toList</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(list);</span></span>
<span class="line"><span style="color:#E1E4E8;">    list </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Arrays.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">(Government.foundation)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">toCollection</span><span style="color:#E1E4E8;">(LinkedList</span><span style="color:#F97583;">::new</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(list);</span></span>
<span class="line"><span style="color:#E1E4E8;">    set </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Arrays.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">(Government.foundation)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">toCollection</span><span style="color:#E1E4E8;">(LinkedHashSet</span><span style="color:#F97583;">::new</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(set);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">[strange, women, lying, in, ponds, distributing,</span></span>
<span class="line"><span style="color:#6A737D;">swords, is, no, basis, for, a, system, of, government]</span></span>
<span class="line"><span style="color:#6A737D;">[strange, women, lying, in, ponds, distributing,</span></span>
<span class="line"><span style="color:#6A737D;">swords, is, no, basis, for, a, system, of, government]</span></span>
<span class="line"><span style="color:#6A737D;">[strange, women, lying, in, ponds, distributing,</span></span>
<span class="line"><span style="color:#6A737D;">swords, is, no, basis, for, a, system, of, government]</span></span>
<span class="line"><span style="color:#6A737D;">[ponds, no, a, in, swords, for, is, basis, strange,</span></span>
<span class="line"><span style="color:#6A737D;">system, government, distributing, of, women, lying]</span></span>
<span class="line"><span style="color:#6A737D;">[strange, women, lying, in, ponds, distributing,</span></span>
<span class="line"><span style="color:#6A737D;">swords, is, no, basis, for, a, system, of, government]</span></span>
<span class="line"><span style="color:#6A737D;">[strange, women, lying, in, ponds, distributing,</span></span>
<span class="line"><span style="color:#6A737D;">swords, is, no, basis, for, a, system, of, government]</span></span>
<span class="line"><span style="color:#6A737D;">[strange, women, lying, in, ponds, distributing,</span></span>
<span class="line"><span style="color:#6A737D;">swords, is, no, basis, for, a, system, of, government]</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/SuppliersCollectionTest.java</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.function.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.stream.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> onjava.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Government</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Supplier</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] foundation </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;strange women lying in ponds &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;distributing swords is no basis &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;for a system of government&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> index;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> foundation[index</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SuppliersCollectionTest</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Suppliers class from the Generics chapter:</span></span>
<span class="line"><span style="color:#24292E;">    Set&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; set </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Suppliers.</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      LinkedHashSet</span><span style="color:#D73A49;">::new</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Government</span><span style="color:#24292E;">(), </span><span style="color:#005CC5;">15</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(set);</span></span>
<span class="line"><span style="color:#24292E;">    List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; list </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Suppliers.</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      LinkedList</span><span style="color:#D73A49;">::new</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Government</span><span style="color:#24292E;">(), </span><span style="color:#005CC5;">15</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(list);</span></span>
<span class="line"><span style="color:#24292E;">    list </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">    Suppliers.</span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(list, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Government</span><span style="color:#24292E;">(), </span><span style="color:#005CC5;">15</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(list);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Or we can use Streams:</span></span>
<span class="line"><span style="color:#24292E;">    set </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Arrays.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">(Government.foundation)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors.</span><span style="color:#6F42C1;">toSet</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(set);</span></span>
<span class="line"><span style="color:#24292E;">    list </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Arrays.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">(Government.foundation)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors.</span><span style="color:#6F42C1;">toList</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(list);</span></span>
<span class="line"><span style="color:#24292E;">    list </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Arrays.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">(Government.foundation)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">toCollection</span><span style="color:#24292E;">(LinkedList</span><span style="color:#D73A49;">::new</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(list);</span></span>
<span class="line"><span style="color:#24292E;">    set </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Arrays.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">(Government.foundation)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">toCollection</span><span style="color:#24292E;">(LinkedHashSet</span><span style="color:#D73A49;">::new</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(set);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">[strange, women, lying, in, ponds, distributing,</span></span>
<span class="line"><span style="color:#6A737D;">swords, is, no, basis, for, a, system, of, government]</span></span>
<span class="line"><span style="color:#6A737D;">[strange, women, lying, in, ponds, distributing,</span></span>
<span class="line"><span style="color:#6A737D;">swords, is, no, basis, for, a, system, of, government]</span></span>
<span class="line"><span style="color:#6A737D;">[strange, women, lying, in, ponds, distributing,</span></span>
<span class="line"><span style="color:#6A737D;">swords, is, no, basis, for, a, system, of, government]</span></span>
<span class="line"><span style="color:#6A737D;">[ponds, no, a, in, swords, for, is, basis, strange,</span></span>
<span class="line"><span style="color:#6A737D;">system, government, distributing, of, women, lying]</span></span>
<span class="line"><span style="color:#6A737D;">[strange, women, lying, in, ponds, distributing,</span></span>
<span class="line"><span style="color:#6A737D;">swords, is, no, basis, for, a, system, of, government]</span></span>
<span class="line"><span style="color:#6A737D;">[strange, women, lying, in, ponds, distributing,</span></span>
<span class="line"><span style="color:#6A737D;">swords, is, no, basis, for, a, system, of, government]</span></span>
<span class="line"><span style="color:#6A737D;">[strange, women, lying, in, ponds, distributing,</span></span>
<span class="line"><span style="color:#6A737D;">swords, is, no, basis, for, a, system, of, government]</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p><strong>LinkedHashSet</strong> 中的的元素按插入顺序排列，因为它维护一个链表来保存该顺序。</p><p>但是请注意示例的第二部分：大多数情况下都可以使用 <strong>Stream</strong> 来创建和填充 <strong>Collection</strong> 。在本例中的 <strong>Stream</strong> 版本不需要声明 <strong>Supplier</strong> 所想要创建的元素数量;，它直接吸收了 <strong>Stream</strong> 中的所有元素。</p><p>尽可能优先选择 <strong>Stream</strong> 来解决问题。</p><h3 id="map-suppliers" tabindex="-1">Map Suppliers <a class="header-anchor" href="#map-suppliers" aria-label="Permalink to &quot;Map Suppliers&quot;">​</a></h3><p>使用 <strong>Supplier</strong> 来填充 <strong>Map</strong> 时需要一个 <strong>Pair</strong> 类，因为每次调用一个 <strong>Supplier</strong> 的 <code>get()</code> 方法时，都必须生成一对对象（一个键和一个值）：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// onjava/Pair.java</span></span>
<span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> onjava;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Pair</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">K</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">V</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> K key;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> V value;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Pair</span><span style="color:#E1E4E8;">(K </span><span style="color:#FFAB70;">k</span><span style="color:#E1E4E8;">, V </span><span style="color:#FFAB70;">v</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    key </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> k;</span></span>
<span class="line"><span style="color:#E1E4E8;">    value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> v;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> K </span><span style="color:#B392F0;">key</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> key; }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> V </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value; }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">K</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">V</span><span style="color:#E1E4E8;">&gt; Pair&lt;</span><span style="color:#F97583;">K</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">V</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;">(K </span><span style="color:#FFAB70;">k</span><span style="color:#E1E4E8;">, V </span><span style="color:#FFAB70;">v</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Pair&lt;</span><span style="color:#F97583;">K</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">V</span><span style="color:#E1E4E8;">&gt;(k, v);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// onjava/Pair.java</span></span>
<span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> onjava;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Pair</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">K</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">V</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> K key;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> V value;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Pair</span><span style="color:#24292E;">(K </span><span style="color:#E36209;">k</span><span style="color:#24292E;">, V </span><span style="color:#E36209;">v</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    key </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> k;</span></span>
<span class="line"><span style="color:#24292E;">    value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> v;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> K </span><span style="color:#6F42C1;">key</span><span style="color:#24292E;">() { </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> key; }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> V </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">() { </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> value; }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">K</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">V</span><span style="color:#24292E;">&gt; Pair&lt;</span><span style="color:#D73A49;">K</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">V</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">make</span><span style="color:#24292E;">(K </span><span style="color:#E36209;">k</span><span style="color:#24292E;">, V </span><span style="color:#E36209;">v</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Pair&lt;</span><span style="color:#D73A49;">K</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">V</span><span style="color:#24292E;">&gt;(k, v);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>Pair</strong> 是一个只读的 <em>数据传输对象</em> （Data Transfer Object）或 <em>信使</em> （Messenger）。 这与<a href="./.html">第二十章 泛型</a>章节中的 <strong>Tuple2</strong> 基本相同，但名字更适合 <strong>Map</strong> 初始化。我还添加了静态的 <code>make()</code> 方法，以便为创建 <strong>Pair</strong> 对象提供一个更简洁的名字。</p><p>Java 8 的 <strong>Stream</strong> 提供了填充 <strong>Map</strong> 的便捷方法：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/StreamFillMaps.java</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.function.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.stream.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> onjava.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Letters</span></span>
<span class="line"><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Supplier</span><span style="color:#E1E4E8;">&lt;Pair&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt;&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> number </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> letter </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;A&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Pair&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Pair&lt;&gt;(number</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> letter</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">StreamFillMaps</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    Map&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; m </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      Stream.</span><span style="color:#B392F0;">generate</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Letters</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">limit</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">toMap</span><span style="color:#E1E4E8;">(Pair</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">key, Pair</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">value));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(m);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Two separate Suppliers:</span></span>
<span class="line"><span style="color:#E1E4E8;">    Rand.String rs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Rand.</span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    Count.Character cc </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Count.</span><span style="color:#B392F0;">Character</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    Map&lt;</span><span style="color:#F97583;">Character</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; mcs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Stream.</span><span style="color:#B392F0;">generate</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      () </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> Pair.</span><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;">(cc.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(), rs.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">()))</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">limit</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">toMap</span><span style="color:#E1E4E8;">(Pair</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">key, Pair</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">value));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(mcs);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// A key Supplier and a single value:</span></span>
<span class="line"><span style="color:#E1E4E8;">    Map&lt;</span><span style="color:#F97583;">Character</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; mcs2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Stream.</span><span style="color:#B392F0;">generate</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      () </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> Pair.</span><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;">(cc.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(), </span><span style="color:#9ECBFF;">&quot;Val&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">limit</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">toMap</span><span style="color:#E1E4E8;">(Pair</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">key, Pair</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">value));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(mcs2);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">{1=A, 2=B, 3=C, 4=D, 5=E, 6=F, 7=G, 8=H, 9=I, 10=J,</span></span>
<span class="line"><span style="color:#6A737D;">11=K}</span></span>
<span class="line"><span style="color:#6A737D;">{b=btp, c=enp, d=ccu, e=xsz, f=gvg, g=mei, h=nne,</span></span>
<span class="line"><span style="color:#6A737D;">i=elo}</span></span>
<span class="line"><span style="color:#6A737D;">{p=Val, q=Val, j=Val, k=Val, l=Val, m=Val, n=Val,</span></span>
<span class="line"><span style="color:#6A737D;">o=Val}</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/StreamFillMaps.java</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.function.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.stream.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> onjava.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Letters</span></span>
<span class="line"><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Supplier</span><span style="color:#24292E;">&lt;Pair&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt;&gt; {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> number </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> letter </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;A&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Pair&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Pair&lt;&gt;(number</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> letter</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StreamFillMaps</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    Map&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; m </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      Stream.</span><span style="color:#6F42C1;">generate</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Letters</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">limit</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">toMap</span><span style="color:#24292E;">(Pair</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">key, Pair</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">value));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(m);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Two separate Suppliers:</span></span>
<span class="line"><span style="color:#24292E;">    Rand.String rs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Rand.</span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    Count.Character cc </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Count.</span><span style="color:#6F42C1;">Character</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    Map&lt;</span><span style="color:#D73A49;">Character</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; mcs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Stream.</span><span style="color:#6F42C1;">generate</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      () </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> Pair.</span><span style="color:#6F42C1;">make</span><span style="color:#24292E;">(cc.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(), rs.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">()))</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">limit</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">toMap</span><span style="color:#24292E;">(Pair</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">key, Pair</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">value));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(mcs);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// A key Supplier and a single value:</span></span>
<span class="line"><span style="color:#24292E;">    Map&lt;</span><span style="color:#D73A49;">Character</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; mcs2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Stream.</span><span style="color:#6F42C1;">generate</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      () </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> Pair.</span><span style="color:#6F42C1;">make</span><span style="color:#24292E;">(cc.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(), </span><span style="color:#032F62;">&quot;Val&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">limit</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">toMap</span><span style="color:#24292E;">(Pair</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">key, Pair</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">value));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(mcs2);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">{1=A, 2=B, 3=C, 4=D, 5=E, 6=F, 7=G, 8=H, 9=I, 10=J,</span></span>
<span class="line"><span style="color:#6A737D;">11=K}</span></span>
<span class="line"><span style="color:#6A737D;">{b=btp, c=enp, d=ccu, e=xsz, f=gvg, g=mei, h=nne,</span></span>
<span class="line"><span style="color:#6A737D;">i=elo}</span></span>
<span class="line"><span style="color:#6A737D;">{p=Val, q=Val, j=Val, k=Val, l=Val, m=Val, n=Val,</span></span>
<span class="line"><span style="color:#6A737D;">o=Val}</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>上面的示例中出现了一个模式，可以使用它来创建一个自动创建和填充 <strong>Map</strong> 的工具：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// onjava/FillMap.java</span></span>
<span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> onjava;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.function.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.stream.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FillMap</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">K</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">V</span><span style="color:#E1E4E8;">&gt; Map&lt;</span><span style="color:#F97583;">K</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">V</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">basic</span><span style="color:#E1E4E8;">(Supplier&lt;Pair&lt;</span><span style="color:#F97583;">K</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">V</span><span style="color:#E1E4E8;">&gt;&gt; </span><span style="color:#FFAB70;">pairGen</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">size</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Stream.</span><span style="color:#B392F0;">generate</span><span style="color:#E1E4E8;">(pairGen)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">limit</span><span style="color:#E1E4E8;">(size)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">toMap</span><span style="color:#E1E4E8;">(Pair</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">key, Pair</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">value));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">K</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">V</span><span style="color:#E1E4E8;">&gt; Map&lt;</span><span style="color:#F97583;">K</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">V</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">basic</span><span style="color:#E1E4E8;">(Supplier&lt;</span><span style="color:#F97583;">K</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">keyGen</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        Supplier&lt;</span><span style="color:#F97583;">V</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">valueGen</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">size</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Stream.</span><span style="color:#B392F0;">generate</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      () </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> Pair.</span><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;">(keyGen.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(), valueGen.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">()))</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">limit</span><span style="color:#E1E4E8;">(size)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">toMap</span><span style="color:#E1E4E8;">(Pair</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">key, Pair</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">value));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">K</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">V</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">M</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> Map&lt;</span><span style="color:#F97583;">K</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">V</span><span style="color:#E1E4E8;">&gt;&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  M </span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(Supplier&lt;</span><span style="color:#F97583;">K</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">keyGen</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           Supplier&lt;</span><span style="color:#F97583;">V</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">valueGen</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">           Supplier&lt;</span><span style="color:#F97583;">M</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">mapSupplier</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">size</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Stream.</span><span style="color:#B392F0;">generate</span><span style="color:#E1E4E8;">( () </span><span style="color:#F97583;">-&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      Pair.</span><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;">(keyGen.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(), valueGen.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">()))</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">limit</span><span style="color:#E1E4E8;">(size)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors</span></span>
<span class="line"><span style="color:#E1E4E8;">          .</span><span style="color:#B392F0;">toMap</span><span style="color:#E1E4E8;">(Pair</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">key, Pair</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">value,</span></span>
<span class="line"><span style="color:#E1E4E8;">                 (k, v) </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> k, mapSupplier));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// onjava/FillMap.java</span></span>
<span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> onjava;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.function.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.stream.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FillMap</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">K</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">V</span><span style="color:#24292E;">&gt; Map&lt;</span><span style="color:#D73A49;">K</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">V</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">basic</span><span style="color:#24292E;">(Supplier&lt;Pair&lt;</span><span style="color:#D73A49;">K</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">V</span><span style="color:#24292E;">&gt;&gt; </span><span style="color:#E36209;">pairGen</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">size</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Stream.</span><span style="color:#6F42C1;">generate</span><span style="color:#24292E;">(pairGen)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">limit</span><span style="color:#24292E;">(size)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">toMap</span><span style="color:#24292E;">(Pair</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">key, Pair</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">value));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">K</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">V</span><span style="color:#24292E;">&gt; Map&lt;</span><span style="color:#D73A49;">K</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">V</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">basic</span><span style="color:#24292E;">(Supplier&lt;</span><span style="color:#D73A49;">K</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">keyGen</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        Supplier&lt;</span><span style="color:#D73A49;">V</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">valueGen</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">size</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Stream.</span><span style="color:#6F42C1;">generate</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      () </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> Pair.</span><span style="color:#6F42C1;">make</span><span style="color:#24292E;">(keyGen.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(), valueGen.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">()))</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">limit</span><span style="color:#24292E;">(size)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">toMap</span><span style="color:#24292E;">(Pair</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">key, Pair</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">value));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">K</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">V</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">M</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> Map&lt;</span><span style="color:#D73A49;">K</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">V</span><span style="color:#24292E;">&gt;&gt;</span></span>
<span class="line"><span style="color:#24292E;">  M </span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(Supplier&lt;</span><span style="color:#D73A49;">K</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">keyGen</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">           Supplier&lt;</span><span style="color:#D73A49;">V</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">valueGen</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">           Supplier&lt;</span><span style="color:#D73A49;">M</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">mapSupplier</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">size</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Stream.</span><span style="color:#6F42C1;">generate</span><span style="color:#24292E;">( () </span><span style="color:#D73A49;">-&gt;</span></span>
<span class="line"><span style="color:#24292E;">      Pair.</span><span style="color:#6F42C1;">make</span><span style="color:#24292E;">(keyGen.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(), valueGen.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">()))</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">limit</span><span style="color:#24292E;">(size)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors</span></span>
<span class="line"><span style="color:#24292E;">          .</span><span style="color:#6F42C1;">toMap</span><span style="color:#24292E;">(Pair</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">key, Pair</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">value,</span></span>
<span class="line"><span style="color:#24292E;">                 (k, v) </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> k, mapSupplier));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>basic() 方法生成一个默认的 <strong>Map</strong> ，而 <code>create()</code> 方法允许指定一个确切的 <strong>Map</strong> 类型，并返回那个确切的类型。</p><p>下面是一个测试：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/FillMapTest.java</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.function.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.stream.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> onjava.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FillMapTest</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    Map&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">&gt; mcs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> FillMap.</span><span style="color:#B392F0;">basic</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Rand.</span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">), </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Count.</span><span style="color:#B392F0;">Integer</span><span style="color:#E1E4E8;">(), </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(mcs);</span></span>
<span class="line"><span style="color:#E1E4E8;">    HashMap&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">&gt; hashm </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      FillMap.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Rand.</span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Count.</span><span style="color:#B392F0;">Integer</span><span style="color:#E1E4E8;">(), HashMap</span><span style="color:#F97583;">::new</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(hashm);</span></span>
<span class="line"><span style="color:#E1E4E8;">    LinkedHashMap&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">&gt; linkm </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      FillMap.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Rand.</span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Count.</span><span style="color:#B392F0;">Integer</span><span style="color:#E1E4E8;">(), LinkedHashMap</span><span style="color:#F97583;">::new</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(linkm);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">{npcc=1, ztdv=6, gvgm=3, btpe=0, einn=4, eelo=5,</span></span>
<span class="line"><span style="color:#6A737D;">uxsz=2}</span></span>
<span class="line"><span style="color:#6A737D;">{npcc=1, ztdv=6, gvgm=3, btpe=0, einn=4, eelo=5,</span></span>
<span class="line"><span style="color:#6A737D;">uxsz=2}</span></span>
<span class="line"><span style="color:#6A737D;">{btpe=0, npcc=1, uxsz=2, gvgm=3, einn=4, eelo=5,</span></span>
<span class="line"><span style="color:#6A737D;">ztdv=6}</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/FillMapTest.java</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.function.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.stream.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> onjava.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FillMapTest</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">&gt; mcs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FillMap.</span><span style="color:#6F42C1;">basic</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Rand.</span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">), </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Count.</span><span style="color:#6F42C1;">Integer</span><span style="color:#24292E;">(), </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(mcs);</span></span>
<span class="line"><span style="color:#24292E;">    HashMap&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">&gt; hashm </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      FillMap.</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Rand.</span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Count.</span><span style="color:#6F42C1;">Integer</span><span style="color:#24292E;">(), HashMap</span><span style="color:#D73A49;">::new</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(hashm);</span></span>
<span class="line"><span style="color:#24292E;">    LinkedHashMap&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">&gt; linkm </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      FillMap.</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Rand.</span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Count.</span><span style="color:#6F42C1;">Integer</span><span style="color:#24292E;">(), LinkedHashMap</span><span style="color:#D73A49;">::new</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(linkm);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">{npcc=1, ztdv=6, gvgm=3, btpe=0, einn=4, eelo=5,</span></span>
<span class="line"><span style="color:#6A737D;">uxsz=2}</span></span>
<span class="line"><span style="color:#6A737D;">{npcc=1, ztdv=6, gvgm=3, btpe=0, einn=4, eelo=5,</span></span>
<span class="line"><span style="color:#6A737D;">uxsz=2}</span></span>
<span class="line"><span style="color:#6A737D;">{btpe=0, npcc=1, uxsz=2, gvgm=3, einn=4, eelo=5,</span></span>
<span class="line"><span style="color:#6A737D;">ztdv=6}</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><h2 id="使用享元-flyweight-自定义collection和map" tabindex="-1">使用享元（Flyweight）自定义Collection和Map <a class="header-anchor" href="#使用享元-flyweight-自定义collection和map" aria-label="Permalink to &quot;使用享元（Flyweight）自定义Collection和Map&quot;">​</a></h2><p>本节介绍如何创建自定义 <strong>Collection</strong> 和 <strong>Map</strong> 实现。每个 <strong>java.util</strong> 中的集合都有自己的 <strong>Abstract</strong> 类，它提供了该集合的部分实现，因此只需要实现必要的方法来生成所需的集合。你将看到通过继承 <strong>java.util.Abstract</strong> 类来创建自定义 <strong>Map</strong> 和 <strong>Collection</strong> 是多么简单。例如，要创建一个只读的 <strong>Set</strong> ，则可以从 <strong>AbstractSet</strong> 继承并实现 <code>iterator()</code> 和 <code>size()</code> 。最后一个示例是生成测试数据的另一种方法。生成的集合通常是只读的，并且所提供的方法最少。</p><p>该解决方案还演示了 <em>享元</em> （Flyweight）设计模式。当普通解决方案需要太多对象时，或者当生成普通对象占用太多空间时，可以使用享元。享元设计模式将对象的一部分外部化（externalizes）。相比于把对象的所有内容都包含在对象中，这样做使得对象的部分或者全部可以在更有效的外部表中查找，或通过一些节省空间的其他计算生成。</p><p>下面是一个可以是任何大小的 <strong>List</strong> ，并且（有效地）使用 <strong>Integer</strong> 数据进行预初始化。要从 <strong>AbstractList</strong> 创建只读 <strong>List</strong> ，必须实现 <code>get()</code> 和 <code>size()</code>：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// onjava/CountingIntegerList.java</span></span>
<span class="line"><span style="color:#6A737D;">// List of any length, containing sample data</span></span>
<span class="line"><span style="color:#6A737D;">// {java onjava.CountingIntegerList}</span></span>
<span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> onjava;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CountingIntegerList</span></span>
<span class="line"><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AbstractList</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> size;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CountingIntegerList</span><span style="color:#E1E4E8;">() { size </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CountingIntegerList</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">size</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.size </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> size </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> size;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Integer </span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">index</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> index;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> size; }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    List&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">&gt; cil </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CountingIntegerList</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(cil);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(cil.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,</span></span>
<span class="line"><span style="color:#6A737D;">16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]</span></span>
<span class="line"><span style="color:#6A737D;">500</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// onjava/CountingIntegerList.java</span></span>
<span class="line"><span style="color:#6A737D;">// List of any length, containing sample data</span></span>
<span class="line"><span style="color:#6A737D;">// {java onjava.CountingIntegerList}</span></span>
<span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> onjava;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CountingIntegerList</span></span>
<span class="line"><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AbstractList</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> size;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CountingIntegerList</span><span style="color:#24292E;">() { size </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CountingIntegerList</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">size</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.size </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> size </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> size;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Integer </span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">index</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> index;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">() { </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> size; }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    List&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">&gt; cil </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CountingIntegerList</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">30</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(cil);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(cil.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">500</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,</span></span>
<span class="line"><span style="color:#6A737D;">16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]</span></span>
<span class="line"><span style="color:#6A737D;">500</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>只有当想要限制 <strong>List</strong> 的长度时， <strong>size</strong> 值才是重要的，就像在主方法中那样。即使在这种情况下， <code>get()</code> 也会产生任何值。</p><p>这个类是享元模式的一个简洁的例子。当需要的时候， <code>get()</code> “计算”所需的值，因此没必要存储和初始化实际的底层 <strong>List</strong> 结构。</p><p>在大多数程序中，这里所保存的存储结构永远都不会改变。但是，它允许用非常大的 <strong>index</strong> 来调用 <code>List.get()</code> ，而 <strong>List</strong> 并不需要填充到这么大。此外，还可以在程序中大量使用 <strong>CountingIntegerLists</strong> 而无需担心存储问题。实际上，享元的一个好处是它允许使用更好的抽象而不用担心资源。</p><p>可以使用享元设计模式来实现具有任何大小数据集的其他“初始化”自定义集合。下面是一个 <strong>Map</strong> ，它为每一个 <strong>Integer</strong> 键产生唯一的值：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// onjava/CountMap.java</span></span>
<span class="line"><span style="color:#6A737D;">// Unlimited-length Map containing sample data</span></span>
<span class="line"><span style="color:#6A737D;">// {java onjava.CountMap}</span></span>
<span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> onjava;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.stream.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CountMap</span></span>
<span class="line"><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AbstractMap</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> size;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;">[] chars </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">toCharArray</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span></span>
<span class="line"><span style="color:#E1E4E8;">      chars[key </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> chars.length] </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">      Integer.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">(key </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> chars.length);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CountMap</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">size</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.size </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> size </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> size;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(Object </span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">((Integer)key);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Entry</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Map.Entry</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> index;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Entry</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">index</span><span style="color:#E1E4E8;">) { </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.index </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> index; }</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(Object </span><span style="color:#FFAB70;">o</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> o </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> Entry </span><span style="color:#F97583;">&amp;&amp;</span></span>
<span class="line"><span style="color:#E1E4E8;">        Objects.</span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(index, ((Entry)o).index);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Integer </span><span style="color:#B392F0;">getKey</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> index; }</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">getValue</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">(index);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">setValue</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">UnsupportedOperationException</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hashCode</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Objects.</span><span style="color:#B392F0;">hashCode</span><span style="color:#E1E4E8;">(index);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Set&lt;</span><span style="color:#F97583;">Map</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">Entry</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt;&gt; </span><span style="color:#B392F0;">entrySet</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// LinkedHashSet retains initialization order:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> IntStream.</span><span style="color:#B392F0;">range</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, size)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">mapToObj</span><span style="color:#E1E4E8;">(Entry</span><span style="color:#F97583;">::new</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">toCollection</span><span style="color:#E1E4E8;">(LinkedHashSet</span><span style="color:#F97583;">::new</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> size </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    CountMap cm </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CountMap</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(cm);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(cm.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    cm.</span><span style="color:#B392F0;">values</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">limit</span><span style="color:#E1E4E8;">(size)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">(System.out</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">println);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Random</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">47</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">ints</span><span style="color:#E1E4E8;">(size, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">mapToObj</span><span style="color:#E1E4E8;">(cm</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">get)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">(System.out</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">println);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">{0=A0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0, 6=G0, 7=H0, 8=I0,</span></span>
<span class="line"><span style="color:#6A737D;">9=J0, 10=K0, 11=L0, 12=M0, 13=N0, 14=O0, 15=P0, 16=Q0,</span></span>
<span class="line"><span style="color:#6A737D;">17=R0, 18=S0, 19=T0, 20=U0, 21=V0, 22=W0, 23=X0, 24=Y0,</span></span>
<span class="line"><span style="color:#6A737D;">25=Z0, 26=A1, 27=B1, 28=C1, 29=D1, 30=E1, 31=F1, 32=G1,</span></span>
<span class="line"><span style="color:#6A737D;">33=H1, 34=I1, 35=J1, 36=K1, 37=L1, 38=M1, 39=N1, 40=O1,</span></span>
<span class="line"><span style="color:#6A737D;">41=P1, 42=Q1, 43=R1, 44=S1, 45=T1, 46=U1, 47=V1, 48=W1,</span></span>
<span class="line"><span style="color:#6A737D;">49=X1, 50=Y1, 51=Z1, 52=A2, 53=B2, 54=C2, 55=D2, 56=E2,</span></span>
<span class="line"><span style="color:#6A737D;">57=F2, 58=G2, 59=H2}</span></span>
<span class="line"><span style="color:#6A737D;">G19</span></span>
<span class="line"><span style="color:#6A737D;">A0</span></span>
<span class="line"><span style="color:#6A737D;">B0</span></span>
<span class="line"><span style="color:#6A737D;">C0</span></span>
<span class="line"><span style="color:#6A737D;">D0</span></span>
<span class="line"><span style="color:#6A737D;">E0</span></span>
<span class="line"><span style="color:#6A737D;">F0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">Y9</span></span>
<span class="line"><span style="color:#6A737D;">J21</span></span>
<span class="line"><span style="color:#6A737D;">R26</span></span>
<span class="line"><span style="color:#6A737D;">D33</span></span>
<span class="line"><span style="color:#6A737D;">Z36</span></span>
<span class="line"><span style="color:#6A737D;">N16</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// onjava/CountMap.java</span></span>
<span class="line"><span style="color:#6A737D;">// Unlimited-length Map containing sample data</span></span>
<span class="line"><span style="color:#6A737D;">// {java onjava.CountMap}</span></span>
<span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> onjava;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.stream.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CountMap</span></span>
<span class="line"><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AbstractMap</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> size;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;">[] chars </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">toCharArray</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">key</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span></span>
<span class="line"><span style="color:#24292E;">      chars[key </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> chars.length] </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">      Integer.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">(key </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> chars.length);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CountMap</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">size</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.size </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> size </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> size;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(Object </span><span style="color:#E36209;">key</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">((Integer)key);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Entry</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Map.Entry</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> index;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Entry</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">index</span><span style="color:#24292E;">) { </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> index; }</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(Object </span><span style="color:#E36209;">o</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> o </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> Entry </span><span style="color:#D73A49;">&amp;&amp;</span></span>
<span class="line"><span style="color:#24292E;">        Objects.</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(index, ((Entry)o).index);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Integer </span><span style="color:#6F42C1;">getKey</span><span style="color:#24292E;">() { </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> index; }</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">getValue</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">(index);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">setValue</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">value</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UnsupportedOperationException</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hashCode</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Objects.</span><span style="color:#6F42C1;">hashCode</span><span style="color:#24292E;">(index);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Set&lt;</span><span style="color:#D73A49;">Map</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">Entry</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt;&gt; </span><span style="color:#6F42C1;">entrySet</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// LinkedHashSet retains initialization order:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> IntStream.</span><span style="color:#6F42C1;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, size)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">mapToObj</span><span style="color:#24292E;">(Entry</span><span style="color:#D73A49;">::new</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">toCollection</span><span style="color:#24292E;">(LinkedHashSet</span><span style="color:#D73A49;">::new</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> size </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    CountMap cm </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CountMap</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">60</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(cm);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(cm.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">500</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    cm.</span><span style="color:#6F42C1;">values</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">limit</span><span style="color:#24292E;">(size)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(System.out</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">println);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Random</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">47</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">ints</span><span style="color:#24292E;">(size, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">mapToObj</span><span style="color:#24292E;">(cm</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">get)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(System.out</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">println);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">{0=A0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0, 6=G0, 7=H0, 8=I0,</span></span>
<span class="line"><span style="color:#6A737D;">9=J0, 10=K0, 11=L0, 12=M0, 13=N0, 14=O0, 15=P0, 16=Q0,</span></span>
<span class="line"><span style="color:#6A737D;">17=R0, 18=S0, 19=T0, 20=U0, 21=V0, 22=W0, 23=X0, 24=Y0,</span></span>
<span class="line"><span style="color:#6A737D;">25=Z0, 26=A1, 27=B1, 28=C1, 29=D1, 30=E1, 31=F1, 32=G1,</span></span>
<span class="line"><span style="color:#6A737D;">33=H1, 34=I1, 35=J1, 36=K1, 37=L1, 38=M1, 39=N1, 40=O1,</span></span>
<span class="line"><span style="color:#6A737D;">41=P1, 42=Q1, 43=R1, 44=S1, 45=T1, 46=U1, 47=V1, 48=W1,</span></span>
<span class="line"><span style="color:#6A737D;">49=X1, 50=Y1, 51=Z1, 52=A2, 53=B2, 54=C2, 55=D2, 56=E2,</span></span>
<span class="line"><span style="color:#6A737D;">57=F2, 58=G2, 59=H2}</span></span>
<span class="line"><span style="color:#6A737D;">G19</span></span>
<span class="line"><span style="color:#6A737D;">A0</span></span>
<span class="line"><span style="color:#6A737D;">B0</span></span>
<span class="line"><span style="color:#6A737D;">C0</span></span>
<span class="line"><span style="color:#6A737D;">D0</span></span>
<span class="line"><span style="color:#6A737D;">E0</span></span>
<span class="line"><span style="color:#6A737D;">F0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">Y9</span></span>
<span class="line"><span style="color:#6A737D;">J21</span></span>
<span class="line"><span style="color:#6A737D;">R26</span></span>
<span class="line"><span style="color:#6A737D;">D33</span></span>
<span class="line"><span style="color:#6A737D;">Z36</span></span>
<span class="line"><span style="color:#6A737D;">N16</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>要创建一个只读的 <strong>Map</strong> ，则从 <strong>AbstractMap</strong> 继承并实现 <code>entrySet()</code> 。私有的 <code>value()</code> 方法计算任何键的值，并在 <code>get()</code> 和 <code>Entry.getValue()</code> 中使用。可以忽略 <strong>CountMap</strong> 的大小。</p><p>这里是使用了 <strong>LinkedHashSet</strong> 而不是创建自定义 <strong>Set</strong> 类，因此并未完全实现享元。只有在调用 <code>entrySet()</code> 时才会生成此对象。</p><p>现在创建一个更复杂的享元。这个示例中的数据集是世界各国及其首都的 <strong>Map</strong> 。 <code>capitals()</code> 方法生成一个国家和首都的 <strong>Map</strong> 。 <code>names()</code> 方法生成一个由国家名字组成的 <strong>List</strong> 。 当给定了表示所需大小的 <strong>int</strong> 参数时，两种方法都生成对应大小的列表片段：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// onjava/Countries.java</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;Flyweight&quot; Maps and Lists of sample data</span></span>
<span class="line"><span style="color:#6A737D;">// {java onjava.Countries}</span></span>
<span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> onjava;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Countries</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[][] DATA </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Africa</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;ALGERIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Algiers&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;ANGOLA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Luanda&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;BENIN&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Porto-Novo&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;BOTSWANA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Gaberone&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;BURKINA FASO&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Ouagadougou&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;BURUNDI&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Bujumbura&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;CAMEROON&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Yaounde&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;CAPE VERDE&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Praia&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;CENTRAL AFRICAN REPUBLIC&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Bangui&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;CHAD&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;N&#39;djamena&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;COMOROS&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Moroni&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;CONGO&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Brazzaville&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;DJIBOUTI&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Dijibouti&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;EGYPT&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Cairo&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;EQUATORIAL GUINEA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Malabo&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;ERITREA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Asmara&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;ETHIOPIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Addis Ababa&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;GABON&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Libreville&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;THE GAMBIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Banjul&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;GHANA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Accra&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;GUINEA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Conakry&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;BISSAU&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Bissau&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;COTE D&#39;IVOIR (IVORY COAST)&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Yamoussoukro&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;KENYA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Nairobi&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;LESOTHO&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Maseru&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;LIBERIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Monrovia&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;LIBYA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Tripoli&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;MADAGASCAR&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Antananarivo&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;MALAWI&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Lilongwe&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;MALI&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Bamako&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;MAURITANIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Nouakchott&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;MAURITIUS&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Port Louis&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;MOROCCO&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Rabat&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;MOZAMBIQUE&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Maputo&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;NAMIBIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Windhoek&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;NIGER&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Niamey&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;NIGERIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Abuja&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;RWANDA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Kigali&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;SAO TOME E PRINCIPE&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Sao Tome&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;SENEGAL&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Dakar&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;SEYCHELLES&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Victoria&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;SIERRA LEONE&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Freetown&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;SOMALIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Mogadishu&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;SOUTH AFRICA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Pretoria/Cape Town&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;SUDAN&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Khartoum&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;SWAZILAND&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Mbabane&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;TANZANIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Dodoma&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;TOGO&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Lome&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;TUNISIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Tunis&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;UGANDA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Kampala&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;DEMOCRATIC REPUBLIC OF THE CONGO (ZAIRE)&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#9ECBFF;">&quot;Kinshasa&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;ZAMBIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Lusaka&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;ZIMBABWE&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Harare&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Asia</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;AFGHANISTAN&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Kabul&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;BAHRAIN&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Manama&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;BANGLADESH&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Dhaka&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;BHUTAN&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Thimphu&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;BRUNEI&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Bandar Seri Begawan&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;CAMBODIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Phnom Penh&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;CHINA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Beijing&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;CYPRUS&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Nicosia&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;INDIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;New Delhi&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;INDONESIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Jakarta&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;IRAN&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Tehran&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;IRAQ&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Baghdad&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;ISRAEL&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Jerusalem&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;JAPAN&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Tokyo&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;JORDAN&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Amman&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;KUWAIT&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Kuwait City&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;LAOS&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Vientiane&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;LEBANON&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Beirut&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;MALAYSIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Kuala Lumpur&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;THE MALDIVES&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Male&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;MONGOLIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Ulan Bator&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;MYANMAR (BURMA)&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Rangoon&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;NEPAL&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Katmandu&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;NORTH KOREA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;P&#39;yongyang&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;OMAN&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Muscat&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;PAKISTAN&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Islamabad&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;PHILIPPINES&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Manila&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;QATAR&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Doha&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;SAUDI ARABIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Riyadh&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;SINGAPORE&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Singapore&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;SOUTH KOREA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Seoul&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;SRI LANKA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Colombo&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;SYRIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Damascus&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;TAIWAN (REPUBLIC OF CHINA)&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Taipei&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;THAILAND&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Bangkok&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;TURKEY&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Ankara&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;UNITED ARAB EMIRATES&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Abu Dhabi&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;VIETNAM&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Hanoi&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;YEMEN&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Sana&#39;a&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Australia and Oceania</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;AUSTRALIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Canberra&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;FIJI&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Suva&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;KIRIBATI&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Bairiki&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;MARSHALL ISLANDS&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Dalap-Uliga-Darrit&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;MICRONESIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Palikir&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;NAURU&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Yaren&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;NEW ZEALAND&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Wellington&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;PALAU&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Koror&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;PAPUA NEW GUINEA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Port Moresby&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;SOLOMON ISLANDS&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Honaira&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;TONGA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Nuku&#39;alofa&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;TUVALU&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Fongafale&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;VANUATU&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Port Vila&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;WESTERN SAMOA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Apia&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Eastern Europe and former USSR</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;ARMENIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Yerevan&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;AZERBAIJAN&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Baku&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;BELARUS (BYELORUSSIA)&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Minsk&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;BULGARIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Sofia&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;GEORGIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Tbilisi&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;KAZAKSTAN&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Almaty&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;KYRGYZSTAN&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Alma-Ata&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;MOLDOVA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Chisinau&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;RUSSIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Moscow&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;TAJIKISTAN&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Dushanbe&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;TURKMENISTAN&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Ashkabad&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;UKRAINE&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Kyiv&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;UZBEKISTAN&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Tashkent&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Europe</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;ALBANIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Tirana&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;ANDORRA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Andorra la Vella&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;AUSTRIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Vienna&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;BELGIUM&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Brussels&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;BOSNIA-HERZEGOVINA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Sarajevo&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;CROATIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Zagreb&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;CZECH REPUBLIC&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Prague&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;DENMARK&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Copenhagen&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;ESTONIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Tallinn&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;FINLAND&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Helsinki&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;FRANCE&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Paris&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;GERMANY&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Berlin&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;GREECE&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Athens&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;HUNGARY&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Budapest&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;ICELAND&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Reykjavik&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;IRELAND&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Dublin&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;ITALY&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Rome&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;LATVIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Riga&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;LIECHTENSTEIN&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Vaduz&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;LITHUANIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Vilnius&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;LUXEMBOURG&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Luxembourg&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;MACEDONIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Skopje&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;MALTA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Valletta&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;MONACO&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Monaco&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;MONTENEGRO&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Podgorica&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;THE NETHERLANDS&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Amsterdam&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;NORWAY&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Oslo&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;POLAND&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Warsaw&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;PORTUGAL&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Lisbon&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;ROMANIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Bucharest&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;SAN MARINO&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;San Marino&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;SERBIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Belgrade&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;SLOVAKIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Bratislava&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;SLOVENIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Ljuijana&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;SPAIN&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Madrid&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;SWEDEN&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Stockholm&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;SWITZERLAND&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Berne&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;UNITED KINGDOM&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;London&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;VATICAN CITY&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Vatican City&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// North and Central America</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;ANTIGUA AND BARBUDA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Saint John&#39;s&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;BAHAMAS&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Nassau&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;BARBADOS&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Bridgetown&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;BELIZE&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Belmopan&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;CANADA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Ottawa&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;COSTA RICA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;San Jose&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;CUBA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Havana&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;DOMINICA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Roseau&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;DOMINICAN REPUBLIC&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Santo Domingo&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;EL SALVADOR&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;San Salvador&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;GRENADA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Saint George&#39;s&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;GUATEMALA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Guatemala City&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;HAITI&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Port-au-Prince&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;HONDURAS&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Tegucigalpa&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;JAMAICA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Kingston&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;MEXICO&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Mexico City&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;NICARAGUA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Managua&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;PANAMA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Panama City&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;ST. KITTS AND NEVIS&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Basseterre&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;ST. LUCIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Castries&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;ST. VINCENT AND THE GRENADINES&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Kingstown&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;UNITED STATES OF AMERICA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Washington, D.C.&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// South America</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;ARGENTINA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Buenos Aires&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;BOLIVIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Sucre (legal)/La Paz(administrative)&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;BRAZIL&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Brasilia&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;CHILE&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Santiago&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;COLOMBIA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Bogota&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;ECUADOR&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Quito&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;GUYANA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Georgetown&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;PARAGUAY&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Asuncion&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;PERU&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Lima&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;SURINAME&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Paramaribo&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;TRINIDAD AND TOBAGO&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Port of Spain&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;URUGUAY&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Montevideo&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span><span style="color:#9ECBFF;">&quot;VENEZUELA&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Caracas&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">  };</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// Use AbstractMap by implementing entrySet()</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FlyweightMap</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AbstractMap</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Entry</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Map.Entry</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> index;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">Entry</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">index</span><span style="color:#E1E4E8;">) { </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.index </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> index; }</span></span>
<span class="line"><span style="color:#E1E4E8;">      @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(Object </span><span style="color:#FFAB70;">o</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> o </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> FlyweightMap </span><span style="color:#F97583;">&amp;&amp;</span></span>
<span class="line"><span style="color:#E1E4E8;">          Objects.</span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">DATA</span><span style="color:#E1E4E8;">[index][</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">], o);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hashCode</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Objects.</span><span style="color:#B392F0;">hashCode</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">DATA</span><span style="color:#E1E4E8;">[index][</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">getKey</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">DATA</span><span style="color:#E1E4E8;">[index][</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]; }</span></span>
<span class="line"><span style="color:#E1E4E8;">      @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">getValue</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">DATA</span><span style="color:#E1E4E8;">[index][</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">setValue</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">UnsupportedOperationException</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Implement size() &amp; iterator() for AbstractSet:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">EntrySet</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AbstractSet</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">Map</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">Entry</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt;&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> size;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">EntrySet</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">size</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(size </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.size </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// Can&#39;t be any bigger than the array:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(size </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> DATA.length)</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.size </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> DATA.length;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.size </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> size;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> size; }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Iter</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Iterator</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">Map</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">Entry</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt;&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// Only one Entry object per Iterator:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> Entry entry </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Entry</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hasNext</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> entry.index </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> size </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Map.Entry&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">          entry.index</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> entry;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">UnsupportedOperationException</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">public</span></span>
<span class="line"><span style="color:#E1E4E8;">      Iterator&lt;</span><span style="color:#F97583;">Map</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">Entry</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt;&gt; </span><span style="color:#B392F0;">iterator</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Iter</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span></span>
<span class="line"><span style="color:#E1E4E8;">    Set&lt;</span><span style="color:#F97583;">Map</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">Entry</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt;&gt; entries </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">EntrySet</span><span style="color:#E1E4E8;">(DATA.length);</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Set&lt;</span><span style="color:#F97583;">Map</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">Entry</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt;&gt; </span><span style="color:#B392F0;">entrySet</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> entries;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// Create a partial map of &#39;size&#39; countries:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Map&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#B392F0;">select</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">size</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FlyweightMap</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">      @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Set&lt;</span><span style="color:#F97583;">Map</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">Entry</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt;&gt; </span><span style="color:#B392F0;">entrySet</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">EntrySet</span><span style="color:#E1E4E8;">(size);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    };</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Map&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; map </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FlyweightMap</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Map&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#B392F0;">capitals</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> map; </span><span style="color:#6A737D;">// The entire map</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Map&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#B392F0;">capitals</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">size</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">select</span><span style="color:#E1E4E8;">(size); </span><span style="color:#6A737D;">// A partial map</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; names </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;(map.</span><span style="color:#B392F0;">keySet</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// All the names:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#B392F0;">names</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> names; }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// A partial list:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#B392F0;">names</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">size</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;(</span><span style="color:#B392F0;">select</span><span style="color:#E1E4E8;">(size).</span><span style="color:#B392F0;">keySet</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">capitals</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">names</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> HashMap&lt;&gt;(</span><span style="color:#B392F0;">capitals</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">)));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedHashMap&lt;&gt;(</span><span style="color:#B392F0;">capitals</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">)));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> TreeMap&lt;&gt;(</span><span style="color:#B392F0;">capitals</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">)));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Hashtable&lt;&gt;(</span><span style="color:#B392F0;">capitals</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">)));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> HashSet&lt;&gt;(</span><span style="color:#B392F0;">names</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">)));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedHashSet&lt;&gt;(</span><span style="color:#B392F0;">names</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">)));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> TreeSet&lt;&gt;(</span><span style="color:#B392F0;">names</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">)));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;(</span><span style="color:#B392F0;">names</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">)));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedList&lt;&gt;(</span><span style="color:#B392F0;">names</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">)));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">capitals</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;BRAZIL&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">{ALGERIA=Algiers, ANGOLA=Luanda, BENIN=Porto-Novo,</span></span>
<span class="line"><span style="color:#6A737D;">BOTSWANA=Gaberone, BURKINA FASO=Ouagadougou,</span></span>
<span class="line"><span style="color:#6A737D;">BURUNDI=Bujumbura, CAMEROON=Yaounde, CAPE VERDE=Praia,</span></span>
<span class="line"><span style="color:#6A737D;">CENTRAL AFRICAN REPUBLIC=Bangui, CHAD=N&#39;djamena}</span></span>
<span class="line"><span style="color:#6A737D;">[ALGERIA, ANGOLA, BENIN, BOTSWANA, BURKINA FASO,</span></span>
<span class="line"><span style="color:#6A737D;">BURUNDI, CAMEROON, CAPE VERDE, CENTRAL AFRICAN</span></span>
<span class="line"><span style="color:#6A737D;">REPUBLIC, CHAD]</span></span>
<span class="line"><span style="color:#6A737D;">{BENIN=Porto-Novo, ANGOLA=Luanda, ALGERIA=Algiers}</span></span>
<span class="line"><span style="color:#6A737D;">{ALGERIA=Algiers, ANGOLA=Luanda, BENIN=Porto-Novo}</span></span>
<span class="line"><span style="color:#6A737D;">{ALGERIA=Algiers, ANGOLA=Luanda, BENIN=Porto-Novo}</span></span>
<span class="line"><span style="color:#6A737D;">{ALGERIA=Algiers, ANGOLA=Luanda, BENIN=Porto-Novo}</span></span>
<span class="line"><span style="color:#6A737D;">[BENIN, BOTSWANA, ANGOLA, BURKINA FASO, ALGERIA,</span></span>
<span class="line"><span style="color:#6A737D;">BURUNDI]</span></span>
<span class="line"><span style="color:#6A737D;">[ALGERIA, ANGOLA, BENIN, BOTSWANA, BURKINA FASO,</span></span>
<span class="line"><span style="color:#6A737D;">BURUNDI]</span></span>
<span class="line"><span style="color:#6A737D;">[ALGERIA, ANGOLA, BENIN, BOTSWANA, BURKINA FASO,</span></span>
<span class="line"><span style="color:#6A737D;">BURUNDI]</span></span>
<span class="line"><span style="color:#6A737D;">[ALGERIA, ANGOLA, BENIN, BOTSWANA, BURKINA FASO,</span></span>
<span class="line"><span style="color:#6A737D;">BURUNDI]</span></span>
<span class="line"><span style="color:#6A737D;">[ALGERIA, ANGOLA, BENIN, BOTSWANA, BURKINA FASO,</span></span>
<span class="line"><span style="color:#6A737D;">BURUNDI]</span></span>
<span class="line"><span style="color:#6A737D;">Brasilia</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// onjava/Countries.java</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;Flyweight&quot; Maps and Lists of sample data</span></span>
<span class="line"><span style="color:#6A737D;">// {java onjava.Countries}</span></span>
<span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> onjava;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Countries</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[][] DATA </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Africa</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;ALGERIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Algiers&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;ANGOLA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Luanda&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;BENIN&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Porto-Novo&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;BOTSWANA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Gaberone&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;BURKINA FASO&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Ouagadougou&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;BURUNDI&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Bujumbura&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;CAMEROON&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Yaounde&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;CAPE VERDE&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Praia&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;CENTRAL AFRICAN REPUBLIC&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Bangui&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;CHAD&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;N&#39;djamena&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;COMOROS&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Moroni&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;CONGO&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Brazzaville&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;DJIBOUTI&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Dijibouti&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;EGYPT&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Cairo&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;EQUATORIAL GUINEA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Malabo&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;ERITREA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Asmara&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;ETHIOPIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Addis Ababa&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;GABON&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Libreville&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;THE GAMBIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Banjul&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;GHANA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Accra&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;GUINEA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Conakry&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;BISSAU&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Bissau&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;COTE D&#39;IVOIR (IVORY COAST)&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Yamoussoukro&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;KENYA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Nairobi&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;LESOTHO&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Maseru&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;LIBERIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Monrovia&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;LIBYA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Tripoli&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;MADAGASCAR&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Antananarivo&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;MALAWI&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Lilongwe&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;MALI&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Bamako&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;MAURITANIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Nouakchott&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;MAURITIUS&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Port Louis&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;MOROCCO&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Rabat&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;MOZAMBIQUE&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Maputo&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;NAMIBIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Windhoek&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;NIGER&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Niamey&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;NIGERIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Abuja&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;RWANDA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Kigali&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;SAO TOME E PRINCIPE&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Sao Tome&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;SENEGAL&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Dakar&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;SEYCHELLES&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Victoria&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;SIERRA LEONE&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Freetown&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;SOMALIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Mogadishu&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;SOUTH AFRICA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Pretoria/Cape Town&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;SUDAN&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Khartoum&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;SWAZILAND&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Mbabane&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;TANZANIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Dodoma&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;TOGO&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Lome&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;TUNISIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Tunis&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;UGANDA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Kampala&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;DEMOCRATIC REPUBLIC OF THE CONGO (ZAIRE)&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#032F62;">&quot;Kinshasa&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;ZAMBIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Lusaka&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;ZIMBABWE&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Harare&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Asia</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;AFGHANISTAN&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Kabul&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;BAHRAIN&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Manama&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;BANGLADESH&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Dhaka&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;BHUTAN&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Thimphu&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;BRUNEI&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Bandar Seri Begawan&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;CAMBODIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Phnom Penh&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;CHINA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Beijing&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;CYPRUS&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Nicosia&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;INDIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;New Delhi&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;INDONESIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Jakarta&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;IRAN&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Tehran&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;IRAQ&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Baghdad&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;ISRAEL&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Jerusalem&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;JAPAN&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Tokyo&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;JORDAN&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Amman&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;KUWAIT&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Kuwait City&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;LAOS&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Vientiane&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;LEBANON&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Beirut&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;MALAYSIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Kuala Lumpur&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;THE MALDIVES&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Male&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;MONGOLIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Ulan Bator&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;MYANMAR (BURMA)&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Rangoon&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;NEPAL&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Katmandu&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;NORTH KOREA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;P&#39;yongyang&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;OMAN&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Muscat&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;PAKISTAN&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Islamabad&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;PHILIPPINES&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Manila&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;QATAR&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Doha&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;SAUDI ARABIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Riyadh&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;SINGAPORE&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Singapore&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;SOUTH KOREA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Seoul&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;SRI LANKA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Colombo&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;SYRIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Damascus&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;TAIWAN (REPUBLIC OF CHINA)&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Taipei&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;THAILAND&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Bangkok&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;TURKEY&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Ankara&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;UNITED ARAB EMIRATES&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Abu Dhabi&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;VIETNAM&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Hanoi&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;YEMEN&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Sana&#39;a&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Australia and Oceania</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;AUSTRALIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Canberra&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;FIJI&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Suva&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;KIRIBATI&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Bairiki&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;MARSHALL ISLANDS&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Dalap-Uliga-Darrit&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;MICRONESIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Palikir&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;NAURU&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Yaren&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;NEW ZEALAND&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Wellington&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;PALAU&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Koror&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;PAPUA NEW GUINEA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Port Moresby&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;SOLOMON ISLANDS&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Honaira&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;TONGA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Nuku&#39;alofa&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;TUVALU&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Fongafale&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;VANUATU&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Port Vila&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;WESTERN SAMOA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Apia&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Eastern Europe and former USSR</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;ARMENIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Yerevan&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;AZERBAIJAN&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Baku&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;BELARUS (BYELORUSSIA)&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Minsk&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;BULGARIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Sofia&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;GEORGIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Tbilisi&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;KAZAKSTAN&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Almaty&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;KYRGYZSTAN&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Alma-Ata&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;MOLDOVA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Chisinau&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;RUSSIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Moscow&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;TAJIKISTAN&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Dushanbe&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;TURKMENISTAN&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Ashkabad&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;UKRAINE&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Kyiv&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;UZBEKISTAN&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Tashkent&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Europe</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;ALBANIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Tirana&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;ANDORRA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Andorra la Vella&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;AUSTRIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Vienna&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;BELGIUM&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Brussels&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;BOSNIA-HERZEGOVINA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Sarajevo&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;CROATIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Zagreb&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;CZECH REPUBLIC&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Prague&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;DENMARK&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Copenhagen&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;ESTONIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Tallinn&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;FINLAND&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Helsinki&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;FRANCE&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Paris&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;GERMANY&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Berlin&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;GREECE&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Athens&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;HUNGARY&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Budapest&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;ICELAND&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Reykjavik&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;IRELAND&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Dublin&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;ITALY&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Rome&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;LATVIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Riga&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;LIECHTENSTEIN&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Vaduz&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;LITHUANIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Vilnius&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;LUXEMBOURG&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Luxembourg&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;MACEDONIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Skopje&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;MALTA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Valletta&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;MONACO&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Monaco&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;MONTENEGRO&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Podgorica&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;THE NETHERLANDS&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Amsterdam&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;NORWAY&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Oslo&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;POLAND&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Warsaw&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;PORTUGAL&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Lisbon&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;ROMANIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Bucharest&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;SAN MARINO&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;San Marino&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;SERBIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Belgrade&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;SLOVAKIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Bratislava&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;SLOVENIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Ljuijana&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;SPAIN&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Madrid&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;SWEDEN&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Stockholm&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;SWITZERLAND&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Berne&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;UNITED KINGDOM&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;London&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;VATICAN CITY&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Vatican City&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// North and Central America</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;ANTIGUA AND BARBUDA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Saint John&#39;s&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;BAHAMAS&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Nassau&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;BARBADOS&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Bridgetown&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;BELIZE&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Belmopan&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;CANADA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Ottawa&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;COSTA RICA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;San Jose&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;CUBA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Havana&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;DOMINICA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Roseau&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;DOMINICAN REPUBLIC&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Santo Domingo&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;EL SALVADOR&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;San Salvador&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;GRENADA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Saint George&#39;s&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;GUATEMALA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Guatemala City&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;HAITI&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Port-au-Prince&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;HONDURAS&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Tegucigalpa&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;JAMAICA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Kingston&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;MEXICO&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Mexico City&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;NICARAGUA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Managua&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;PANAMA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Panama City&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;ST. KITTS AND NEVIS&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Basseterre&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;ST. LUCIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Castries&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;ST. VINCENT AND THE GRENADINES&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Kingstown&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;UNITED STATES OF AMERICA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Washington, D.C.&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// South America</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;ARGENTINA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Buenos Aires&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;BOLIVIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Sucre (legal)/La Paz(administrative)&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;BRAZIL&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Brasilia&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;CHILE&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Santiago&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;COLOMBIA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Bogota&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;ECUADOR&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Quito&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;GUYANA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Georgetown&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;PARAGUAY&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Asuncion&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;PERU&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Lima&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;SURINAME&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Paramaribo&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;TRINIDAD AND TOBAGO&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Port of Spain&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;URUGUAY&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Montevideo&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">    {</span><span style="color:#032F62;">&quot;VENEZUELA&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Caracas&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">  };</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Use AbstractMap by implementing entrySet()</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FlyweightMap</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AbstractMap</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Entry</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Map.Entry</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> index;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">Entry</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">index</span><span style="color:#24292E;">) { </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> index; }</span></span>
<span class="line"><span style="color:#24292E;">      @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(Object </span><span style="color:#E36209;">o</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> o </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> FlyweightMap </span><span style="color:#D73A49;">&amp;&amp;</span></span>
<span class="line"><span style="color:#24292E;">          Objects.</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">DATA</span><span style="color:#24292E;">[index][</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], o);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hashCode</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Objects.</span><span style="color:#6F42C1;">hashCode</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">DATA</span><span style="color:#24292E;">[index][</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">getKey</span><span style="color:#24292E;">() { </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">DATA</span><span style="color:#24292E;">[index][</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]; }</span></span>
<span class="line"><span style="color:#24292E;">      @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">getValue</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">DATA</span><span style="color:#24292E;">[index][</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">setValue</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">value</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UnsupportedOperationException</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Implement size() &amp; iterator() for AbstractSet:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">EntrySet</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AbstractSet</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">Map</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">Entry</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt;&gt; {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> size;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">EntrySet</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">size</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(size </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.size </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// Can&#39;t be any bigger than the array:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(size </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> DATA.length)</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.size </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DATA.length;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.size </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> size;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">() { </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> size; }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Iter</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Iterator</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">Map</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">Entry</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt;&gt; {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// Only one Entry object per Iterator:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Entry entry </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Entry</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hasNext</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> entry.index </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> size </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Map.Entry&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">          entry.index</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> entry;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UnsupportedOperationException</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">public</span></span>
<span class="line"><span style="color:#24292E;">      Iterator&lt;</span><span style="color:#D73A49;">Map</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">Entry</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt;&gt; </span><span style="color:#6F42C1;">iterator</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Iter</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span></span>
<span class="line"><span style="color:#24292E;">    Set&lt;</span><span style="color:#D73A49;">Map</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">Entry</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt;&gt; entries </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">EntrySet</span><span style="color:#24292E;">(DATA.length);</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Set&lt;</span><span style="color:#D73A49;">Map</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">Entry</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt;&gt; </span><span style="color:#6F42C1;">entrySet</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> entries;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Create a partial map of &#39;size&#39; countries:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">select</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">size</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FlyweightMap</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">      @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Set&lt;</span><span style="color:#D73A49;">Map</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">Entry</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt;&gt; </span><span style="color:#6F42C1;">entrySet</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">EntrySet</span><span style="color:#24292E;">(size);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    };</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; map </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FlyweightMap</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">capitals</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> map; </span><span style="color:#6A737D;">// The entire map</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">capitals</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">size</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">select</span><span style="color:#24292E;">(size); </span><span style="color:#6A737D;">// A partial map</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; names </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;(map.</span><span style="color:#6F42C1;">keySet</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// All the names:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">names</span><span style="color:#24292E;">() { </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> names; }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// A partial list:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">names</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">size</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;(</span><span style="color:#6F42C1;">select</span><span style="color:#24292E;">(size).</span><span style="color:#6F42C1;">keySet</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">capitals</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">names</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> HashMap&lt;&gt;(</span><span style="color:#6F42C1;">capitals</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedHashMap&lt;&gt;(</span><span style="color:#6F42C1;">capitals</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> TreeMap&lt;&gt;(</span><span style="color:#6F42C1;">capitals</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Hashtable&lt;&gt;(</span><span style="color:#6F42C1;">capitals</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> HashSet&lt;&gt;(</span><span style="color:#6F42C1;">names</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">)));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedHashSet&lt;&gt;(</span><span style="color:#6F42C1;">names</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">)));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> TreeSet&lt;&gt;(</span><span style="color:#6F42C1;">names</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">)));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;(</span><span style="color:#6F42C1;">names</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">)));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedList&lt;&gt;(</span><span style="color:#6F42C1;">names</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">)));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">capitals</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;BRAZIL&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">{ALGERIA=Algiers, ANGOLA=Luanda, BENIN=Porto-Novo,</span></span>
<span class="line"><span style="color:#6A737D;">BOTSWANA=Gaberone, BURKINA FASO=Ouagadougou,</span></span>
<span class="line"><span style="color:#6A737D;">BURUNDI=Bujumbura, CAMEROON=Yaounde, CAPE VERDE=Praia,</span></span>
<span class="line"><span style="color:#6A737D;">CENTRAL AFRICAN REPUBLIC=Bangui, CHAD=N&#39;djamena}</span></span>
<span class="line"><span style="color:#6A737D;">[ALGERIA, ANGOLA, BENIN, BOTSWANA, BURKINA FASO,</span></span>
<span class="line"><span style="color:#6A737D;">BURUNDI, CAMEROON, CAPE VERDE, CENTRAL AFRICAN</span></span>
<span class="line"><span style="color:#6A737D;">REPUBLIC, CHAD]</span></span>
<span class="line"><span style="color:#6A737D;">{BENIN=Porto-Novo, ANGOLA=Luanda, ALGERIA=Algiers}</span></span>
<span class="line"><span style="color:#6A737D;">{ALGERIA=Algiers, ANGOLA=Luanda, BENIN=Porto-Novo}</span></span>
<span class="line"><span style="color:#6A737D;">{ALGERIA=Algiers, ANGOLA=Luanda, BENIN=Porto-Novo}</span></span>
<span class="line"><span style="color:#6A737D;">{ALGERIA=Algiers, ANGOLA=Luanda, BENIN=Porto-Novo}</span></span>
<span class="line"><span style="color:#6A737D;">[BENIN, BOTSWANA, ANGOLA, BURKINA FASO, ALGERIA,</span></span>
<span class="line"><span style="color:#6A737D;">BURUNDI]</span></span>
<span class="line"><span style="color:#6A737D;">[ALGERIA, ANGOLA, BENIN, BOTSWANA, BURKINA FASO,</span></span>
<span class="line"><span style="color:#6A737D;">BURUNDI]</span></span>
<span class="line"><span style="color:#6A737D;">[ALGERIA, ANGOLA, BENIN, BOTSWANA, BURKINA FASO,</span></span>
<span class="line"><span style="color:#6A737D;">BURUNDI]</span></span>
<span class="line"><span style="color:#6A737D;">[ALGERIA, ANGOLA, BENIN, BOTSWANA, BURKINA FASO,</span></span>
<span class="line"><span style="color:#6A737D;">BURUNDI]</span></span>
<span class="line"><span style="color:#6A737D;">[ALGERIA, ANGOLA, BENIN, BOTSWANA, BURKINA FASO,</span></span>
<span class="line"><span style="color:#6A737D;">BURUNDI]</span></span>
<span class="line"><span style="color:#6A737D;">Brasilia</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>二维数组 <strong>String DATA</strong> 是 <strong>public</strong> 的，因此可以在别处使用。 <strong>FlyweightMap</strong> 必须实现 <code>entrySet()</code> 方法，该方法需要一个自定义 <strong>Set</strong> 实现和一个自定义 <strong>Map.Entry</strong> 类。这是实现享元的另一种方法：每个 <strong>Map.Entry</strong> 对象存储它自身的索引，而不是实际的键和值。当调用 <code>getKey()</code> 或 <code>getValue()</code> 时，它使用索引返回相应的 <strong>DATA</strong> 元素。 <strong>EntrySet</strong> 确保它的 <strong>size</strong> 不大于 <strong>DATA</strong> 。</p><p>享元的另一部分在 <strong>EntrySet.Iterator</strong> 中实现。相比于为 <strong>DATA</strong> 中的每个数据对创建一个 <strong>Map.Entry</strong> 对象，这里每个迭代器只有一个 <strong>Map.Entry</strong> 对象。 <strong>Entry</strong> 对象作为数据的窗口，它只包含 <strong>String</strong> 静态数组的索引。每次为迭代器调用 <code>next()</code> 时，<strong>Entry</strong> 中的索引都会递增，因此它会指向下一个数据对，然后从 <code>next()</code> 返回 <strong>Iterators</strong> 的单个 <strong>Entry</strong> 对象。[^1]</p><p><code>select()</code> 方法生成一个包含所需大小的 <strong>EntrySet</strong> 的 <strong>FlyweightMap</strong> ，这用于在主方法中演示的重载的 <code>capitals()</code> 和 <code>names()</code> 方法。</p><h2 id="集合功能" tabindex="-1">集合功能 <a class="header-anchor" href="#集合功能" aria-label="Permalink to &quot;集合功能&quot;">​</a></h2><p>下面这个表格展示了可以对 <strong>Collection</strong> 执行的所有操作（不包括自动继承自 <strong>Object</strong> 的方法），因此，可以用 <strong>List</strong> ， <strong>Set</strong> ， <strong>Queue</strong> 或 <strong>Deque</strong> 执行这里的所有操作（这些接口可能也提供了一些其他的功能）。<strong>Map</strong> 不是从 <strong>Collection</strong> 继承的，所以要单独处理它。</p><table><thead><tr><th style="text-align:center;">方法名</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>boolean add(T)</strong></td><td style="text-align:left;">确保集合包含该泛型类型 <strong>T</strong> 的参数。如果不添加参数，则返回 <strong>false</strong> 。 （这是一种“可选”方法，将在下一节中介绍。）</td></tr><tr><td style="text-align:center;"><strong>boolean addAll(Collection&lt;? extends T&gt;)</strong></td><td style="text-align:left;">添加参数集合中的所有元素。只要有元素被成功添加则返回 <strong>true</strong>。（“可选的”）</td></tr><tr><td style="text-align:center;"><strong>void clear()</strong></td><td style="text-align:left;">删除集合中的所有元素。（“可选的”）</td></tr><tr><td style="text-align:center;"><strong>boolean contains(T)</strong></td><td style="text-align:left;">如果目标集合包含该泛型类型 <strong>T</strong> 的参数，则返回 <strong>true</strong> 。</td></tr><tr><td style="text-align:center;"><strong>boolean containsAll(Collection&lt;?&gt;)</strong></td><td style="text-align:left;">如果目标集合包含参数集合中的所有元素，则返回 <strong>true</strong></td></tr><tr><td style="text-align:center;"><strong>boolean isEmpty()</strong></td><td style="text-align:left;">如果集合为空，则返回 <strong>true</strong></td></tr><tr><td style="text-align:center;"><strong>Iterator&lt;T&gt; iterator() Spliterator&lt;T&gt; spliterator()</strong></td><td style="text-align:left;">返回一个迭代器来遍历集合中的元素。 <strong>Spliterators</strong> 更复杂一些，它用在并发场景</td></tr><tr><td style="text-align:center;"><strong>boolean remove(Object)</strong></td><td style="text-align:left;">如果目标集合包含该参数，则在集合中删除该参数，如果成功删除则返回 <strong>true</strong> 。（“可选的”）</td></tr><tr><td style="text-align:center;"><strong>boolean removeAll(Collection&lt;?&gt;)</strong></td><td style="text-align:left;">删除目标集合中，参数集合所包含的全部元素。如果有元素被成功删除则返回 <strong>true</strong> 。 （“可选的”）</td></tr><tr><td style="text-align:center;"><strong>boolean removeIf(Predicate&lt;? super E&gt;)</strong></td><td style="text-align:left;">删除此集合中，满足给定断言（predicate）的所有元素</td></tr><tr><td style="text-align:center;"><strong>Stream&lt;E&gt; stream() Stream&lt;E&gt; parallelStream()</strong></td><td style="text-align:left;">返回由该 <strong>Collection</strong> 中元素所组成的一个 <strong>Stream</strong></td></tr><tr><td style="text-align:center;"><strong>int size()</strong></td><td style="text-align:left;">返回集合中所包含元素的个数</td></tr><tr><td style="text-align:center;"><strong>Object[] toArrat()</strong></td><td style="text-align:left;">返回包含该集合所有元素的一个数组</td></tr><tr><td style="text-align:center;"><strong>&lt;T&gt; T[] toArray(T[] a)</strong></td><td style="text-align:left;">返回包含该集合所有元素的一个数组。结果的运行时类型是参数数组而不是普通的 <strong>Object</strong> 数组。</td></tr></tbody></table><p>这里没有提供用于随机访问元素的 <strong>get()</strong> 方法，因为 <strong>Collection</strong> 还包含 <strong>Set</strong> ，它维护自己的内部排序，所以随机访问查找就没有意义了。因此，要查找 <strong>Collection</strong> 中的元素必须使用迭代器。</p><p>下面这个示例演示了 <strong>Collection</strong> 的所有方法。这里以 <strong>ArrayList</strong> 为例：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/CollectionMethods.java</span></span>
<span class="line"><span style="color:#6A737D;">// Things you can do with all Collections</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> onjava.HTMLColors.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CollectionMethods</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    Collection&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; c </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;(LIST.</span><span style="color:#B392F0;">subList</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    c.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;ten&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    c.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;eleven&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(c);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">border</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Make an array from the List:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">Object</span><span style="color:#E1E4E8;">[] array </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> c.</span><span style="color:#B392F0;">toArray</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Make a String array from the List:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> c.</span><span style="color:#B392F0;">toArray</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Find max and min elements; this means</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// different things depending on the way</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// the Comparable interface is implemented:</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;Collections.max(c) = &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> Collections.</span><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;">(c));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;Collections.min(c) = &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> Collections.</span><span style="color:#B392F0;">min</span><span style="color:#E1E4E8;">(c));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">border</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Add a Collection to another Collection</span></span>
<span class="line"><span style="color:#E1E4E8;">    Collection&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; c2 </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;(LIST.</span><span style="color:#B392F0;">subList</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">14</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    c.</span><span style="color:#B392F0;">addAll</span><span style="color:#E1E4E8;">(c2);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(c);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">border</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    c.</span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">(LIST.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(c);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">border</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Remove all components that are</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// in the argument collection:</span></span>
<span class="line"><span style="color:#E1E4E8;">    c.</span><span style="color:#B392F0;">removeAll</span><span style="color:#E1E4E8;">(c2);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(c);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">border</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    c.</span><span style="color:#B392F0;">addAll</span><span style="color:#E1E4E8;">(c2);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(c);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">border</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Is an element in this Collection?</span></span>
<span class="line"><span style="color:#E1E4E8;">    String val </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> LIST.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;c.contains(&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> val  </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;) = &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> c.</span><span style="color:#B392F0;">contains</span><span style="color:#E1E4E8;">(val));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Is a Collection in this Collection?</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;c.containsAll(c2) = &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> c.</span><span style="color:#B392F0;">containsAll</span><span style="color:#E1E4E8;">(c2));</span></span>
<span class="line"><span style="color:#E1E4E8;">    Collection&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; c3 </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      ((List</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">String</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">)c).</span><span style="color:#B392F0;">subList</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Keep all the elements that are in both</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// c2 and c3 (an intersection of sets):</span></span>
<span class="line"><span style="color:#E1E4E8;">    c2.</span><span style="color:#B392F0;">retainAll</span><span style="color:#E1E4E8;">(c3);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">(c2);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Throw away all the elements</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// in c2 that also appear in c3:</span></span>
<span class="line"><span style="color:#E1E4E8;">    c2.</span><span style="color:#B392F0;">removeAll</span><span style="color:#E1E4E8;">(c3);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;c2.isEmpty() = &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">  c2.</span><span style="color:#B392F0;">isEmpty</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">border</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Functional operation:</span></span>
<span class="line"><span style="color:#E1E4E8;">    c </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;(LIST);</span></span>
<span class="line"><span style="color:#E1E4E8;">    c.</span><span style="color:#B392F0;">removeIf</span><span style="color:#E1E4E8;">(s </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">s.</span><span style="color:#B392F0;">startsWith</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;P&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    c.</span><span style="color:#B392F0;">removeIf</span><span style="color:#E1E4E8;">(s </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> s.</span><span style="color:#B392F0;">startsWith</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Pale&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Stream operation:</span></span>
<span class="line"><span style="color:#E1E4E8;">    c.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">(System.out</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">println);</span></span>
<span class="line"><span style="color:#E1E4E8;">    c.</span><span style="color:#B392F0;">clear</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// Remove all elements</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;after c.clear():&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> c);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue</span></span>
<span class="line"><span style="color:#6A737D;">AntiqueWhite</span></span>
<span class="line"><span style="color:#6A737D;">Aquamarine</span></span>
<span class="line"><span style="color:#6A737D;">Azure</span></span>
<span class="line"><span style="color:#6A737D;">ten</span></span>
<span class="line"><span style="color:#6A737D;">eleven</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">Collections.max(c) = ten</span></span>
<span class="line"><span style="color:#6A737D;">Collections.min(c) = AliceBlue</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue</span></span>
<span class="line"><span style="color:#6A737D;">AntiqueWhite</span></span>
<span class="line"><span style="color:#6A737D;">Aquamarine</span></span>
<span class="line"><span style="color:#6A737D;">Azure</span></span>
<span class="line"><span style="color:#6A737D;">ten</span></span>
<span class="line"><span style="color:#6A737D;">eleven</span></span>
<span class="line"><span style="color:#6A737D;">Brown</span></span>
<span class="line"><span style="color:#6A737D;">BurlyWood</span></span>
<span class="line"><span style="color:#6A737D;">CadetBlue</span></span>
<span class="line"><span style="color:#6A737D;">Chartreuse</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">AntiqueWhite</span></span>
<span class="line"><span style="color:#6A737D;">Aquamarine</span></span>
<span class="line"><span style="color:#6A737D;">Azure</span></span>
<span class="line"><span style="color:#6A737D;">ten</span></span>
<span class="line"><span style="color:#6A737D;">eleven</span></span>
<span class="line"><span style="color:#6A737D;">Brown</span></span>
<span class="line"><span style="color:#6A737D;">BurlyWood</span></span>
<span class="line"><span style="color:#6A737D;">CadetBlue</span></span>
<span class="line"><span style="color:#6A737D;">Chartreuse</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">AntiqueWhite</span></span>
<span class="line"><span style="color:#6A737D;">Aquamarine</span></span>
<span class="line"><span style="color:#6A737D;">Azure</span></span>
<span class="line"><span style="color:#6A737D;">ten</span></span>
<span class="line"><span style="color:#6A737D;">eleven</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">AntiqueWhite</span></span>
<span class="line"><span style="color:#6A737D;">Aquamarine</span></span>
<span class="line"><span style="color:#6A737D;">Azure</span></span>
<span class="line"><span style="color:#6A737D;">ten</span></span>
<span class="line"><span style="color:#6A737D;">eleven</span></span>
<span class="line"><span style="color:#6A737D;">Brown</span></span>
<span class="line"><span style="color:#6A737D;">BurlyWood</span></span>
<span class="line"><span style="color:#6A737D;">CadetBlue</span></span>
<span class="line"><span style="color:#6A737D;">Chartreuse</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">c.contains(Azure) = true</span></span>
<span class="line"><span style="color:#6A737D;">c.containsAll(c2) = true</span></span>
<span class="line"><span style="color:#6A737D;">c2.isEmpty() = true</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">PapayaWhip</span></span>
<span class="line"><span style="color:#6A737D;">PeachPuff</span></span>
<span class="line"><span style="color:#6A737D;">Peru</span></span>
<span class="line"><span style="color:#6A737D;">Pink</span></span>
<span class="line"><span style="color:#6A737D;">Plum</span></span>
<span class="line"><span style="color:#6A737D;">PowderBlue</span></span>
<span class="line"><span style="color:#6A737D;">Purple</span></span>
<span class="line"><span style="color:#6A737D;">after c.clear():[]</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/CollectionMethods.java</span></span>
<span class="line"><span style="color:#6A737D;">// Things you can do with all Collections</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> onjava.HTMLColors.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CollectionMethods</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    Collection&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; c </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;(LIST.</span><span style="color:#6F42C1;">subList</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    c.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ten&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    c.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;eleven&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(c);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">border</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Make an array from the List:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">[] array </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> c.</span><span style="color:#6F42C1;">toArray</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Make a String array from the List:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> c.</span><span style="color:#6F42C1;">toArray</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Find max and min elements; this means</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// different things depending on the way</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// the Comparable interface is implemented:</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;Collections.max(c) = &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> Collections.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(c));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;Collections.min(c) = &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> Collections.</span><span style="color:#6F42C1;">min</span><span style="color:#24292E;">(c));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">border</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Add a Collection to another Collection</span></span>
<span class="line"><span style="color:#24292E;">    Collection&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; c2 </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;(LIST.</span><span style="color:#6F42C1;">subList</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">14</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    c.</span><span style="color:#6F42C1;">addAll</span><span style="color:#24292E;">(c2);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(c);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">border</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    c.</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">(LIST.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(c);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">border</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Remove all components that are</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// in the argument collection:</span></span>
<span class="line"><span style="color:#24292E;">    c.</span><span style="color:#6F42C1;">removeAll</span><span style="color:#24292E;">(c2);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(c);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">border</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    c.</span><span style="color:#6F42C1;">addAll</span><span style="color:#24292E;">(c2);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(c);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">border</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Is an element in this Collection?</span></span>
<span class="line"><span style="color:#24292E;">    String val </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LIST.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;c.contains(&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> val  </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;) = &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> c.</span><span style="color:#6F42C1;">contains</span><span style="color:#24292E;">(val));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Is a Collection in this Collection?</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;c.containsAll(c2) = &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> c.</span><span style="color:#6F42C1;">containsAll</span><span style="color:#24292E;">(c2));</span></span>
<span class="line"><span style="color:#24292E;">    Collection&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; c3 </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      ((List</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">String</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">)c).</span><span style="color:#6F42C1;">subList</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Keep all the elements that are in both</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// c2 and c3 (an intersection of sets):</span></span>
<span class="line"><span style="color:#24292E;">    c2.</span><span style="color:#6F42C1;">retainAll</span><span style="color:#24292E;">(c3);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">(c2);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Throw away all the elements</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// in c2 that also appear in c3:</span></span>
<span class="line"><span style="color:#24292E;">    c2.</span><span style="color:#6F42C1;">removeAll</span><span style="color:#24292E;">(c3);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;c2.isEmpty() = &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;">  c2.</span><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">border</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Functional operation:</span></span>
<span class="line"><span style="color:#24292E;">    c </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;(LIST);</span></span>
<span class="line"><span style="color:#24292E;">    c.</span><span style="color:#6F42C1;">removeIf</span><span style="color:#24292E;">(s </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">s.</span><span style="color:#6F42C1;">startsWith</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;P&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    c.</span><span style="color:#6F42C1;">removeIf</span><span style="color:#24292E;">(s </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> s.</span><span style="color:#6F42C1;">startsWith</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Pale&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Stream operation:</span></span>
<span class="line"><span style="color:#24292E;">    c.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(System.out</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">println);</span></span>
<span class="line"><span style="color:#24292E;">    c.</span><span style="color:#6F42C1;">clear</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// Remove all elements</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;after c.clear():&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> c);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue</span></span>
<span class="line"><span style="color:#6A737D;">AntiqueWhite</span></span>
<span class="line"><span style="color:#6A737D;">Aquamarine</span></span>
<span class="line"><span style="color:#6A737D;">Azure</span></span>
<span class="line"><span style="color:#6A737D;">ten</span></span>
<span class="line"><span style="color:#6A737D;">eleven</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">Collections.max(c) = ten</span></span>
<span class="line"><span style="color:#6A737D;">Collections.min(c) = AliceBlue</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">AliceBlue</span></span>
<span class="line"><span style="color:#6A737D;">AntiqueWhite</span></span>
<span class="line"><span style="color:#6A737D;">Aquamarine</span></span>
<span class="line"><span style="color:#6A737D;">Azure</span></span>
<span class="line"><span style="color:#6A737D;">ten</span></span>
<span class="line"><span style="color:#6A737D;">eleven</span></span>
<span class="line"><span style="color:#6A737D;">Brown</span></span>
<span class="line"><span style="color:#6A737D;">BurlyWood</span></span>
<span class="line"><span style="color:#6A737D;">CadetBlue</span></span>
<span class="line"><span style="color:#6A737D;">Chartreuse</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">AntiqueWhite</span></span>
<span class="line"><span style="color:#6A737D;">Aquamarine</span></span>
<span class="line"><span style="color:#6A737D;">Azure</span></span>
<span class="line"><span style="color:#6A737D;">ten</span></span>
<span class="line"><span style="color:#6A737D;">eleven</span></span>
<span class="line"><span style="color:#6A737D;">Brown</span></span>
<span class="line"><span style="color:#6A737D;">BurlyWood</span></span>
<span class="line"><span style="color:#6A737D;">CadetBlue</span></span>
<span class="line"><span style="color:#6A737D;">Chartreuse</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">AntiqueWhite</span></span>
<span class="line"><span style="color:#6A737D;">Aquamarine</span></span>
<span class="line"><span style="color:#6A737D;">Azure</span></span>
<span class="line"><span style="color:#6A737D;">ten</span></span>
<span class="line"><span style="color:#6A737D;">eleven</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">AntiqueWhite</span></span>
<span class="line"><span style="color:#6A737D;">Aquamarine</span></span>
<span class="line"><span style="color:#6A737D;">Azure</span></span>
<span class="line"><span style="color:#6A737D;">ten</span></span>
<span class="line"><span style="color:#6A737D;">eleven</span></span>
<span class="line"><span style="color:#6A737D;">Brown</span></span>
<span class="line"><span style="color:#6A737D;">BurlyWood</span></span>
<span class="line"><span style="color:#6A737D;">CadetBlue</span></span>
<span class="line"><span style="color:#6A737D;">Chartreuse</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">c.contains(Azure) = true</span></span>
<span class="line"><span style="color:#6A737D;">c.containsAll(c2) = true</span></span>
<span class="line"><span style="color:#6A737D;">c2.isEmpty() = true</span></span>
<span class="line"><span style="color:#6A737D;">******************************</span></span>
<span class="line"><span style="color:#6A737D;">PapayaWhip</span></span>
<span class="line"><span style="color:#6A737D;">PeachPuff</span></span>
<span class="line"><span style="color:#6A737D;">Peru</span></span>
<span class="line"><span style="color:#6A737D;">Pink</span></span>
<span class="line"><span style="color:#6A737D;">Plum</span></span>
<span class="line"><span style="color:#6A737D;">PowderBlue</span></span>
<span class="line"><span style="color:#6A737D;">Purple</span></span>
<span class="line"><span style="color:#6A737D;">after c.clear():[]</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>为了只演示 <strong>Collection</strong> 接口的方法，而没有其它额外的内容，所以这里创建包含不同数据集的 <strong>ArrayList</strong> ，并向上转型为 <strong>Collection</strong> 对象。</p><h2 id="可选操作" tabindex="-1">可选操作 <a class="header-anchor" href="#可选操作" aria-label="Permalink to &quot;可选操作&quot;">​</a></h2><p>在 <strong>Collection</strong> 接口中执行各种添加和删除操作的方法是 <em>可选操作</em> （optional operations）。这意味着实现类不需要为这些方法提供功能定义。</p><p>这是一种非常不寻常的定义接口的方式。正如我们所知，接口是一种合约（contract）。它表达的意思是，“无论你如何选择实现这个接口，我保证你可以将这些消息发送到这个对象”（我在这里使用术语“接口”来描述正式的 <strong>interface</strong> 关键字和“任何类或子类都支持的方法”的更一般含义）。但“可选”操作违反了这一基本原则，它表示调用某些方法不会执行有意义的行为。相反，它们会抛出异常！这看起来似乎丢失了编译时的类型安全性。</p><p>其实没那么糟糕。如果操作是可选的，编译器仍然能够限制你仅调用该接口中的方法。它不像动态语言那样，可以为任何对象调用任何方法，并在运行时查找特定的调用是否可行。[^2]此外，大多数将 <strong>Collection</strong> 作为参数的方法仅从该 <strong>Collection</strong> 中读取，并且 <strong>Collection</strong> 的所有“读取”方法都不是可选的。</p><p>为什么要将方法定义为“可选”的？因为这样做可以防止设计中的接口爆炸。集合库的其他设计往往会产生令人困惑的过多接口来描述主题的每个变体。这甚至使得不可能捕获到接口中的所有特殊情况，因为总有人能发明一个新的接口。“不支持的操作（unsupported operation）”这种方式实现了Java集合库的一个重要目标：集合要易于学习和使用。不支持的操作是一种特殊情况，可以推迟到必要的时候。但是，要使用此方法：</p><ol><li><p><strong>UnsupportedOperationException</strong> 必须是一个罕见的事件。也就是说，对于大多数类，所有操作都应该起作用，并且只有在特殊情况下才应该不支持某项操作。这在Java集合库中是正确的，因为99%的时间使用到的类 —— <strong>ArrayList</strong> ， <strong>LinkedList</strong> ， <strong>HashSet</strong> 和 <strong>HashMap</strong> ，以及其他具体实现，都支持所有操作。该设计确实为创建一个新的 <strong>Collection</strong> 提供了一个“后门”，可以不为 <strong>Collection</strong> 接口中的所有方法都提供有意义的定义，这些定义仍然适合现有的类库。</p></li><li><p>当不支持某个操作时， <strong>UnsupportedOperationException</strong> 应该出现在实现阶段，而不是在将产品发送给客户之后。毕竟，这个异常表示编程错误：错误地使用了一个具体实现。</p></li></ol><p>值得注意的是，不支持的操作只能在运行时检测到，因此这代表动态类型检查。如果你来自像 C++ 这样的静态类型语言，Java 可能看起来只是另一种静态类型语言。当然， Java 肯定有静态类型检查，但它也有大量的动态类型，因此很难说它只是静态语言或动态语言。一旦你开始注意到这一点，你就会开始看到 Java 中动态类型检查的其他示例。</p><h3 id="不支持的操作" tabindex="-1">不支持的操作 <a class="header-anchor" href="#不支持的操作" aria-label="Permalink to &quot;不支持的操作&quot;">​</a></h3><p>不支持的操作的常见来源是由固定大小的数据结构所支持的集合。使用 <code>Arrays.asList()</code> 方法将数组转换为 <strong>List</strong> 时，就会得到这样的集合。此外，还可以选择使用 <strong>Collections</strong> 类中的“不可修改（unmodifiable）”方法使任何集合（包括 <strong>Map</strong> ）抛出 <strong>UnsupportedOperationException</strong> 异常。此示例展示了这两种情况：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/Unsupported.java</span></span>
<span class="line"><span style="color:#6A737D;">// Unsupported operations in Java collections</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Unsupported</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">check</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">description</span><span style="color:#E1E4E8;">, Runnable </span><span style="color:#FFAB70;">tst</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      tst.</span><span style="color:#B392F0;">run</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;">(Exception </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(description </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;(): &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> e);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">msg</span><span style="color:#E1E4E8;">, List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">list</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;--- &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> msg </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; ---&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    Collection&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; c </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> list;</span></span>
<span class="line"><span style="color:#E1E4E8;">    Collection&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; subList </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> list.</span><span style="color:#B392F0;">subList</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Copy of the sublist:</span></span>
<span class="line"><span style="color:#E1E4E8;">    Collection&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; c2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;(subList);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">check</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;retainAll&quot;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> c.</span><span style="color:#B392F0;">retainAll</span><span style="color:#E1E4E8;">(c2));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">check</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;removeAll&quot;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> c.</span><span style="color:#B392F0;">removeAll</span><span style="color:#E1E4E8;">(c2));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">check</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;clear&quot;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> c.</span><span style="color:#B392F0;">clear</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">check</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;add&quot;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> c.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;X&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">check</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;addAll&quot;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> c.</span><span style="color:#B392F0;">addAll</span><span style="color:#E1E4E8;">(c2));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">check</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;remove&quot;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> c.</span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;C&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// The List.set() method modifies the value but</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// doesn&#39;t change the size of the data structure:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">check</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;List.set&quot;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> list.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;X&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; list </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Arrays.</span><span style="color:#B392F0;">asList</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;A B C D E F G H I J K L&quot;</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">split</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Modifiable Copy&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;(list));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Arrays.asList()&quot;</span><span style="color:#E1E4E8;">, list);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;unmodifiableList()&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      Collections.</span><span style="color:#B392F0;">unmodifiableList</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;(list)));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">--- Modifiable Copy ---</span></span>
<span class="line"><span style="color:#6A737D;">--- Arrays.asList() ---</span></span>
<span class="line"><span style="color:#6A737D;">retainAll(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">removeAll(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">clear(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">add(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">addAll(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">remove(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">--- unmodifiableList() ---</span></span>
<span class="line"><span style="color:#6A737D;">retainAll(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">removeAll(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">clear(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">add(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">addAll(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">remove(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">List.set(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/Unsupported.java</span></span>
<span class="line"><span style="color:#6A737D;">// Unsupported operations in Java collections</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Unsupported</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">check</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">description</span><span style="color:#24292E;">, Runnable </span><span style="color:#E36209;">tst</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      tst.</span><span style="color:#6F42C1;">run</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;">(Exception </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(description </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;(): &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> e);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">msg</span><span style="color:#24292E;">, List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">list</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;--- &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> msg </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; ---&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    Collection&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; c </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> list;</span></span>
<span class="line"><span style="color:#24292E;">    Collection&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; subList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> list.</span><span style="color:#6F42C1;">subList</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Copy of the sublist:</span></span>
<span class="line"><span style="color:#24292E;">    Collection&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; c2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;(subList);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">check</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;retainAll&quot;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> c.</span><span style="color:#6F42C1;">retainAll</span><span style="color:#24292E;">(c2));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">check</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;removeAll&quot;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> c.</span><span style="color:#6F42C1;">removeAll</span><span style="color:#24292E;">(c2));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">check</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;clear&quot;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> c.</span><span style="color:#6F42C1;">clear</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">check</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;add&quot;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> c.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;X&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">check</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;addAll&quot;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> c.</span><span style="color:#6F42C1;">addAll</span><span style="color:#24292E;">(c2));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">check</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;remove&quot;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> c.</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;C&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// The List.set() method modifies the value but</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// doesn&#39;t change the size of the data structure:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">check</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;List.set&quot;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> list.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;X&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; list </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Arrays.</span><span style="color:#6F42C1;">asList</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;A B C D E F G H I J K L&quot;</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Modifiable Copy&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;(list));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Arrays.asList()&quot;</span><span style="color:#24292E;">, list);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;unmodifiableList()&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      Collections.</span><span style="color:#6F42C1;">unmodifiableList</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;(list)));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">--- Modifiable Copy ---</span></span>
<span class="line"><span style="color:#6A737D;">--- Arrays.asList() ---</span></span>
<span class="line"><span style="color:#6A737D;">retainAll(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">removeAll(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">clear(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">add(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">addAll(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">remove(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">--- unmodifiableList() ---</span></span>
<span class="line"><span style="color:#6A737D;">retainAll(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">removeAll(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">clear(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">add(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">addAll(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">remove(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">List.set(): java.lang.UnsupportedOperationException</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>因为 <code>Arrays.asList()</code> 生成的 <strong>List</strong> 由一个固定大小的数组所支持，所以唯一支持的操作是那些不改变数组大小的操作。任何会导致更改基础数据结构大小的方法都会产生 <strong>UnsupportedOperationException</strong> 异常，来说明这是对不支持的方法的调用（编程错误）。</p><p>请注意，始终可以将 <code>Arrays.asList()</code> 的结果作为一个参数传递给任何 <strong>Collection</strong> 的构造方法（或使用 <code>addAll()</code> 方法或静态的 <code>Collections.addAll()</code> 方法）来创建一个允许使用所有方法的常规集合，在主方法中第一次调用 <code>test()</code> 时显示了这种情况。这种调用产生了一个新的可调整大小的底层数据结构。</p><p><strong>Collections</strong> 类中的“unmodifiable”方法会将集合包装一个代理中，如果执行任何想要修改集合的操作，则该代理会生成 <strong>UnsupportedOperationException</strong> 异常。使用这些方法的目的是生成一个“常量”集合对象。稍后将描述“unmodifiable“集合方法的完整列表。</p><p><code>test()</code> 中的最后一个 <code>check()</code> 用于测试<strong>List</strong> 的 <code>set()</code> 方法。这里，“不支持的操作”技术的粒度（granularity）就派上用场了，得到的“接口”可以通过一种方法在 <code>Arrays.asList()</code> 返回的对象和 <code>Collections.unmodifiableList()</code> 返回的对象之间变换。 <code>Arrays.asList()</code> 返回固定大小的 <strong>List</strong> ，而 <code>Collections.unmodifiableList()</code> 生成无法更改的 <strong>List</strong> 。如输出中所示， <code>Arrays.asList()</code> 返回的 <strong>List</strong> 中的元素是可以修改的，因为这不会违反该 <strong>List</strong> 的“固定大小”特性。但很明显， <code>unmodifiableList()</code> 的结果不应该以任何方式修改。如果使用接口来描述，则需要两个额外的接口，一个具有可用的 <code>set()</code> 方法，而另一个没有。 <strong>Collection</strong> 的各种不可修改的子类型都将需要额外的接口。</p><p>如果一个方法将一个集合作为它的参数，那么它的文档应该说明必须实现哪些可选方法。</p><h2 id="set和存储顺序" tabindex="-1">Set和存储顺序 <a class="header-anchor" href="#set和存储顺序" aria-label="Permalink to &quot;Set和存储顺序&quot;">​</a></h2><p><a href="./.html">第十二章 集合</a>章节中的 <strong>Set</strong> 有关示例对 <strong>Set</strong> 的基本操作做了很好的介绍。 但是，这些示例可以方便地使用预定义的 Java 类型，例如 <strong>Integer</strong> 和 <strong>String</strong> ，它们可以在集合中使用。在创建自己的类型时请注意， <strong>Set</strong> （以及稍后会看到的 <strong>Map</strong> ）需要一种维护存储顺序的方法，该顺序因 <strong>Set</strong> 的不同实现而异。因此，不同的 <strong>Set</strong> 实现不仅具有不同的行为，而且它们对可以放入特定 <strong>Set</strong> 中的对象类型也有不同的要求：</p><table><thead><tr><th style="text-align:center;"><strong>Set</strong> 类型</th><th style="text-align:left;">约束</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>Set(interface)</strong></td><td style="text-align:left;">添加到 <strong>Set</strong> 中的每个元素必须是唯一的，否则，<strong>Set</strong> 不会添加重复元素。添加到 <strong>Set</strong> 的元素必须至少定义 <code>equals()</code> 方法以建立对象唯一性。 <strong>Set</strong> 与 <strong>Collection</strong> 具有完全相同的接口。 <strong>Set</strong> 接口不保证它将以任何特定顺序维护其元素。</td></tr><tr><td style="text-align:center;"><strong>HashSet*</strong></td><td style="text-align:left;">注重快速查找元素的集合，其中元素必须定义 <code>hashCode()</code> 和 <code>equals()</code> 方法。</td></tr><tr><td style="text-align:center;"><strong>TreeSet</strong></td><td style="text-align:left;">由树支持的有序 <strong>Set</strong>。这样，就可以从 <strong>Set</strong> 中获取有序序列，其中元素必须实现 <strong>Comparable</strong> 接口。</td></tr><tr><td style="text-align:center;"><strong>LinkedHashSet</strong></td><td style="text-align:left;">具有 <strong>HashSet</strong> 的查找速度，但在内部使用链表维护元素的插入顺序。因此，当在遍历 <strong>Set</strong> 时，结果将按元素的插入顺序显示。元素必须定义 <code>hashCode()</code> 和 <code>equals()</code> 方法。</td></tr></tbody></table><p><strong>HashSet</strong> 上的星号表示，在没有其他约束的情况下，这应该是你的默认选择，因为它针对速度进行了优化。</p><p>定义 <code>hashCode()</code> 方法在<a href="./.html">附录:理解equals和hashCode方法</a>中进行了描述。必须为散列和树存储结构创建 <code>equals()</code> 方法，但只有当把类放在 <strong>HashSet</strong> 中时才需要 <code>hashCode()</code> （当然这很有可能，因为 <strong>HashSet</strong> 通常应该是作为 <strong>Set</strong> 实现的首选）或 <strong>LinkedHashSet</strong> 。 但是，作为一种良好的编程风格，在覆盖 <code>equals()</code> 时应始终覆盖 <code>hashCode()</code> 。</p><p>下面的示例演示了成功使用具有特定 <strong>Set</strong> 实现的类型所需的方法：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/TypesForSets.java</span></span>
<span class="line"><span style="color:#6A737D;">// Methods necessary to put your own type in a Set</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.function.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.Objects;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SetType</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">SetType</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">n</span><span style="color:#E1E4E8;">) { i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> n; }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(Object </span><span style="color:#FFAB70;">o</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> o </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> SetType </span><span style="color:#F97583;">&amp;&amp;</span></span>
<span class="line"><span style="color:#E1E4E8;">      Objects.</span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(i, ((SetType)o).i);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Integer.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">(i);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">HashType</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SetType</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">HashType</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">n</span><span style="color:#E1E4E8;">) { </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">(n); }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hashCode</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Objects.</span><span style="color:#B392F0;">hashCode</span><span style="color:#E1E4E8;">(i);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TreeType</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SetType</span></span>
<span class="line"><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Comparable</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">TreeType</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">TreeType</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">n</span><span style="color:#E1E4E8;">) { </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">(n); }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">compareTo</span><span style="color:#E1E4E8;">(TreeType </span><span style="color:#FFAB70;">arg</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Integer.</span><span style="color:#B392F0;">compare</span><span style="color:#E1E4E8;">(arg.i, i);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Equivalent to:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// return arg.i &lt; i ? -1 : (arg.i == i ? 0 : 1);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TypesForSets</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">T</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">fill</span><span style="color:#E1E4E8;">(Set&lt;</span><span style="color:#F97583;">T</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">set</span><span style="color:#E1E4E8;">, Function&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">T</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">type</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// Descending</span></span>
<span class="line"><span style="color:#E1E4E8;">      set.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(type.</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(i));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// Ascending</span></span>
<span class="line"><span style="color:#E1E4E8;">      set.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(type.</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(i));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#F97583;">T</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(Set&lt;</span><span style="color:#F97583;">T</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">set</span><span style="color:#E1E4E8;">, Function&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">T</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">type</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">fill</span><span style="color:#E1E4E8;">(set, type);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">fill</span><span style="color:#E1E4E8;">(set, type); </span><span style="color:#6A737D;">// Try to add duplicates</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">fill</span><span style="color:#E1E4E8;">(set, type);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(set);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> HashSet&lt;&gt;(), HashType</span><span style="color:#F97583;">::new</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedHashSet&lt;&gt;(), HashType</span><span style="color:#F97583;">::new</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> TreeSet&lt;&gt;(), TreeType</span><span style="color:#F97583;">::new</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Things that don&#39;t work:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> HashSet&lt;&gt;(), SetType</span><span style="color:#F97583;">::new</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> HashSet&lt;&gt;(), TreeType</span><span style="color:#F97583;">::new</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedHashSet&lt;&gt;(), SetType</span><span style="color:#F97583;">::new</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedHashSet&lt;&gt;(), TreeType</span><span style="color:#F97583;">::new</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> TreeSet&lt;&gt;(), SetType</span><span style="color:#F97583;">::new</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;">(Exception </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(e.</span><span style="color:#B392F0;">getMessage</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> TreeSet&lt;&gt;(), HashType</span><span style="color:#F97583;">::new</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;">(Exception </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(e.</span><span style="color:#B392F0;">getMessage</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span></span>
<span class="line"><span style="color:#6A737D;">[10, 9, 8, 7, 6, 5, 0, 1, 2, 3, 4]</span></span>
<span class="line"><span style="color:#6A737D;">[10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]</span></span>
<span class="line"><span style="color:#6A737D;">[1, 6, 8, 6, 2, 7, 8, 9, 4, 10, 7, 5, 1, 3, 4, 9, 9,</span></span>
<span class="line"><span style="color:#6A737D;">10, 5, 3, 2, 0, 4, 1, 2, 0, 8, 3, 0, 10, 6, 5, 7]</span></span>
<span class="line"><span style="color:#6A737D;">[3, 1, 4, 8, 7, 6, 9, 5, 3, 0, 10, 5, 5, 10, 7, 8, 8,</span></span>
<span class="line"><span style="color:#6A737D;">9, 1, 4, 10, 2, 6, 9, 1, 6, 0, 3, 2, 0, 7, 2, 4]</span></span>
<span class="line"><span style="color:#6A737D;">[10, 9, 8, 7, 6, 5, 0, 1, 2, 3, 4, 10, 9, 8, 7, 6, 5,</span></span>
<span class="line"><span style="color:#6A737D;">0, 1, 2, 3, 4, 10, 9, 8, 7, 6, 5, 0, 1, 2, 3, 4]</span></span>
<span class="line"><span style="color:#6A737D;">[10, 9, 8, 7, 6, 5, 0, 1, 2, 3, 4, 10, 9, 8, 7, 6, 5,</span></span>
<span class="line"><span style="color:#6A737D;">0, 1, 2, 3, 4, 10, 9, 8, 7, 6, 5, 0, 1, 2, 3, 4]</span></span>
<span class="line"><span style="color:#6A737D;">SetType cannot be cast to java.lang.Comparable</span></span>
<span class="line"><span style="color:#6A737D;">HashType cannot be cast to java.lang.Comparable</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/TypesForSets.java</span></span>
<span class="line"><span style="color:#6A737D;">// Methods necessary to put your own type in a Set</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.function.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.Objects;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SetType</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">protected</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">SetType</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">n</span><span style="color:#24292E;">) { i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> n; }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(Object </span><span style="color:#E36209;">o</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> o </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> SetType </span><span style="color:#D73A49;">&amp;&amp;</span></span>
<span class="line"><span style="color:#24292E;">      Objects.</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(i, ((SetType)o).i);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Integer.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">(i);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HashType</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SetType</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">HashType</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">n</span><span style="color:#24292E;">) { </span><span style="color:#005CC5;">super</span><span style="color:#24292E;">(n); }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hashCode</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Objects.</span><span style="color:#6F42C1;">hashCode</span><span style="color:#24292E;">(i);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TreeType</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SetType</span></span>
<span class="line"><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Comparable</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">TreeType</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">TreeType</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">n</span><span style="color:#24292E;">) { </span><span style="color:#005CC5;">super</span><span style="color:#24292E;">(n); }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">compareTo</span><span style="color:#24292E;">(TreeType </span><span style="color:#E36209;">arg</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Integer.</span><span style="color:#6F42C1;">compare</span><span style="color:#24292E;">(arg.i, i);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Equivalent to:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// return arg.i &lt; i ? -1 : (arg.i == i ? 0 : 1);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TypesForSets</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">T</span><span style="color:#24292E;">&gt; </span><span style="color:#D73A49;">void</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(Set&lt;</span><span style="color:#D73A49;">T</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">set</span><span style="color:#24292E;">, Function&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">T</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">type</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// Descending</span></span>
<span class="line"><span style="color:#24292E;">      set.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(type.</span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(i));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// Ascending</span></span>
<span class="line"><span style="color:#24292E;">      set.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(type.</span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(i));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> &lt;</span><span style="color:#D73A49;">T</span><span style="color:#24292E;">&gt; </span><span style="color:#D73A49;">void</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(Set&lt;</span><span style="color:#D73A49;">T</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">set</span><span style="color:#24292E;">, Function&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">T</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">type</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(set, type);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(set, type); </span><span style="color:#6A737D;">// Try to add duplicates</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(set, type);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(set);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> HashSet&lt;&gt;(), HashType</span><span style="color:#D73A49;">::new</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedHashSet&lt;&gt;(), HashType</span><span style="color:#D73A49;">::new</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> TreeSet&lt;&gt;(), TreeType</span><span style="color:#D73A49;">::new</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Things that don&#39;t work:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> HashSet&lt;&gt;(), SetType</span><span style="color:#D73A49;">::new</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> HashSet&lt;&gt;(), TreeType</span><span style="color:#D73A49;">::new</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedHashSet&lt;&gt;(), SetType</span><span style="color:#D73A49;">::new</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedHashSet&lt;&gt;(), TreeType</span><span style="color:#D73A49;">::new</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> TreeSet&lt;&gt;(), SetType</span><span style="color:#D73A49;">::new</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;">(Exception </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(e.</span><span style="color:#6F42C1;">getMessage</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> TreeSet&lt;&gt;(), HashType</span><span style="color:#D73A49;">::new</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;">(Exception </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(e.</span><span style="color:#6F42C1;">getMessage</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span></span>
<span class="line"><span style="color:#6A737D;">[10, 9, 8, 7, 6, 5, 0, 1, 2, 3, 4]</span></span>
<span class="line"><span style="color:#6A737D;">[10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]</span></span>
<span class="line"><span style="color:#6A737D;">[1, 6, 8, 6, 2, 7, 8, 9, 4, 10, 7, 5, 1, 3, 4, 9, 9,</span></span>
<span class="line"><span style="color:#6A737D;">10, 5, 3, 2, 0, 4, 1, 2, 0, 8, 3, 0, 10, 6, 5, 7]</span></span>
<span class="line"><span style="color:#6A737D;">[3, 1, 4, 8, 7, 6, 9, 5, 3, 0, 10, 5, 5, 10, 7, 8, 8,</span></span>
<span class="line"><span style="color:#6A737D;">9, 1, 4, 10, 2, 6, 9, 1, 6, 0, 3, 2, 0, 7, 2, 4]</span></span>
<span class="line"><span style="color:#6A737D;">[10, 9, 8, 7, 6, 5, 0, 1, 2, 3, 4, 10, 9, 8, 7, 6, 5,</span></span>
<span class="line"><span style="color:#6A737D;">0, 1, 2, 3, 4, 10, 9, 8, 7, 6, 5, 0, 1, 2, 3, 4]</span></span>
<span class="line"><span style="color:#6A737D;">[10, 9, 8, 7, 6, 5, 0, 1, 2, 3, 4, 10, 9, 8, 7, 6, 5,</span></span>
<span class="line"><span style="color:#6A737D;">0, 1, 2, 3, 4, 10, 9, 8, 7, 6, 5, 0, 1, 2, 3, 4]</span></span>
<span class="line"><span style="color:#6A737D;">SetType cannot be cast to java.lang.Comparable</span></span>
<span class="line"><span style="color:#6A737D;">HashType cannot be cast to java.lang.Comparable</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>为了证明特定 <strong>Set</strong> 需要哪些方法，同时避免代码重复，这里创建了三个类。基类 <strong>SetType</strong> 存储一个 <strong>int</strong> 值，并通过 <code>toString()</code> 方法打印它。由于存储在 <strong>Set</strong> 中的所有类都必须具有 <code>equals()</code> ，因此该方法也放在基类中。基于 <code>int i</code> 来判断元素是否相等。</p><p><strong>HashType</strong> 继承自 <strong>SetType</strong> ，并添加了 <code>hashCode()</code> 方法，该方法对于 <strong>Set</strong> 的散列实现是必需的。</p><p>要在任何类型的有序集合中使用对象，由 <strong>TreeType</strong> 实现的 <strong>Comparable</strong> 接口都是必需的，例如 <strong>SortedSet</strong> （ <strong>TreeSet</strong> 是其唯一实现）。在 <code>compareTo()</code> 中，请注意我没有使用“简单明了”的形式： <code>return i-i2</code> 。虽然这是一个常见的编程错误，但只有当 <strong>i</strong> 和 <strong>i2</strong> 是“无符号（unsigned）”整型时才能正常工作（如果 Java 有一个“unsigned”关键字的话，不过它没有）。它破坏了 Java 的有符号 <strong>int</strong> ，它不足以代表两个有符号整数的差异。如果 <strong>i</strong> 是一个大的正整数而 <strong>j</strong> 是一个大的负整数， <code>i-j</code> 将溢出并返回一个负值，这不是我们所需要的。</p><p>通常希望 <code>compareTo()</code> 方法生成与 <code>equals()</code> 方法一致的自然顺序。如果 <code>equals()</code> 对于特定比较产生 <strong>true</strong>，则 <code>compareTo()</code> 应该为该比较返回结果 零，并且如果 <code>equals()</code> 为比较产生 <strong>false</strong> ，则 <code>compareTo()</code> 应该为该比较产生非零结果。</p><p>在 <strong>TypesForSets</strong> 中， <code>fill()</code> 和 <code>test()</code> 都是使用泛型定义的，以防止代码重复。为了验证 <strong>Set</strong> 的行为， <code>test()</code> 在测试集上调用 <code>fill()</code> 三次，尝试引入重复的对象。 <code>fill()</code> 方法的参数可以接收任意一个 <strong>Set</strong> 类型，以及生成该类型的 <strong>Function</strong> 对象。因为此示例中使用的所有对象都有一个带有单个 <strong>int</strong> 参数的构造方法，所以可以将构造方法作为此 <strong>Function</strong> 传递，它将提供用于填充 <strong>Set</strong> 的对象。</p><p>请注意， <code>fill()</code> 方法按降序添加前五个元素，按升序添加后五个元素，以此来指出生成的存储顺序。输出显示 <strong>HashSet</strong> 按升序保留元素，但是，在<a href="./.html">附录:理解equals和hashCode方法</a>中，你会发现这只是偶然的，因为散列会创建自己的存储顺序。这里只是因为元素是一个简单的 <strong>int</strong> ，在这种情况下它是升序的。 <strong>LinkedHashSet</strong> 按照插入顺序保存元素，<strong>TreeSet</strong> 按排序顺序维护元素（在此示例中因为 <code>compareTo()</code> 的实现方式，所以元素按降序排列。）</p><p>特定的 <strong>Set</strong> 类型一般都有所必需的操作，如果尝试使用没能正确支持这些操作的类型，那么事情就会出错。将没有重新定义 <code>hashCode()</code> 方法的 <strong>SetType</strong> 或 <strong>TreeType</strong> 对象放入任何散列实现会导致重复值，因此违反了 <strong>Set</strong> 的主要契约。 这是相当令人不安的，因为这甚至不产生运行时错误。但是，默认的 <code>hashCode()</code> 是合法的，所以即使它是不正确的，这也是合法的行为。确保此类程序正确性的唯一可靠方法是将单元测试合并到构建系统中。</p><p>如果尝试在 <strong>TreeSet</strong> 中使用没有实现 <strong>Comparable</strong> 接口的类型，则会得到更明确的结果：当 <strong>TreeSet</strong> 尝试将对象用作一个 <strong>Comparable</strong> 时，将会抛出异常。</p><h3 id="sortedset" tabindex="-1">SortedSet <a class="header-anchor" href="#sortedset" aria-label="Permalink to &quot;SortedSet&quot;">​</a></h3><p><strong>SortedSet</strong> 中的元素保证按排序规则顺序， <strong>SortedSet</strong> 接口中的以下方法可以产生其他功能：</p><ul><li><code>Comparator comparator()</code> ：生成用于此 <strong>Set</strong> 的<strong>Comparator</strong> 或 <strong>null</strong> 来用于自然排序。</li><li><code>Object first()</code> ：返回第一个元素。</li><li><code>Object last()</code> ：返回最后一个元素。</li><li><code>SortedSet subSet(fromElement，toElement)</code> ：使用 <strong>fromElement</strong> （包含）和 <strong>toElement</strong> （不包括）中的元素生成此 <strong>Set</strong> 的一个视图。</li><li><code>SortedSet headSet(toElement)</code> ：使用顺序在 <strong>toElement</strong> 之前的元素生成此 <strong>Set</strong> 的一个视图。</li><li><code>SortedSet tailSet(fromElement)</code> ：使用顺序在 <strong>fromElement</strong> 之后（包含 <strong>fromElement</strong> ）的元素生成此 <strong>Set</strong> 的一个视图。</li></ul><p>下面是一个简单的演示：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/SortedSetDemo.java</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> java.util.stream.Collectors.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SortedSetDemo</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    SortedSet&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; sortedSet </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      Arrays.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;one two three four five six seven eight&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">split</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">toCollection</span><span style="color:#E1E4E8;">(TreeSet</span><span style="color:#F97583;">::new</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(sortedSet);</span></span>
<span class="line"><span style="color:#E1E4E8;">    String low </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sortedSet.</span><span style="color:#B392F0;">first</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    String high </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sortedSet.</span><span style="color:#B392F0;">last</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(low);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(high);</span></span>
<span class="line"><span style="color:#E1E4E8;">    Iterator&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; it </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sortedSet.</span><span style="color:#B392F0;">iterator</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(i </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">) low </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> it.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(i </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">) high </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> it.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> it.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(low);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(high);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(sortedSet.</span><span style="color:#B392F0;">subSet</span><span style="color:#E1E4E8;">(low, high));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(sortedSet.</span><span style="color:#B392F0;">headSet</span><span style="color:#E1E4E8;">(high));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(sortedSet.</span><span style="color:#B392F0;">tailSet</span><span style="color:#E1E4E8;">(low));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">[eight, five, four, one, seven, six, three, two]</span></span>
<span class="line"><span style="color:#6A737D;">eight</span></span>
<span class="line"><span style="color:#6A737D;">two</span></span>
<span class="line"><span style="color:#6A737D;">one</span></span>
<span class="line"><span style="color:#6A737D;">two</span></span>
<span class="line"><span style="color:#6A737D;">[one, seven, six, three]</span></span>
<span class="line"><span style="color:#6A737D;">[eight, five, four, one, seven, six, three]</span></span>
<span class="line"><span style="color:#6A737D;">[one, seven, six, three, two]</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/SortedSetDemo.java</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> java.util.stream.Collectors.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SortedSetDemo</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    SortedSet&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; sortedSet </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      Arrays.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;one two three four five six seven eight&quot;</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">toCollection</span><span style="color:#24292E;">(TreeSet</span><span style="color:#D73A49;">::new</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(sortedSet);</span></span>
<span class="line"><span style="color:#24292E;">    String low </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sortedSet.</span><span style="color:#6F42C1;">first</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    String high </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sortedSet.</span><span style="color:#6F42C1;">last</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(low);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(high);</span></span>
<span class="line"><span style="color:#24292E;">    Iterator&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; it </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sortedSet.</span><span style="color:#6F42C1;">iterator</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(i </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">) low </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> it.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(i </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">) high </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> it.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> it.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(low);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(high);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(sortedSet.</span><span style="color:#6F42C1;">subSet</span><span style="color:#24292E;">(low, high));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(sortedSet.</span><span style="color:#6F42C1;">headSet</span><span style="color:#24292E;">(high));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(sortedSet.</span><span style="color:#6F42C1;">tailSet</span><span style="color:#24292E;">(low));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">[eight, five, four, one, seven, six, three, two]</span></span>
<span class="line"><span style="color:#6A737D;">eight</span></span>
<span class="line"><span style="color:#6A737D;">two</span></span>
<span class="line"><span style="color:#6A737D;">one</span></span>
<span class="line"><span style="color:#6A737D;">two</span></span>
<span class="line"><span style="color:#6A737D;">[one, seven, six, three]</span></span>
<span class="line"><span style="color:#6A737D;">[eight, five, four, one, seven, six, three]</span></span>
<span class="line"><span style="color:#6A737D;">[one, seven, six, three, two]</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>注意， <strong>SortedSet</strong> 表示“根据对象的比较函数进行排序”，而不是“根据插入顺序”。可以使用 <strong>LinkedHashSet</strong> 保留元素的插入顺序。</p><h2 id="队列" tabindex="-1">队列 <a class="header-anchor" href="#队列" aria-label="Permalink to &quot;队列&quot;">​</a></h2><p>有许多 <strong>Queue</strong> 实现，其中大多数是为并发应用程序设计的。许多实现都是通过排序行为而不是性能来区分的。这是一个涉及大多数 <strong>Queue</strong> 实现的基本示例，包括基于并发的队列。队列将元素从一端放入并从另一端取出：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/QueueBehavior.java</span></span>
<span class="line"><span style="color:#6A737D;">// Compares basic behavior</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.stream.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.concurrent.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">QueueBehavior</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Stream&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#B392F0;">strings</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Arrays.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      (</span><span style="color:#9ECBFF;">&quot;one two three four five six seven &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#9ECBFF;">&quot;eight nine ten&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">split</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">id</span><span style="color:#E1E4E8;">, Queue&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">queue</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(id </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;: &quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">strings</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(queue</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">offer).</span><span style="color:#B392F0;">count</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(queue.</span><span style="color:#B392F0;">peek</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      System.out.</span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(queue.</span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> count </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedList&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> PriorityQueue&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayBlockingQueue&lt;&gt;(count));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ConcurrentLinkedQueue&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedBlockingQueue&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> PriorityBlockingQueue&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayDeque&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ConcurrentLinkedDeque&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedBlockingDeque&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedTransferQueue&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> SynchronousQueue&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">1: one two three four five six seven eight nine ten</span></span>
<span class="line"><span style="color:#6A737D;">2: eight five four nine one seven six ten three two</span></span>
<span class="line"><span style="color:#6A737D;">3: one two three four five six seven eight nine ten</span></span>
<span class="line"><span style="color:#6A737D;">4: one two three four five six seven eight nine ten</span></span>
<span class="line"><span style="color:#6A737D;">5: one two three four five six seven eight nine ten</span></span>
<span class="line"><span style="color:#6A737D;">6: eight five four nine one seven six ten three two</span></span>
<span class="line"><span style="color:#6A737D;">7: one two three four five six seven eight nine ten</span></span>
<span class="line"><span style="color:#6A737D;">8: one two three four five six seven eight nine ten</span></span>
<span class="line"><span style="color:#6A737D;">9: one two three four five six seven eight nine ten</span></span>
<span class="line"><span style="color:#6A737D;">10: one two three four five six seven eight nine ten</span></span>
<span class="line"><span style="color:#6A737D;">11:</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/QueueBehavior.java</span></span>
<span class="line"><span style="color:#6A737D;">// Compares basic behavior</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.stream.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.concurrent.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">QueueBehavior</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Stream&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">strings</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Arrays.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      (</span><span style="color:#032F62;">&quot;one two three four five six seven &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#032F62;">&quot;eight nine ten&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">id</span><span style="color:#24292E;">, Queue&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">queue</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(id </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;: &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">strings</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(queue</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">offer).</span><span style="color:#6F42C1;">count</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(queue.</span><span style="color:#6F42C1;">peek</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(queue.</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> count </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedList&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> PriorityQueue&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayBlockingQueue&lt;&gt;(count));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ConcurrentLinkedQueue&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedBlockingQueue&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> PriorityBlockingQueue&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayDeque&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ConcurrentLinkedDeque&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedBlockingDeque&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedTransferQueue&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> SynchronousQueue&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">1: one two three four five six seven eight nine ten</span></span>
<span class="line"><span style="color:#6A737D;">2: eight five four nine one seven six ten three two</span></span>
<span class="line"><span style="color:#6A737D;">3: one two three four five six seven eight nine ten</span></span>
<span class="line"><span style="color:#6A737D;">4: one two three four five six seven eight nine ten</span></span>
<span class="line"><span style="color:#6A737D;">5: one two three four five six seven eight nine ten</span></span>
<span class="line"><span style="color:#6A737D;">6: eight five four nine one seven six ten three two</span></span>
<span class="line"><span style="color:#6A737D;">7: one two three four five six seven eight nine ten</span></span>
<span class="line"><span style="color:#6A737D;">8: one two three four five six seven eight nine ten</span></span>
<span class="line"><span style="color:#6A737D;">9: one two three four five six seven eight nine ten</span></span>
<span class="line"><span style="color:#6A737D;">10: one two three four five six seven eight nine ten</span></span>
<span class="line"><span style="color:#6A737D;">11:</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p><strong>Deque</strong> 接口也继承自 <strong>Queue</strong> 。 除优先级队列外，<strong>Queue</strong> 按照元素的插入顺序生成元素。 在此示例中，<strong>SynchronousQueue</strong> 不会产生任何结果，因为它是一个阻塞队列，其中每个插入操作必须等待另一个线程执行相应的删除操作，反之亦然。</p><h3 id="优先级队列" tabindex="-1">优先级队列 <a class="header-anchor" href="#优先级队列" aria-label="Permalink to &quot;优先级队列&quot;">​</a></h3><p>考虑一个待办事项列表，其中每个对象包含一个 <strong>String</strong> 以及主要和次要优先级值。通过实现 <strong>Comparable</strong> 接口来控制此待办事项列表的顺序：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/ToDoList.java</span></span>
<span class="line"><span style="color:#6A737D;">// A more complex use of PriorityQueue</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ToDoItem</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Comparable</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">ToDoItem</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> primary;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> secondary;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String item;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">ToDoItem</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">td</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">pri</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">sec</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    primary </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> pri;</span></span>
<span class="line"><span style="color:#E1E4E8;">    secondary </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sec;</span></span>
<span class="line"><span style="color:#E1E4E8;">    item </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> td;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">compareTo</span><span style="color:#E1E4E8;">(ToDoItem </span><span style="color:#FFAB70;">arg</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(primary </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> arg.primary)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(primary </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> arg.primary)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(secondary </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> arg.secondary)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(secondary </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> arg.secondary)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Character.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">(primary) </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">      secondary </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> item;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ToDoList</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    PriorityQueue&lt;</span><span style="color:#F97583;">ToDoItem</span><span style="color:#E1E4E8;">&gt; toDo </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> PriorityQueue&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">    toDo.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ToDoItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Empty trash&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;C&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    toDo.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ToDoItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Feed dog&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;A&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    toDo.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ToDoItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Feed bird&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;B&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    toDo.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ToDoItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Mow lawn&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;C&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    toDo.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ToDoItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Water lawn&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;A&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    toDo.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ToDoItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Feed cat&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;B&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">toDo.</span><span style="color:#B392F0;">isEmpty</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">      System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(toDo.</span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">A1: Water lawn</span></span>
<span class="line"><span style="color:#6A737D;">A2: Feed dog</span></span>
<span class="line"><span style="color:#6A737D;">B1: Feed cat</span></span>
<span class="line"><span style="color:#6A737D;">B7: Feed bird</span></span>
<span class="line"><span style="color:#6A737D;">C3: Mow lawn</span></span>
<span class="line"><span style="color:#6A737D;">C4: Empty trash</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/ToDoList.java</span></span>
<span class="line"><span style="color:#6A737D;">// A more complex use of PriorityQueue</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ToDoItem</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Comparable</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">ToDoItem</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> primary;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> secondary;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String item;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">ToDoItem</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">td</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#E36209;">pri</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">sec</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    primary </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pri;</span></span>
<span class="line"><span style="color:#24292E;">    secondary </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sec;</span></span>
<span class="line"><span style="color:#24292E;">    item </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> td;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">compareTo</span><span style="color:#24292E;">(ToDoItem </span><span style="color:#E36209;">arg</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(primary </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> arg.primary)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(primary </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> arg.primary)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(secondary </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> arg.secondary)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(secondary </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> arg.secondary)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Character.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">(primary) </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">      secondary </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> item;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ToDoList</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    PriorityQueue&lt;</span><span style="color:#D73A49;">ToDoItem</span><span style="color:#24292E;">&gt; toDo </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> PriorityQueue&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">    toDo.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ToDoItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Empty trash&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;C&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    toDo.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ToDoItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Feed dog&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;A&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    toDo.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ToDoItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Feed bird&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;B&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    toDo.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ToDoItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Mow lawn&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;C&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    toDo.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ToDoItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Water lawn&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;A&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    toDo.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ToDoItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Feed cat&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;B&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">toDo.</span><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">      System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(toDo.</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">A1: Water lawn</span></span>
<span class="line"><span style="color:#6A737D;">A2: Feed dog</span></span>
<span class="line"><span style="color:#6A737D;">B1: Feed cat</span></span>
<span class="line"><span style="color:#6A737D;">B7: Feed bird</span></span>
<span class="line"><span style="color:#6A737D;">C3: Mow lawn</span></span>
<span class="line"><span style="color:#6A737D;">C4: Empty trash</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>这展示了通过优先级队列自动排序待办事项。</p><h3 id="双端队列" tabindex="-1">双端队列 <a class="header-anchor" href="#双端队列" aria-label="Permalink to &quot;双端队列&quot;">​</a></h3><p><strong>Deque</strong> （双端队列）就像一个队列，但是可以从任一端添加和删除元素。 Java 6为 <strong>Deque</strong> 添加了一个显式接口。以下是对实现了 <strong>Deque</strong> 的类的最基本的 <strong>Deque</strong> 方法的测试：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/SimpleDeques.java</span></span>
<span class="line"><span style="color:#6A737D;">// Very basic test of Deques</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.concurrent.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.function.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CountString</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Supplier</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> n </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">CountString</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">CountString</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">start</span><span style="color:#E1E4E8;">) { n </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> start; }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Integer.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">(n</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SimpleDeques</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(Deque&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">deque</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    CountString s1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CountString</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">                s2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CountString</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> n </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; n </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">; n</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        deque.</span><span style="color:#B392F0;">offerFirst</span><span style="color:#E1E4E8;">(s1.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">        deque.</span><span style="color:#B392F0;">offerLast</span><span style="color:#E1E4E8;">(s2.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">()); </span><span style="color:#6A737D;">// Same as offer()</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(deque);</span></span>
<span class="line"><span style="color:#E1E4E8;">    String result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(deque.</span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      System.out.</span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(deque.</span><span style="color:#B392F0;">peekFirst</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      result </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> deque.</span><span style="color:#B392F0;">pollFirst</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      System.out.</span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(deque.</span><span style="color:#B392F0;">peekLast</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      result </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> deque.</span><span style="color:#B392F0;">pollLast</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> result);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> count </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;LinkedList&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedList&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;ArrayDeque&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayDeque&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;LinkedBlockingDeque&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedBlockingDeque&lt;&gt;(count));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;ConcurrentLinkedDeque&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ConcurrentLinkedDeque&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">LinkedList</span></span>
<span class="line"><span style="color:#6A737D;">[7, 6, 5, 4, 3, 2, 1, 0, 20, 21, 22, 23, 24, 25, 26,</span></span>
<span class="line"><span style="color:#6A737D;">27]</span></span>
<span class="line"><span style="color:#6A737D;">7 27 6 26 5 25 4 24 3 23 2 22 1 21 0 20</span></span>
<span class="line"><span style="color:#6A737D;">7 27 6 26 5 25 4 24 3 23 2 22 1 21 0 20</span></span>
<span class="line"><span style="color:#6A737D;">ArrayDeque</span></span>
<span class="line"><span style="color:#6A737D;">[7, 6, 5, 4, 3, 2, 1, 0, 20, 21, 22, 23, 24, 25, 26,</span></span>
<span class="line"><span style="color:#6A737D;">27]</span></span>
<span class="line"><span style="color:#6A737D;">7 27 6 26 5 25 4 24 3 23 2 22 1 21 0 20</span></span>
<span class="line"><span style="color:#6A737D;">7 27 6 26 5 25 4 24 3 23 2 22 1 21 0 20</span></span>
<span class="line"><span style="color:#6A737D;">LinkedBlockingDeque</span></span>
<span class="line"><span style="color:#6A737D;">[4, 3, 2, 1, 0, 20, 21, 22, 23, 24]</span></span>
<span class="line"><span style="color:#6A737D;">4 24 3 23 2 22 1 21 0 20</span></span>
<span class="line"><span style="color:#6A737D;">4 24 3 23 2 22 1 21 0 20</span></span>
<span class="line"><span style="color:#6A737D;">ConcurrentLinkedDeque</span></span>
<span class="line"><span style="color:#6A737D;">[7, 6, 5, 4, 3, 2, 1, 0, 20, 21, 22, 23, 24, 25, 26,</span></span>
<span class="line"><span style="color:#6A737D;">27]</span></span>
<span class="line"><span style="color:#6A737D;">7 27 6 26 5 25 4 24 3 23 2 22 1 21 0 20</span></span>
<span class="line"><span style="color:#6A737D;">7 27 6 26 5 25 4 24 3 23 2 22 1 21 0 20</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/SimpleDeques.java</span></span>
<span class="line"><span style="color:#6A737D;">// Very basic test of Deques</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.concurrent.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.function.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CountString</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Supplier</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> n </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">CountString</span><span style="color:#24292E;">() {}</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">CountString</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">start</span><span style="color:#24292E;">) { n </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> start; }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Integer.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">(n</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SimpleDeques</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(Deque&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">deque</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    CountString s1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CountString</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">                s2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CountString</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> n </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; n </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">; n</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        deque.</span><span style="color:#6F42C1;">offerFirst</span><span style="color:#24292E;">(s1.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        deque.</span><span style="color:#6F42C1;">offerLast</span><span style="color:#24292E;">(s2.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">()); </span><span style="color:#6A737D;">// Same as offer()</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(deque);</span></span>
<span class="line"><span style="color:#24292E;">    String result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(deque.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(deque.</span><span style="color:#6F42C1;">peekFirst</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      result </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> deque.</span><span style="color:#6F42C1;">pollFirst</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(deque.</span><span style="color:#6F42C1;">peekLast</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      result </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> deque.</span><span style="color:#6F42C1;">pollLast</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> result);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> count </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;LinkedList&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedList&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ArrayDeque&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayDeque&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;LinkedBlockingDeque&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedBlockingDeque&lt;&gt;(count));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ConcurrentLinkedDeque&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ConcurrentLinkedDeque&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">LinkedList</span></span>
<span class="line"><span style="color:#6A737D;">[7, 6, 5, 4, 3, 2, 1, 0, 20, 21, 22, 23, 24, 25, 26,</span></span>
<span class="line"><span style="color:#6A737D;">27]</span></span>
<span class="line"><span style="color:#6A737D;">7 27 6 26 5 25 4 24 3 23 2 22 1 21 0 20</span></span>
<span class="line"><span style="color:#6A737D;">7 27 6 26 5 25 4 24 3 23 2 22 1 21 0 20</span></span>
<span class="line"><span style="color:#6A737D;">ArrayDeque</span></span>
<span class="line"><span style="color:#6A737D;">[7, 6, 5, 4, 3, 2, 1, 0, 20, 21, 22, 23, 24, 25, 26,</span></span>
<span class="line"><span style="color:#6A737D;">27]</span></span>
<span class="line"><span style="color:#6A737D;">7 27 6 26 5 25 4 24 3 23 2 22 1 21 0 20</span></span>
<span class="line"><span style="color:#6A737D;">7 27 6 26 5 25 4 24 3 23 2 22 1 21 0 20</span></span>
<span class="line"><span style="color:#6A737D;">LinkedBlockingDeque</span></span>
<span class="line"><span style="color:#6A737D;">[4, 3, 2, 1, 0, 20, 21, 22, 23, 24]</span></span>
<span class="line"><span style="color:#6A737D;">4 24 3 23 2 22 1 21 0 20</span></span>
<span class="line"><span style="color:#6A737D;">4 24 3 23 2 22 1 21 0 20</span></span>
<span class="line"><span style="color:#6A737D;">ConcurrentLinkedDeque</span></span>
<span class="line"><span style="color:#6A737D;">[7, 6, 5, 4, 3, 2, 1, 0, 20, 21, 22, 23, 24, 25, 26,</span></span>
<span class="line"><span style="color:#6A737D;">27]</span></span>
<span class="line"><span style="color:#6A737D;">7 27 6 26 5 25 4 24 3 23 2 22 1 21 0 20</span></span>
<span class="line"><span style="color:#6A737D;">7 27 6 26 5 25 4 24 3 23 2 22 1 21 0 20</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>我只使用了 <strong>Deque</strong> 方法的“offer”和“poll”版本，因为当 <strong>LinkedBlockingDeque</strong> 的大小有限时，这些方法不会抛出异常。请注意， <strong>LinkedBlockingDeque</strong> 仅填充到它的限制大小为止，然后忽略额外的添加。</p><h2 id="理解map" tabindex="-1">理解Map <a class="header-anchor" href="#理解map" aria-label="Permalink to &quot;理解Map&quot;">​</a></h2><p>正如在<a href="./.html">第十二章 集合</a>章节中所了解到的，<strong>Map</strong>（也称为 <em>关联数组</em> ）维护键值关联（对），因此可以使用键来查找值。标准 Java 库包含不同的 <strong>Map</strong> 基本实现，例如 <strong>HashMap</strong> ， <strong>TreeMap</strong> ， <strong>LinkedHashMap</strong> ， <strong>WeakHashMap</strong> ， <strong>ConcurrentHashMap</strong> 和 <strong>IdentityHashMap</strong> 。 它们都具有相同的基本 <strong>Map</strong> 接口，但它们的行为不同，包括效率，键值对的保存顺序和呈现顺序，保存对象的时间，如何在多线程程序中工作，以及如何确定键的相等性。 <strong>Map</strong> 接口的实现数量应该告诉你一些关于此工具重要性的信息。</p><p>为了更深入地了解 <strong>Map</strong> ，学习如何构造关联数组会很有帮助。下面是一个非常简单的实现：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/AssociativeArray.java</span></span>
<span class="line"><span style="color:#6A737D;">// Associates keys with values</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AssociativeArray</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">K</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">V</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">Object</span><span style="color:#E1E4E8;">[][] pairs;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> index;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AssociativeArray</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">length</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    pairs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">Object</span><span style="color:#E1E4E8;">[length][</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(K </span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;">, V </span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(index </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> pairs.length)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ArrayIndexOutOfBoundsException</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    pairs[index</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">Object</span><span style="color:#E1E4E8;">[]{ key, value };</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">SuppressWarnings</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;unchecked&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> V </span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(K </span><span style="color:#FFAB70;">key</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> index; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(key.</span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(pairs[i][</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]))</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (V)pairs[i][</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// Did not find key</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    StringBuilder result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">StringBuilder</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> index; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      result.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(pairs[i][</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">].</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">      result.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot; : &quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      result.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(pairs[i][</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">].</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> index </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        result.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> result.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    AssociativeArray&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; map </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> AssociativeArray&lt;&gt;(</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    map.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;sky&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;blue&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    map.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;grass&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;green&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    map.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;ocean&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;dancing&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    map.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;tree&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;tall&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    map.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;earth&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;brown&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    map.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;sun&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;warm&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      map.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;extra&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;object&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// Past the end</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;">(ArrayIndexOutOfBoundsException </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Too many objects!&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(map);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(map.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;ocean&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">Too many objects!</span></span>
<span class="line"><span style="color:#6A737D;">sky : blue</span></span>
<span class="line"><span style="color:#6A737D;">grass : green</span></span>
<span class="line"><span style="color:#6A737D;">ocean : dancing</span></span>
<span class="line"><span style="color:#6A737D;">tree : tall</span></span>
<span class="line"><span style="color:#6A737D;">earth : brown</span></span>
<span class="line"><span style="color:#6A737D;">sun : warm</span></span>
<span class="line"><span style="color:#6A737D;">dancing</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/AssociativeArray.java</span></span>
<span class="line"><span style="color:#6A737D;">// Associates keys with values</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AssociativeArray</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">K</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">V</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">[][] pairs;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> index;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AssociativeArray</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">length</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    pairs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">[length][</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(K </span><span style="color:#E36209;">key</span><span style="color:#24292E;">, V </span><span style="color:#E36209;">value</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(index </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> pairs.length)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ArrayIndexOutOfBoundsException</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    pairs[index</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">[]{ key, value };</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">SuppressWarnings</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;unchecked&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> V </span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(K </span><span style="color:#E36209;">key</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> index; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(key.</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(pairs[i][</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]))</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (V)pairs[i][</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// Did not find key</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    StringBuilder result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StringBuilder</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> index; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      result.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(pairs[i][</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">      result.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot; : &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      result.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(pairs[i][</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">].</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> index </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        result.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> result.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    AssociativeArray&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; map </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> AssociativeArray&lt;&gt;(</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    map.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;sky&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;blue&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    map.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;grass&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;green&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    map.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ocean&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;dancing&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    map.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;tree&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;tall&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    map.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;earth&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;brown&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    map.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;sun&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;warm&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      map.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;extra&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;object&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// Past the end</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;">(ArrayIndexOutOfBoundsException </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Too many objects!&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(map);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(map.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ocean&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">Too many objects!</span></span>
<span class="line"><span style="color:#6A737D;">sky : blue</span></span>
<span class="line"><span style="color:#6A737D;">grass : green</span></span>
<span class="line"><span style="color:#6A737D;">ocean : dancing</span></span>
<span class="line"><span style="color:#6A737D;">tree : tall</span></span>
<span class="line"><span style="color:#6A737D;">earth : brown</span></span>
<span class="line"><span style="color:#6A737D;">sun : warm</span></span>
<span class="line"><span style="color:#6A737D;">dancing</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>关联数组中的基本方法是 <code>put()</code> 和 <code>get()</code> ，但为了便于显示，重写了 <code>toString()</code> 方法以打印键值对。为了显示它的工作原理，主方法加载一个带有字符串对的 <strong>AssociativeArray</strong> 并打印生成的映射，然后调用其中一个值的 <code>get()</code> 方法。</p><p>要使用 <code>get()</code> 方法，可以传入要查找的 <strong>key</strong> ，它将生成相关联的值作为结果，如果找不到则返回 <strong>null</strong> 。 <code>get()</code> 方法使用可能是效率最低的方法来定位值：从数组的头部开始并使用 <code>equals()</code> 来比较键。但这里是侧重于简单，而不是效率。</p><p>这个版本很有启发性，但它不是很有效，而且它只有一个固定的大小，这是不灵活的。幸运的是， <strong>java.util</strong> 中的那些 <strong>Map</strong> 没有这些问题。</p><h3 id="性能" tabindex="-1">性能 <a class="header-anchor" href="#性能" aria-label="Permalink to &quot;性能&quot;">​</a></h3><p>性能是 <strong>Map</strong> 的基本问题，在 <code>get()</code> 中使用线性方法搜索一个键时会非常慢。这就是 <strong>HashMap</strong> 要加速的地方。它使用一个称为 <em>哈希码</em> 的特殊值来替代慢速搜索一个键。哈希码是一种从相关对象中获取一些信息并将其转换为该对象的“相对唯一” <strong>int</strong> 的方法。 <code>hashCode()</code> 是根类 <strong>Object</strong> 中的一个方法，因此所有 Java 对象都可以生成哈希码。 <strong>HashMap</strong> 获取对象的 <code>hashCode()</code> 并使用它来快速搜索键。这就使得性能有了显著的提升。[^3]</p><p>以下是基本的 <strong>Map</strong> 实现。 <strong>HashMap</strong>上的星号表示，在没有其他约束的情况下，这应该是你的默认选择，因为它针对速度进行了优化。其他实现强调其他特性，因此不如 <strong>HashMap</strong> 快。</p><table><thead><tr><th style="text-align:center;"><strong>Map</strong> 实现</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>HashMap*</strong></td><td style="text-align:left;">基于哈希表的实现。（使用此类来代替 <strong>Hashtable</strong> 。）为插入和定位键值对提供了常数时间性能。可以通过构造方法调整性能，这些构造方法允许你设置哈希表的容量和装填因子。</td></tr><tr><td style="text-align:center;"><strong>LinkedHashMap</strong></td><td style="text-align:left;">与 <strong>HashMap</strong> 类似，但是当遍历时，可以按插入顺序或最近最少使用（LRU）顺序获取键值对。只比 <strong>HashMap</strong> 略慢，一个例外是在迭代时，由于其使用链表维护内部顺序，所以会更快些。</td></tr><tr><td style="text-align:center;"><strong>TreeMap</strong></td><td style="text-align:left;">基于红黑树的实现。当查看键或键值对时，它们按排序顺序（由 <strong>Comparable</strong> 或 <strong>Comparator</strong> 确定）。 <strong>TreeMap</strong> 的侧重点是按排序顺序获得结果。 <strong>TreeMap</strong> 是唯一使用 <code>subMap()</code> 方法的 <strong>Map</strong> ，它返回红黑树的一部分。</td></tr><tr><td style="text-align:center;"><strong>WeakHashMap</strong></td><td style="text-align:left;">一种具有 <em>弱键</em>（weak keys） 的 <strong>Map</strong> ，为了解决某些类型的问题，它允许释放 <strong>Map</strong> 所引用的对象。如果在 <strong>Map</strong> 外没有对特定键的引用，则可以对该键进行垃圾回收。</td></tr><tr><td style="text-align:center;"><strong>ConcurrentHashMap</strong></td><td style="text-align:left;">不使用同步锁定的线程安全 <strong>Mao</strong> 。这在<a href="./.html">第二十四章 并发编程</a> 一章中讨论。</td></tr><tr><td style="text-align:center;"><strong>IdentityHashMap</strong></td><td style="text-align:left;">使用 <code>==</code> 而不是 <code>equals()</code> 来比较键。仅用于解决特殊问题，不适用于一般用途。</td></tr></tbody></table><p>散列是在 <strong>Map</strong> 中存储元素的最常用方法。</p><p><strong>Map</strong> 中使用的键的要求与 <strong>Set</strong> 中的元素的要求相同。可以在 <strong>TypesForSets.java</strong> 中看到这些。任何键必须具有 <code>equals()</code> 方法。如果键用于散列映射，则它还必须具有正确的 <code>hashCode()</code> 方法。如果键在 <strong>TreeMap</strong> 中使用，则必须实现 <strong>Comparable</strong> 接口。</p><p>以下示例使用先前定义的 <strong>CountMap</strong> 测试数据集显示通过 <strong>Map</strong> 接口可用的操作：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/MapOps.java</span></span>
<span class="line"><span style="color:#6A737D;">// Things you can do with Maps</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.concurrent.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> onjava.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MapOps</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">printKeys</span><span style="color:#E1E4E8;">(Map&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">map</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Size = &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> map.</span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;, &quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Keys: &quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Produce a Set of the keys:</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(map.</span><span style="color:#B392F0;">keySet</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(Map&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">map</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      map.</span><span style="color:#B392F0;">getClass</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getSimpleName</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    map.</span><span style="color:#B392F0;">putAll</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CountMap</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">25</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Map has &#39;Set&#39; behavior for keys:</span></span>
<span class="line"><span style="color:#E1E4E8;">    map.</span><span style="color:#B392F0;">putAll</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CountMap</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">25</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">printKeys</span><span style="color:#E1E4E8;">(map);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Producing a Collection of the values:</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Values: &quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(map.</span><span style="color:#B392F0;">values</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(map);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;map.containsKey(11): &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">      map.</span><span style="color:#B392F0;">containsKey</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;map.get(11): &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> map.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;map.containsValue(</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">F0</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">): &quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> map.</span><span style="color:#B392F0;">containsValue</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;F0&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    Integer key </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> map.</span><span style="color:#B392F0;">keySet</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">iterator</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;First key in map: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> key);</span></span>
<span class="line"><span style="color:#E1E4E8;">    map.</span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">(key);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">printKeys</span><span style="color:#E1E4E8;">(map);</span></span>
<span class="line"><span style="color:#E1E4E8;">    map.</span><span style="color:#B392F0;">clear</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;map.isEmpty(): &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> map.</span><span style="color:#B392F0;">isEmpty</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    map.</span><span style="color:#B392F0;">putAll</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CountMap</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">25</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Operations on the Set change the Map:</span></span>
<span class="line"><span style="color:#E1E4E8;">    map.</span><span style="color:#B392F0;">keySet</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">removeAll</span><span style="color:#E1E4E8;">(map.</span><span style="color:#B392F0;">keySet</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;map.isEmpty(): &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> map.</span><span style="color:#B392F0;">isEmpty</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> HashMap&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> TreeMap&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedHashMap&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> IdentityHashMap&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ConcurrentHashMap&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> WeakHashMap&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output: (First 11 Lines)</span></span>
<span class="line"><span style="color:#6A737D;">HashMap</span></span>
<span class="line"><span style="color:#6A737D;">Size = 25, Keys: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,</span></span>
<span class="line"><span style="color:#6A737D;">12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]</span></span>
<span class="line"><span style="color:#6A737D;">Values: [A0, B0, C0, D0, E0, F0, G0, H0, I0, J0, K0,</span></span>
<span class="line"><span style="color:#6A737D;">L0, M0, N0, O0, P0, Q0, R0, S0, T0, U0, V0, W0, X0, Y0]</span></span>
<span class="line"><span style="color:#6A737D;">{0=A0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0, 6=G0, 7=H0, 8=I0,</span></span>
<span class="line"><span style="color:#6A737D;">9=J0, 10=K0, 11=L0, 12=M0, 13=N0, 14=O0, 15=P0, 16=Q0,</span></span>
<span class="line"><span style="color:#6A737D;">17=R0, 18=S0, 19=T0, 20=U0, 21=V0, 22=W0, 23=X0, 24=Y0}</span></span>
<span class="line"><span style="color:#6A737D;">map.containsKey(11): true</span></span>
<span class="line"><span style="color:#6A737D;">map.get(11): L0</span></span>
<span class="line"><span style="color:#6A737D;">map.containsValue(&quot;F0&quot;): true</span></span>
<span class="line"><span style="color:#6A737D;">First key in map: 0</span></span>
<span class="line"><span style="color:#6A737D;">Size = 24, Keys: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,</span></span>
<span class="line"><span style="color:#6A737D;">12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]</span></span>
<span class="line"><span style="color:#6A737D;">map.isEmpty(): true</span></span>
<span class="line"><span style="color:#6A737D;">map.isEmpty(): true</span></span>
<span class="line"><span style="color:#6A737D;">                  ...</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/MapOps.java</span></span>
<span class="line"><span style="color:#6A737D;">// Things you can do with Maps</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.concurrent.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> onjava.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MapOps</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">printKeys</span><span style="color:#24292E;">(Map&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">map</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Size = &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> map.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;, &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Keys: &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Produce a Set of the keys:</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(map.</span><span style="color:#6F42C1;">keySet</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(Map&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">map</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      map.</span><span style="color:#6F42C1;">getClass</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getSimpleName</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    map.</span><span style="color:#6F42C1;">putAll</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CountMap</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">25</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Map has &#39;Set&#39; behavior for keys:</span></span>
<span class="line"><span style="color:#24292E;">    map.</span><span style="color:#6F42C1;">putAll</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CountMap</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">25</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">printKeys</span><span style="color:#24292E;">(map);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Producing a Collection of the values:</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Values: &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(map.</span><span style="color:#6F42C1;">values</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(map);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;map.containsKey(11): &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">      map.</span><span style="color:#6F42C1;">containsKey</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;map.get(11): &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> map.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;map.containsValue(</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">F0</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">): &quot;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> map.</span><span style="color:#6F42C1;">containsValue</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;F0&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    Integer key </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> map.</span><span style="color:#6F42C1;">keySet</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">iterator</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;First key in map: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> key);</span></span>
<span class="line"><span style="color:#24292E;">    map.</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">(key);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">printKeys</span><span style="color:#24292E;">(map);</span></span>
<span class="line"><span style="color:#24292E;">    map.</span><span style="color:#6F42C1;">clear</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;map.isEmpty(): &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> map.</span><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    map.</span><span style="color:#6F42C1;">putAll</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CountMap</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">25</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Operations on the Set change the Map:</span></span>
<span class="line"><span style="color:#24292E;">    map.</span><span style="color:#6F42C1;">keySet</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">removeAll</span><span style="color:#24292E;">(map.</span><span style="color:#6F42C1;">keySet</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;map.isEmpty(): &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> map.</span><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> HashMap&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> TreeMap&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedHashMap&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> IdentityHashMap&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ConcurrentHashMap&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> WeakHashMap&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output: (First 11 Lines)</span></span>
<span class="line"><span style="color:#6A737D;">HashMap</span></span>
<span class="line"><span style="color:#6A737D;">Size = 25, Keys: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,</span></span>
<span class="line"><span style="color:#6A737D;">12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]</span></span>
<span class="line"><span style="color:#6A737D;">Values: [A0, B0, C0, D0, E0, F0, G0, H0, I0, J0, K0,</span></span>
<span class="line"><span style="color:#6A737D;">L0, M0, N0, O0, P0, Q0, R0, S0, T0, U0, V0, W0, X0, Y0]</span></span>
<span class="line"><span style="color:#6A737D;">{0=A0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0, 6=G0, 7=H0, 8=I0,</span></span>
<span class="line"><span style="color:#6A737D;">9=J0, 10=K0, 11=L0, 12=M0, 13=N0, 14=O0, 15=P0, 16=Q0,</span></span>
<span class="line"><span style="color:#6A737D;">17=R0, 18=S0, 19=T0, 20=U0, 21=V0, 22=W0, 23=X0, 24=Y0}</span></span>
<span class="line"><span style="color:#6A737D;">map.containsKey(11): true</span></span>
<span class="line"><span style="color:#6A737D;">map.get(11): L0</span></span>
<span class="line"><span style="color:#6A737D;">map.containsValue(&quot;F0&quot;): true</span></span>
<span class="line"><span style="color:#6A737D;">First key in map: 0</span></span>
<span class="line"><span style="color:#6A737D;">Size = 24, Keys: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,</span></span>
<span class="line"><span style="color:#6A737D;">12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]</span></span>
<span class="line"><span style="color:#6A737D;">map.isEmpty(): true</span></span>
<span class="line"><span style="color:#6A737D;">map.isEmpty(): true</span></span>
<span class="line"><span style="color:#6A737D;">                  ...</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p><code>printKeys()</code> 方法演示了如何生成 <strong>Map</strong> 的 <strong>Collection</strong> 视图。 <code>keySet()</code> 方法生成一个由 <strong>Map</strong> 中的键组成的 <strong>Set</strong> 。 打印 <code>values()</code> 方法的结果会生成一个包含 <strong>Map</strong> 中所有值的 <strong>Collection</strong> 。（请注意，键必须是唯一的，但值可以包含重复项。）由于这些 <strong>Collection</strong> 由 <strong>Map</strong> 支持，因此 <strong>Collection</strong> 中的任何更改都会反映在所关联的 <strong>Map</strong> 中。</p><p>程序的其余部分提供了每个 <strong>Map</strong> 操作的简单示例，并测试了每种基本类型的 <strong>Map</strong> 。</p><h3 id="sortedmap" tabindex="-1">SortedMap <a class="header-anchor" href="#sortedmap" aria-label="Permalink to &quot;SortedMap&quot;">​</a></h3><p>使用 <strong>SortedMap</strong> （由 <strong>TreeMap</strong> 或 <strong>ConcurrentSkipListMap</strong> 实现），键保证按排序顺序，这允许在 <strong>SortedMap</strong> 接口中使用这些方法来提供其他功能：</p><ul><li><code>Comparator comparator()</code> ：生成用于此 <strong>Map</strong> 的比较器， <strong>null</strong> 表示自然排序。</li><li><code>T firstKey()</code> ：返回第一个键。</li><li><code>T lastKey()</code> ：返回最后一个键。</li><li><code>SortedMap subMap(fromKey，toKey)</code> ：生成此 <strong>Map</strong> 的视图，其中键从 <strong>fromKey</strong>（包括），到 <strong>toKey</strong> （不包括）。</li><li><code>SortedMap headMap(toKey)</code> ：使用小于 <strong>toKey</strong> 的键生成此 <strong>Map</strong> 的视图。</li><li><code>SortedMap tailMap(fromKey)</code> ：使用大于或等于 <strong>fromKey</strong> 的键生成此 <strong>Map</strong> 的视图。</li></ul><p>这是一个类似于 <strong>SortedSetDemo.java</strong> 的示例，显示了 <strong>TreeMap</strong> 的这种额外行为：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/SortedMapDemo.java</span></span>
<span class="line"><span style="color:#6A737D;">// What you can do with a TreeMap</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> onjava.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SortedMapDemo</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    TreeMap&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; sortedMap </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> TreeMap&lt;&gt;(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CountMap</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(sortedMap);</span></span>
<span class="line"><span style="color:#E1E4E8;">    Integer low </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sortedMap.</span><span style="color:#B392F0;">firstKey</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    Integer high </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sortedMap.</span><span style="color:#B392F0;">lastKey</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(low);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(high);</span></span>
<span class="line"><span style="color:#E1E4E8;">    Iterator&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">&gt; it </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      sortedMap.</span><span style="color:#B392F0;">keySet</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">iterator</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(i </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">) low </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> it.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(i </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">) high </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> it.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> it.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(low);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(high);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(sortedMap.</span><span style="color:#B392F0;">subMap</span><span style="color:#E1E4E8;">(low, high));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(sortedMap.</span><span style="color:#B392F0;">headMap</span><span style="color:#E1E4E8;">(high));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(sortedMap.</span><span style="color:#B392F0;">tailMap</span><span style="color:#E1E4E8;">(low));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">{0=A0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0, 6=G0, 7=H0, 8=I0,</span></span>
<span class="line"><span style="color:#6A737D;">9=J0}</span></span>
<span class="line"><span style="color:#6A737D;">0</span></span>
<span class="line"><span style="color:#6A737D;">9</span></span>
<span class="line"><span style="color:#6A737D;">3</span></span>
<span class="line"><span style="color:#6A737D;">7</span></span>
<span class="line"><span style="color:#6A737D;">{3=D0, 4=E0, 5=F0, 6=G0}</span></span>
<span class="line"><span style="color:#6A737D;">{0=A0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0, 6=G0}</span></span>
<span class="line"><span style="color:#6A737D;">{3=D0, 4=E0, 5=F0, 6=G0, 7=H0, 8=I0, 9=J0}</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/SortedMapDemo.java</span></span>
<span class="line"><span style="color:#6A737D;">// What you can do with a TreeMap</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> onjava.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SortedMapDemo</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    TreeMap&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; sortedMap </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> TreeMap&lt;&gt;(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CountMap</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(sortedMap);</span></span>
<span class="line"><span style="color:#24292E;">    Integer low </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sortedMap.</span><span style="color:#6F42C1;">firstKey</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    Integer high </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sortedMap.</span><span style="color:#6F42C1;">lastKey</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(low);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(high);</span></span>
<span class="line"><span style="color:#24292E;">    Iterator&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">&gt; it </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      sortedMap.</span><span style="color:#6F42C1;">keySet</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">iterator</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(i </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">) low </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> it.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(i </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">) high </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> it.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> it.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(low);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(high);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(sortedMap.</span><span style="color:#6F42C1;">subMap</span><span style="color:#24292E;">(low, high));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(sortedMap.</span><span style="color:#6F42C1;">headMap</span><span style="color:#24292E;">(high));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(sortedMap.</span><span style="color:#6F42C1;">tailMap</span><span style="color:#24292E;">(low));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">{0=A0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0, 6=G0, 7=H0, 8=I0,</span></span>
<span class="line"><span style="color:#6A737D;">9=J0}</span></span>
<span class="line"><span style="color:#6A737D;">0</span></span>
<span class="line"><span style="color:#6A737D;">9</span></span>
<span class="line"><span style="color:#6A737D;">3</span></span>
<span class="line"><span style="color:#6A737D;">7</span></span>
<span class="line"><span style="color:#6A737D;">{3=D0, 4=E0, 5=F0, 6=G0}</span></span>
<span class="line"><span style="color:#6A737D;">{0=A0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0, 6=G0}</span></span>
<span class="line"><span style="color:#6A737D;">{3=D0, 4=E0, 5=F0, 6=G0, 7=H0, 8=I0, 9=J0}</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>这里，键值对按照键的排序顺序进行排序。因为 <strong>TreeMap</strong> 中存在顺序感，所以“位置”的概念很有意义，因此可以拥有第一个、最后一个元素或子图。</p><h3 id="linkedhashmap" tabindex="-1">LinkedHashMap <a class="header-anchor" href="#linkedhashmap" aria-label="Permalink to &quot;LinkedHashMap&quot;">​</a></h3><p><strong>LinkedHashMap</strong> 针对速度进行哈希处理，但在遍历期间也会按插入顺序生成键值对（ <code>System.out.println()</code> 可以遍历它，因此可以看到遍历的结果）。 此外，可以在构造方法中配置 <strong>LinkedHashMap</strong> 以使用基于访问的 <em>最近最少使用</em>（LRU） 算法，因此未访问的元素（因此是删除的候选者）会出现在列表的前面。 这样可以轻松创建一个能够定期清理以节省空间的程序。下面是一个显示这两个功能的简单示例：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/LinkedHashMapDemo.java</span></span>
<span class="line"><span style="color:#6A737D;">// What you can do with a LinkedHashMap</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> onjava.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LinkedHashMapDemo</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    LinkedHashMap&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; linkedMap </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedHashMap&lt;&gt;(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CountMap</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(linkedMap);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Least-recently-used order:</span></span>
<span class="line"><span style="color:#E1E4E8;">    linkedMap </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedHashMap&lt;&gt;(</span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0.75f</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    linkedMap.</span><span style="color:#B392F0;">putAll</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CountMap</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(linkedMap);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      linkedMap.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(i);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(linkedMap);</span></span>
<span class="line"><span style="color:#E1E4E8;">    linkedMap.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(linkedMap);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">{0=A0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0, 6=G0, 7=H0, 8=I0}</span></span>
<span class="line"><span style="color:#6A737D;">{0=A0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0, 6=G0, 7=H0, 8=I0}</span></span>
<span class="line"><span style="color:#6A737D;">{6=G0, 7=H0, 8=I0, 0=A0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0}</span></span>
<span class="line"><span style="color:#6A737D;">{6=G0, 7=H0, 8=I0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0, 0=A0}</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/LinkedHashMapDemo.java</span></span>
<span class="line"><span style="color:#6A737D;">// What you can do with a LinkedHashMap</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> onjava.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LinkedHashMapDemo</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    LinkedHashMap&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; linkedMap </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedHashMap&lt;&gt;(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CountMap</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(linkedMap);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Least-recently-used order:</span></span>
<span class="line"><span style="color:#24292E;">    linkedMap </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedHashMap&lt;&gt;(</span><span style="color:#005CC5;">16</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.75f</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    linkedMap.</span><span style="color:#6F42C1;">putAll</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CountMap</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(linkedMap);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      linkedMap.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(i);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(linkedMap);</span></span>
<span class="line"><span style="color:#24292E;">    linkedMap.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(linkedMap);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">{0=A0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0, 6=G0, 7=H0, 8=I0}</span></span>
<span class="line"><span style="color:#6A737D;">{0=A0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0, 6=G0, 7=H0, 8=I0}</span></span>
<span class="line"><span style="color:#6A737D;">{6=G0, 7=H0, 8=I0, 0=A0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0}</span></span>
<span class="line"><span style="color:#6A737D;">{6=G0, 7=H0, 8=I0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0, 0=A0}</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>这些键值对确实是按照插入顺序进行遍历，即使对于LRU版本也是如此。 但是，在LRU版本中访问前六项（仅限）后，最后三项将移至列表的前面。然后，当再次访问“ <strong>0</strong> ”后，它移动到了列表的后面。</p><h2 id="集合工具类" tabindex="-1">集合工具类 <a class="header-anchor" href="#集合工具类" aria-label="Permalink to &quot;集合工具类&quot;">​</a></h2><p>集合有许多独立的实用工具程序，在 <strong>java.util.Collections</strong> 中表示为静态方法。之前已经见过其中一些，例如 <code>addAll()</code> ， <code>reverseOrder()</code> 和 <code>binarySearch()</code> 。以下是其他内容（同步和不可修改的实用工具程序将在后面的章节中介绍）。在此表中，在需要的时候使用了泛型：</p><table><thead><tr><th style="text-align:left;">方法</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>checkedCollection(Collection&lt;T&gt; c, Class&lt;T&gt; type)</strong> <br><br> <strong>checkedList(List&lt;T&gt; list, Class&lt;T&gt; type)</strong> <br><br> <strong>checkedMap(Map&lt;K, V&gt; m, Class&lt;K&gt; keyType, Class&lt;V&gt; valueType)</strong> <br><br> <strong>checkedSet(Set&lt;T&gt; s, Class&lt;T&gt; type)</strong> <br><br> <strong>checkedSortedMap(SortedMap&lt;K, V&gt; m, Class&lt;K&gt; keyType, Class&lt;V&gt; valueType)</strong> <br><br> <strong>checkedSortedSet(SortedSet&lt;T&gt; s, Class&lt;T&gt; type)</strong></td><td style="text-align:left;">生成 <strong>Collection</strong> 的动态类型安全视图或 <strong>Collection</strong> 的特定子类型。 当无法使用静态检查版本时使用这个版本。 <br><br> 这些方法的使用在<a href="./.html">第九章 多态</a>章节的“动态类型安全”标题下进行了展示。</td></tr><tr><td style="text-align:left;"><strong>max(Collection)</strong> <br><br> <strong>min(Collection)</strong></td><td style="text-align:left;">使用 <strong>Collection</strong> 中对象的自然比较方法生成参数集合中的最大或最小元素。</td></tr><tr><td style="text-align:left;"><strong>max(Collection, Comparator)</strong> <br><br> <strong>min(Collection, Comparator)</strong></td><td style="text-align:left;">使用 <strong>Comparator</strong> 指定的比较方法生成参数集合中的最大或最小元素。</td></tr><tr><td style="text-align:left;"><strong>indexOfSubList(List source, List target)</strong></td><td style="text-align:left;">返回 <strong>target</strong> 在 <strong>source</strong> 内第一次出现的起始索引，如果不存在则返回 -1。</td></tr><tr><td style="text-align:left;"><strong>lastIndexOfSubList(List source, List target)</strong></td><td style="text-align:left;">返回 <strong>target</strong> 在 <strong>source</strong> 内最后一次出现的起始索引，如果不存在则返回 -1。</td></tr><tr><td style="text-align:left;"><strong>replaceAll(List&lt;T&gt; list, T oldVal, T newVal)</strong></td><td style="text-align:left;">用 <strong>newVal</strong> 替换列表中所有的 <strong>oldVal</strong> 。</td></tr><tr><td style="text-align:left;"><strong>reverse(List)</strong></td><td style="text-align:left;">反转列表</td></tr><tr><td style="text-align:left;"><strong>reverseOrder()</strong> <br><br> <strong>reverseOrder(Comparator&lt;T&gt;)</strong></td><td style="text-align:left;">返回一个 <strong>Comparator</strong> ，它与集合中实现了 <strong>comparable&lt;T&gt;</strong> 接口的对象的自然顺序相反。第二个版本颠倒了所提供的 <strong>Comparator</strong> 的顺序。</td></tr><tr><td style="text-align:left;"><strong>rotate(List, int distance)</strong></td><td style="text-align:left;">将所有元素向前移动 <strong>distance</strong> ，将尾部的元素移到开头。（译者注：即循环移动）</td></tr><tr><td style="text-align:left;"><strong>shuffle(List)</strong> <br><br> <strong>shuffle(List, Random)</strong></td><td style="text-align:left;">随机置换指定列表（即打乱顺序）。第一个版本使用了默认的随机化源，或者也可以使用第二个版本，提供自己的随机化源。</td></tr><tr><td style="text-align:left;"><strong>sort(List&lt;T&gt;)</strong> <br><br> <strong>sort(List&lt;T&gt;, Comparator&lt;? super T&gt; c)</strong></td><td style="text-align:left;">第一个版本使用元素的自然顺序排序该 <strong>List&lt;T&gt;</strong> 。第二个版本根据提供的 <strong>Comparator</strong> 排序。</td></tr><tr><td style="text-align:left;"><strong>copy(List&lt;? super T&gt; dest, List&lt;? extends T&gt; src)</strong></td><td style="text-align:left;">将 <strong>src</strong> 中的元素复制到 <strong>dest</strong> 。</td></tr><tr><td style="text-align:left;"><strong>swap(List, int i, int j)</strong></td><td style="text-align:left;">交换 <strong>List</strong> 中位置 <strong>i</strong> 和 位置 <strong>j</strong> 的元素。可能比你手工编写的速度快。</td></tr><tr><td style="text-align:left;"><strong>fill(List&lt;? super T&gt;, T x)</strong></td><td style="text-align:left;">用 <strong>x</strong> 替换 <strong>List</strong> 中的所有元素。</td></tr><tr><td style="text-align:left;"><strong>nCopies(int n, T x)</strong></td><td style="text-align:left;">返回大小为 <strong>n</strong> 的不可变 <strong>List&lt;T&gt;</strong> ，其引用都指向 <strong>x</strong> 。</td></tr><tr><td style="text-align:left;"><strong>disjoint(Collection, Collection)</strong></td><td style="text-align:left;">如果两个集合没有共同元素，则返回 <strong>true</strong> 。</td></tr><tr><td style="text-align:left;"><strong>frequency(Collection, Object x)</strong></td><td style="text-align:left;">返回 <strong>Collection</strong> 中，等于 <strong>x</strong> 的元素个数。</td></tr><tr><td style="text-align:left;"><strong>emptyList()</strong> <br><br> <strong>emptyMap()</strong> <br><br> <strong>emptySet()</strong></td><td style="text-align:left;">返回不可变的空 <strong>List</strong> ， <strong>Map</strong> 或 <strong>Set</strong> 。这些是泛型的，因此生成的 <strong>Collection</strong> 可以被参数化为所需的类型。</td></tr><tr><td style="text-align:left;"><strong>singleton(T x)</strong> <br><br> <strong>singletonList(T x)</strong> <br><br> <strong>singletonMap(K key, V value)</strong></td><td style="text-align:left;">生成一个不可变的 <strong>List</strong> ， <strong>Set</strong> 或 <strong>Map</strong> ，其中只包含基于给定参数的单个元素。</td></tr><tr><td style="text-align:left;"><strong>list(Enumeration&lt;T&gt; e)</strong></td><td style="text-align:left;">生成一个 <strong>ArrayList&lt;T&gt;</strong> ，其中元素为（旧式） <strong>Enumeration</strong> （ <strong>Iterator</strong> 的前身）中的元素。用于从遗留代码向新式转换。</td></tr><tr><td style="text-align:left;"><strong>enumeration(Collection&lt;T&gt;)</strong></td><td style="text-align:left;">为参数集合生成一个旧式的 <strong>Enumeration&lt;T&gt;</strong> 。</td></tr></tbody></table><p>请注意， <code>min（)</code> 和 <code>max()</code> 使用 <strong>Collection</strong> 对象，而不使用 <strong>List</strong> ，因此不必担心是否应对 <strong>Collection</strong> 进行排序。（如前所述，在执行 <code>binarySearch()</code> 之前，将会对 <strong>List</strong> 或数组进行<code>sort()</code> 排序。）</p><p>下面是一个示例，展示了上表中大多数实用工具程序的基本用法：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/Utilities.java</span></span>
<span class="line"><span style="color:#6A737D;">// Simple demonstrations of the Collections utilities</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Utilities</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; list </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Arrays.</span><span style="color:#B392F0;">asList</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;one Two three Four five six one&quot;</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">split</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(list);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;&#39;list&#39; disjoint (Four)?: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">      Collections.</span><span style="color:#B392F0;">disjoint</span><span style="color:#E1E4E8;">(list,</span></span>
<span class="line"><span style="color:#E1E4E8;">        Collections.</span><span style="color:#B392F0;">singletonList</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Four&quot;</span><span style="color:#E1E4E8;">)));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;max: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> Collections.</span><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;">(list));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;min: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> Collections.</span><span style="color:#B392F0;">min</span><span style="color:#E1E4E8;">(list));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;max w/ comparator: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> Collections.</span><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;">(list,</span></span>
<span class="line"><span style="color:#E1E4E8;">      String.CASE_INSENSITIVE_ORDER));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;min w/ comparator: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> Collections.</span><span style="color:#B392F0;">min</span><span style="color:#E1E4E8;">(list,</span></span>
<span class="line"><span style="color:#E1E4E8;">      String.CASE_INSENSITIVE_ORDER));</span></span>
<span class="line"><span style="color:#E1E4E8;">    List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; sublist </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      Arrays.</span><span style="color:#B392F0;">asList</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Four five six&quot;</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">split</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;indexOfSubList: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">      Collections.</span><span style="color:#B392F0;">indexOfSubList</span><span style="color:#E1E4E8;">(list, sublist));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;lastIndexOfSubList: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">      Collections.</span><span style="color:#B392F0;">lastIndexOfSubList</span><span style="color:#E1E4E8;">(list, sublist));</span></span>
<span class="line"><span style="color:#E1E4E8;">    Collections.</span><span style="color:#B392F0;">replaceAll</span><span style="color:#E1E4E8;">(list, </span><span style="color:#9ECBFF;">&quot;one&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Yo&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;replaceAll: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> list);</span></span>
<span class="line"><span style="color:#E1E4E8;">    Collections.</span><span style="color:#B392F0;">reverse</span><span style="color:#E1E4E8;">(list);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;reverse: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> list);</span></span>
<span class="line"><span style="color:#E1E4E8;">    Collections.</span><span style="color:#B392F0;">rotate</span><span style="color:#E1E4E8;">(list, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;rotate: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> list);</span></span>
<span class="line"><span style="color:#E1E4E8;">    List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; source </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      Arrays.</span><span style="color:#B392F0;">asList</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;in the matrix&quot;</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">split</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    Collections.</span><span style="color:#B392F0;">copy</span><span style="color:#E1E4E8;">(list, source);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;copy: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> list);</span></span>
<span class="line"><span style="color:#E1E4E8;">    Collections.</span><span style="color:#B392F0;">swap</span><span style="color:#E1E4E8;">(list, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, list.</span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;swap: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> list);</span></span>
<span class="line"><span style="color:#E1E4E8;">    Collections.</span><span style="color:#B392F0;">shuffle</span><span style="color:#E1E4E8;">(list, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Random</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">47</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;shuffled: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> list);</span></span>
<span class="line"><span style="color:#E1E4E8;">    Collections.</span><span style="color:#B392F0;">fill</span><span style="color:#E1E4E8;">(list, </span><span style="color:#9ECBFF;">&quot;pop&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;fill: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> list);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;frequency of &#39;pop&#39;: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">      Collections.</span><span style="color:#B392F0;">frequency</span><span style="color:#E1E4E8;">(list, </span><span style="color:#9ECBFF;">&quot;pop&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; dups </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      Collections.</span><span style="color:#B392F0;">nCopies</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;snap&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;dups: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> dups);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;&#39;list&#39; disjoint &#39;dups&#39;?: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">      Collections.</span><span style="color:#B392F0;">disjoint</span><span style="color:#E1E4E8;">(list, dups));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Getting an old-style Enumeration:</span></span>
<span class="line"><span style="color:#E1E4E8;">    Enumeration&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; e </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      Collections.</span><span style="color:#B392F0;">enumeration</span><span style="color:#E1E4E8;">(dups);</span></span>
<span class="line"><span style="color:#E1E4E8;">    Vector&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; v </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Vector&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(e.</span><span style="color:#B392F0;">hasMoreElements</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">      v.</span><span style="color:#B392F0;">addElement</span><span style="color:#E1E4E8;">(e.</span><span style="color:#B392F0;">nextElement</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Converting an old-style Vector</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// to a List via an Enumeration:</span></span>
<span class="line"><span style="color:#E1E4E8;">    ArrayList&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; arrayList </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      Collections.</span><span style="color:#B392F0;">list</span><span style="color:#E1E4E8;">(v.</span><span style="color:#B392F0;">elements</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;arrayList: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> arrayList);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">[one, Two, three, Four, five, six, one]</span></span>
<span class="line"><span style="color:#6A737D;">&#39;list&#39; disjoint (Four)?: false</span></span>
<span class="line"><span style="color:#6A737D;">max: three</span></span>
<span class="line"><span style="color:#6A737D;">min: Four</span></span>
<span class="line"><span style="color:#6A737D;">max w/ comparator: Two</span></span>
<span class="line"><span style="color:#6A737D;">min w/ comparator: five</span></span>
<span class="line"><span style="color:#6A737D;">indexOfSubList: 3</span></span>
<span class="line"><span style="color:#6A737D;">lastIndexOfSubList: 3</span></span>
<span class="line"><span style="color:#6A737D;">replaceAll: [Yo, Two, three, Four, five, six, Yo]</span></span>
<span class="line"><span style="color:#6A737D;">reverse: [Yo, six, five, Four, three, Two, Yo]</span></span>
<span class="line"><span style="color:#6A737D;">rotate: [three, Two, Yo, Yo, six, five, Four]</span></span>
<span class="line"><span style="color:#6A737D;">copy: [in, the, matrix, Yo, six, five, Four]</span></span>
<span class="line"><span style="color:#6A737D;">swap: [Four, the, matrix, Yo, six, five, in]</span></span>
<span class="line"><span style="color:#6A737D;">shuffled: [six, matrix, the, Four, Yo, five, in]</span></span>
<span class="line"><span style="color:#6A737D;">fill: [pop, pop, pop, pop, pop, pop, pop]</span></span>
<span class="line"><span style="color:#6A737D;">frequency of &#39;pop&#39;: 7</span></span>
<span class="line"><span style="color:#6A737D;">dups: [snap, snap, snap]</span></span>
<span class="line"><span style="color:#6A737D;">&#39;list&#39; disjoint &#39;dups&#39;?: true</span></span>
<span class="line"><span style="color:#6A737D;">arrayList: [snap, snap, snap]</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/Utilities.java</span></span>
<span class="line"><span style="color:#6A737D;">// Simple demonstrations of the Collections utilities</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Utilities</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; list </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Arrays.</span><span style="color:#6F42C1;">asList</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;one Two three Four five six one&quot;</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(list);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;&#39;list&#39; disjoint (Four)?: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">      Collections.</span><span style="color:#6F42C1;">disjoint</span><span style="color:#24292E;">(list,</span></span>
<span class="line"><span style="color:#24292E;">        Collections.</span><span style="color:#6F42C1;">singletonList</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Four&quot;</span><span style="color:#24292E;">)));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;max: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> Collections.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(list));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;min: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> Collections.</span><span style="color:#6F42C1;">min</span><span style="color:#24292E;">(list));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;max w/ comparator: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> Collections.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(list,</span></span>
<span class="line"><span style="color:#24292E;">      String.CASE_INSENSITIVE_ORDER));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;min w/ comparator: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> Collections.</span><span style="color:#6F42C1;">min</span><span style="color:#24292E;">(list,</span></span>
<span class="line"><span style="color:#24292E;">      String.CASE_INSENSITIVE_ORDER));</span></span>
<span class="line"><span style="color:#24292E;">    List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; sublist </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      Arrays.</span><span style="color:#6F42C1;">asList</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Four five six&quot;</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;indexOfSubList: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">      Collections.</span><span style="color:#6F42C1;">indexOfSubList</span><span style="color:#24292E;">(list, sublist));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;lastIndexOfSubList: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">      Collections.</span><span style="color:#6F42C1;">lastIndexOfSubList</span><span style="color:#24292E;">(list, sublist));</span></span>
<span class="line"><span style="color:#24292E;">    Collections.</span><span style="color:#6F42C1;">replaceAll</span><span style="color:#24292E;">(list, </span><span style="color:#032F62;">&quot;one&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Yo&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;replaceAll: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> list);</span></span>
<span class="line"><span style="color:#24292E;">    Collections.</span><span style="color:#6F42C1;">reverse</span><span style="color:#24292E;">(list);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;reverse: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> list);</span></span>
<span class="line"><span style="color:#24292E;">    Collections.</span><span style="color:#6F42C1;">rotate</span><span style="color:#24292E;">(list, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;rotate: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> list);</span></span>
<span class="line"><span style="color:#24292E;">    List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; source </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      Arrays.</span><span style="color:#6F42C1;">asList</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;in the matrix&quot;</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    Collections.</span><span style="color:#6F42C1;">copy</span><span style="color:#24292E;">(list, source);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;copy: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> list);</span></span>
<span class="line"><span style="color:#24292E;">    Collections.</span><span style="color:#6F42C1;">swap</span><span style="color:#24292E;">(list, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, list.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;swap: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> list);</span></span>
<span class="line"><span style="color:#24292E;">    Collections.</span><span style="color:#6F42C1;">shuffle</span><span style="color:#24292E;">(list, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Random</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">47</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;shuffled: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> list);</span></span>
<span class="line"><span style="color:#24292E;">    Collections.</span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(list, </span><span style="color:#032F62;">&quot;pop&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fill: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> list);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;frequency of &#39;pop&#39;: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">      Collections.</span><span style="color:#6F42C1;">frequency</span><span style="color:#24292E;">(list, </span><span style="color:#032F62;">&quot;pop&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; dups </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      Collections.</span><span style="color:#6F42C1;">nCopies</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;snap&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;dups: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> dups);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;&#39;list&#39; disjoint &#39;dups&#39;?: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">      Collections.</span><span style="color:#6F42C1;">disjoint</span><span style="color:#24292E;">(list, dups));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Getting an old-style Enumeration:</span></span>
<span class="line"><span style="color:#24292E;">    Enumeration&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; e </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      Collections.</span><span style="color:#6F42C1;">enumeration</span><span style="color:#24292E;">(dups);</span></span>
<span class="line"><span style="color:#24292E;">    Vector&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; v </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Vector&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(e.</span><span style="color:#6F42C1;">hasMoreElements</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">      v.</span><span style="color:#6F42C1;">addElement</span><span style="color:#24292E;">(e.</span><span style="color:#6F42C1;">nextElement</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Converting an old-style Vector</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// to a List via an Enumeration:</span></span>
<span class="line"><span style="color:#24292E;">    ArrayList&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; arrayList </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      Collections.</span><span style="color:#6F42C1;">list</span><span style="color:#24292E;">(v.</span><span style="color:#6F42C1;">elements</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;arrayList: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> arrayList);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">[one, Two, three, Four, five, six, one]</span></span>
<span class="line"><span style="color:#6A737D;">&#39;list&#39; disjoint (Four)?: false</span></span>
<span class="line"><span style="color:#6A737D;">max: three</span></span>
<span class="line"><span style="color:#6A737D;">min: Four</span></span>
<span class="line"><span style="color:#6A737D;">max w/ comparator: Two</span></span>
<span class="line"><span style="color:#6A737D;">min w/ comparator: five</span></span>
<span class="line"><span style="color:#6A737D;">indexOfSubList: 3</span></span>
<span class="line"><span style="color:#6A737D;">lastIndexOfSubList: 3</span></span>
<span class="line"><span style="color:#6A737D;">replaceAll: [Yo, Two, three, Four, five, six, Yo]</span></span>
<span class="line"><span style="color:#6A737D;">reverse: [Yo, six, five, Four, three, Two, Yo]</span></span>
<span class="line"><span style="color:#6A737D;">rotate: [three, Two, Yo, Yo, six, five, Four]</span></span>
<span class="line"><span style="color:#6A737D;">copy: [in, the, matrix, Yo, six, five, Four]</span></span>
<span class="line"><span style="color:#6A737D;">swap: [Four, the, matrix, Yo, six, five, in]</span></span>
<span class="line"><span style="color:#6A737D;">shuffled: [six, matrix, the, Four, Yo, five, in]</span></span>
<span class="line"><span style="color:#6A737D;">fill: [pop, pop, pop, pop, pop, pop, pop]</span></span>
<span class="line"><span style="color:#6A737D;">frequency of &#39;pop&#39;: 7</span></span>
<span class="line"><span style="color:#6A737D;">dups: [snap, snap, snap]</span></span>
<span class="line"><span style="color:#6A737D;">&#39;list&#39; disjoint &#39;dups&#39;?: true</span></span>
<span class="line"><span style="color:#6A737D;">arrayList: [snap, snap, snap]</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>输出解释了每种实用方法的行为。请注意由于大小写的缘故，普通版本的 <code>min()</code> 和 <code>max()</code> 与带有 <strong>String.CASE_INSENSITIVE_ORDER</strong> 比较器参数的版本的区别。</p><h3 id="排序和搜索列表" tabindex="-1">排序和搜索列表 <a class="header-anchor" href="#排序和搜索列表" aria-label="Permalink to &quot;排序和搜索列表&quot;">​</a></h3><p>用于执行排序和搜索 <strong>List</strong> 的实用工具程序与用于排序对象数组的程序具有相同的名字和方法签名，只不过是 <strong>Collections</strong> 的静态方法而不是 <strong>Arrays</strong> 。 这是一个使用 <strong>Utilities.java</strong> 中的 <strong>list</strong> 数据的示例：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/ListSortSearch.java</span></span>
<span class="line"><span style="color:#6A737D;">// Sorting/searching Lists with Collections utilities</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ListSortSearch</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; list </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;(Utilities.list);</span></span>
<span class="line"><span style="color:#E1E4E8;">    list.</span><span style="color:#B392F0;">addAll</span><span style="color:#E1E4E8;">(Utilities.list);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(list);</span></span>
<span class="line"><span style="color:#E1E4E8;">    Collections.</span><span style="color:#B392F0;">shuffle</span><span style="color:#E1E4E8;">(list, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Random</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">47</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Shuffled: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> list);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Use ListIterator to trim off last elements:</span></span>
<span class="line"><span style="color:#E1E4E8;">    ListIterator&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; it </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> list.</span><span style="color:#B392F0;">listIterator</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(it.</span><span style="color:#B392F0;">hasNext</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      it.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      it.</span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Trimmed: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> list);</span></span>
<span class="line"><span style="color:#E1E4E8;">    Collections.</span><span style="color:#B392F0;">sort</span><span style="color:#E1E4E8;">(list);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Sorted: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> list);</span></span>
<span class="line"><span style="color:#E1E4E8;">    String key </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> list.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> index </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Collections.</span><span style="color:#B392F0;">binarySearch</span><span style="color:#E1E4E8;">(list, key);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;Location of &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> key </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; is &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> index </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;, list.get(&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> index </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;) = &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">      list.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(index));</span></span>
<span class="line"><span style="color:#E1E4E8;">    Collections.</span><span style="color:#B392F0;">sort</span><span style="color:#E1E4E8;">(list,</span></span>
<span class="line"><span style="color:#E1E4E8;">      String.CASE_INSENSITIVE_ORDER);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;Case-insensitive sorted: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> list);</span></span>
<span class="line"><span style="color:#E1E4E8;">    key </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> list.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    index </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Collections.</span><span style="color:#B392F0;">binarySearch</span><span style="color:#E1E4E8;">(list, key,</span></span>
<span class="line"><span style="color:#E1E4E8;">      String.CASE_INSENSITIVE_ORDER);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;Location of &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> key </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; is &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> index </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;, list.get(&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> index </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;) = &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">      list.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(index));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">[one, Two, three, Four, five, six, one, one, Two,</span></span>
<span class="line"><span style="color:#6A737D;">three, Four, five, six, one]</span></span>
<span class="line"><span style="color:#6A737D;">Shuffled: [Four, five, one, one, Two, six, six, three,</span></span>
<span class="line"><span style="color:#6A737D;">three, five, Four, Two, one, one]</span></span>
<span class="line"><span style="color:#6A737D;">Trimmed: [Four, five, one, one, Two, six, six, three,</span></span>
<span class="line"><span style="color:#6A737D;">three, five]</span></span>
<span class="line"><span style="color:#6A737D;">Sorted: [Four, Two, five, five, one, one, six, six,</span></span>
<span class="line"><span style="color:#6A737D;">three, three]</span></span>
<span class="line"><span style="color:#6A737D;">Location of six is 7, list.get(7) = six</span></span>
<span class="line"><span style="color:#6A737D;">Case-insensitive sorted: [five, five, Four, one, one,</span></span>
<span class="line"><span style="color:#6A737D;">six, six, three, three, Two]</span></span>
<span class="line"><span style="color:#6A737D;">Location of three is 7, list.get(7) = three</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/ListSortSearch.java</span></span>
<span class="line"><span style="color:#6A737D;">// Sorting/searching Lists with Collections utilities</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ListSortSearch</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; list </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;(Utilities.list);</span></span>
<span class="line"><span style="color:#24292E;">    list.</span><span style="color:#6F42C1;">addAll</span><span style="color:#24292E;">(Utilities.list);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(list);</span></span>
<span class="line"><span style="color:#24292E;">    Collections.</span><span style="color:#6F42C1;">shuffle</span><span style="color:#24292E;">(list, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Random</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">47</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Shuffled: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> list);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Use ListIterator to trim off last elements:</span></span>
<span class="line"><span style="color:#24292E;">    ListIterator&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; it </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> list.</span><span style="color:#6F42C1;">listIterator</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(it.</span><span style="color:#6F42C1;">hasNext</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">      it.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">      it.</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Trimmed: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> list);</span></span>
<span class="line"><span style="color:#24292E;">    Collections.</span><span style="color:#6F42C1;">sort</span><span style="color:#24292E;">(list);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Sorted: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> list);</span></span>
<span class="line"><span style="color:#24292E;">    String key </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> list.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Collections.</span><span style="color:#6F42C1;">binarySearch</span><span style="color:#24292E;">(list, key);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;Location of &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> key </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; is &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> index </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;, list.get(&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> index </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;) = &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">      list.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(index));</span></span>
<span class="line"><span style="color:#24292E;">    Collections.</span><span style="color:#6F42C1;">sort</span><span style="color:#24292E;">(list,</span></span>
<span class="line"><span style="color:#24292E;">      String.CASE_INSENSITIVE_ORDER);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;Case-insensitive sorted: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> list);</span></span>
<span class="line"><span style="color:#24292E;">    key </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> list.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Collections.</span><span style="color:#6F42C1;">binarySearch</span><span style="color:#24292E;">(list, key,</span></span>
<span class="line"><span style="color:#24292E;">      String.CASE_INSENSITIVE_ORDER);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;Location of &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> key </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; is &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> index </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;, list.get(&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> index </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;) = &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">      list.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(index));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">[one, Two, three, Four, five, six, one, one, Two,</span></span>
<span class="line"><span style="color:#6A737D;">three, Four, five, six, one]</span></span>
<span class="line"><span style="color:#6A737D;">Shuffled: [Four, five, one, one, Two, six, six, three,</span></span>
<span class="line"><span style="color:#6A737D;">three, five, Four, Two, one, one]</span></span>
<span class="line"><span style="color:#6A737D;">Trimmed: [Four, five, one, one, Two, six, six, three,</span></span>
<span class="line"><span style="color:#6A737D;">three, five]</span></span>
<span class="line"><span style="color:#6A737D;">Sorted: [Four, Two, five, five, one, one, six, six,</span></span>
<span class="line"><span style="color:#6A737D;">three, three]</span></span>
<span class="line"><span style="color:#6A737D;">Location of six is 7, list.get(7) = six</span></span>
<span class="line"><span style="color:#6A737D;">Case-insensitive sorted: [five, five, Four, one, one,</span></span>
<span class="line"><span style="color:#6A737D;">six, six, three, three, Two]</span></span>
<span class="line"><span style="color:#6A737D;">Location of three is 7, list.get(7) = three</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>就像使用数组进行搜索和排序一样，如果使用 <strong>Comparator</strong> 进行排序，则必须使用相同的 <strong>Comparator</strong> 执行 <code>binarySearch()</code> 。</p><p>该程序还演示了 <strong>Collections</strong> 中的 <code>shuffle()</code> 方法，该方法随机打乱了 <strong>List</strong> 的顺序。 <strong>ListIterator</strong> 是在打乱后的列表中的特定位置创建的，用于从该位置删除元素，直到列表末尾。</p><h3 id="创建不可修改的-collection-或-map" tabindex="-1">创建不可修改的 Collection 或 Map <a class="header-anchor" href="#创建不可修改的-collection-或-map" aria-label="Permalink to &quot;创建不可修改的 Collection 或 Map&quot;">​</a></h3><p>通常，创建 <strong>Collection</strong> 或 <strong>Map</strong> 的只读版本会很方便。 <strong>Collections</strong> 类通过将原始集合传递给一个方法然后返回一个只读版本的集合。 对于 <strong>Collection</strong> （如果不能将 <strong>Collection</strong> 视为更具体的类型）， <strong>List</strong> ， <strong>Set</strong> 和 <strong>Map</strong> ，这类方法有许多变体。这个示例展示了针对每种类型，正确构建只读版本集合的方法：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/ReadOnly.java</span></span>
<span class="line"><span style="color:#6A737D;">// Using the Collections.unmodifiable methods</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> onjava.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ReadOnly</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Collection&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; data </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;(Countries.</span><span style="color:#B392F0;">names</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    Collection&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; c </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      Collections.</span><span style="color:#B392F0;">unmodifiableCollection</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;(data));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(c); </span><span style="color:#6A737D;">// Reading is OK</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//- c.add(&quot;one&quot;); // Can&#39;t change it</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Collections.</span><span style="color:#B392F0;">unmodifiableList</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;(data));</span></span>
<span class="line"><span style="color:#E1E4E8;">    ListIterator&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; lit </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a.</span><span style="color:#B392F0;">listIterator</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(lit.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">()); </span><span style="color:#6A737D;">// Reading is OK</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//- lit.add(&quot;one&quot;); // Can&#39;t change it</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    Set&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Collections.</span><span style="color:#B392F0;">unmodifiableSet</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> HashSet&lt;&gt;(data));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(s); </span><span style="color:#6A737D;">// Reading is OK</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//- s.add(&quot;one&quot;); // Can&#39;t change it</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// For a SortedSet:</span></span>
<span class="line"><span style="color:#E1E4E8;">    Set&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; ss </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      Collections.</span><span style="color:#B392F0;">unmodifiableSortedSet</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> TreeSet&lt;&gt;(data));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    Map&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; m </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      Collections.</span><span style="color:#B392F0;">unmodifiableMap</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> HashMap&lt;&gt;(Countries.</span><span style="color:#B392F0;">capitals</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">)));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(m); </span><span style="color:#6A737D;">// Reading is OK</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//- m.put(&quot;Ralph&quot;, &quot;Howdy!&quot;);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// For a SortedMap:</span></span>
<span class="line"><span style="color:#E1E4E8;">    Map&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; sm </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      Collections.</span><span style="color:#B392F0;">unmodifiableSortedMap</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> TreeMap&lt;&gt;(Countries.</span><span style="color:#B392F0;">capitals</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">)));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">[ALGERIA, ANGOLA, BENIN, BOTSWANA, BURKINA FASO,</span></span>
<span class="line"><span style="color:#6A737D;">BURUNDI]</span></span>
<span class="line"><span style="color:#6A737D;">ALGERIA</span></span>
<span class="line"><span style="color:#6A737D;">[BENIN, BOTSWANA, ANGOLA, BURKINA FASO, ALGERIA,</span></span>
<span class="line"><span style="color:#6A737D;">BURUNDI]</span></span>
<span class="line"><span style="color:#6A737D;">{BENIN=Porto-Novo, BOTSWANA=Gaberone, ANGOLA=Luanda,</span></span>
<span class="line"><span style="color:#6A737D;">BURKINA FASO=Ouagadougou, ALGERIA=Algiers,</span></span>
<span class="line"><span style="color:#6A737D;">BURUNDI=Bujumbura}</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/ReadOnly.java</span></span>
<span class="line"><span style="color:#6A737D;">// Using the Collections.unmodifiable methods</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> onjava.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ReadOnly</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Collection&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; data </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;(Countries.</span><span style="color:#6F42C1;">names</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    Collection&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; c </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      Collections.</span><span style="color:#6F42C1;">unmodifiableCollection</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;(data));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(c); </span><span style="color:#6A737D;">// Reading is OK</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//- c.add(&quot;one&quot;); // Can&#39;t change it</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Collections.</span><span style="color:#6F42C1;">unmodifiableList</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;(data));</span></span>
<span class="line"><span style="color:#24292E;">    ListIterator&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; lit </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">listIterator</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(lit.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">()); </span><span style="color:#6A737D;">// Reading is OK</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//- lit.add(&quot;one&quot;); // Can&#39;t change it</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    Set&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Collections.</span><span style="color:#6F42C1;">unmodifiableSet</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> HashSet&lt;&gt;(data));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(s); </span><span style="color:#6A737D;">// Reading is OK</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//- s.add(&quot;one&quot;); // Can&#39;t change it</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// For a SortedSet:</span></span>
<span class="line"><span style="color:#24292E;">    Set&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; ss </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      Collections.</span><span style="color:#6F42C1;">unmodifiableSortedSet</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> TreeSet&lt;&gt;(data));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; m </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      Collections.</span><span style="color:#6F42C1;">unmodifiableMap</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> HashMap&lt;&gt;(Countries.</span><span style="color:#6F42C1;">capitals</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">)));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(m); </span><span style="color:#6A737D;">// Reading is OK</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//- m.put(&quot;Ralph&quot;, &quot;Howdy!&quot;);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// For a SortedMap:</span></span>
<span class="line"><span style="color:#24292E;">    Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; sm </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      Collections.</span><span style="color:#6F42C1;">unmodifiableSortedMap</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> TreeMap&lt;&gt;(Countries.</span><span style="color:#6F42C1;">capitals</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">)));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">[ALGERIA, ANGOLA, BENIN, BOTSWANA, BURKINA FASO,</span></span>
<span class="line"><span style="color:#6A737D;">BURUNDI]</span></span>
<span class="line"><span style="color:#6A737D;">ALGERIA</span></span>
<span class="line"><span style="color:#6A737D;">[BENIN, BOTSWANA, ANGOLA, BURKINA FASO, ALGERIA,</span></span>
<span class="line"><span style="color:#6A737D;">BURUNDI]</span></span>
<span class="line"><span style="color:#6A737D;">{BENIN=Porto-Novo, BOTSWANA=Gaberone, ANGOLA=Luanda,</span></span>
<span class="line"><span style="color:#6A737D;">BURKINA FASO=Ouagadougou, ALGERIA=Algiers,</span></span>
<span class="line"><span style="color:#6A737D;">BURUNDI=Bujumbura}</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>为特定类型调用 “unmodifiable” 方法不会导致编译时检查，但是一旦发生转换，对修改特定集合内容的任何方法调用都将产生 <strong>UnsupportedOperationException</strong> 异常。</p><p>在每种情况下，在将集合设置为只读之前，必须使用有意义的数据填充集合。填充完成后，最好的方法是用 “unmodifiable” 方法调用生成的引用替换现有引用。这样，一旦使得内容无法修改，那么就不会冒有意外更改内容的风险。另一方面，此工具还允许将可修改的集合保留为类中的<strong>私有</strong>集合，并从方法调用处返回对该集合的只读引用。所以，你可以在类内修改它，但其他人只能读它。</p><h3 id="同步-collection-或-map" tabindex="-1">同步 Collection 或 Map <a class="header-anchor" href="#同步-collection-或-map" aria-label="Permalink to &quot;同步 Collection 或 Map&quot;">​</a></h3><p><strong>synchronized</strong> 关键字是多线程主题的重要组成部分，更复杂的内容在<a href="./.html">第二十四章 并发编程</a>中介绍。在这里，只需要注意到 <strong>Collections</strong> 类包含一种自动同步整个集合的方法。 语法类似于 “unmodifiable” 方法：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/Synchronization.java</span></span>
<span class="line"><span style="color:#6A737D;">// Using the Collections.synchronized methods</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Synchronization</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    Collection&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; c </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      Collections.</span><span style="color:#B392F0;">synchronizedCollection</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">    List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; list </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Collections</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">synchronizedList</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">    Set&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Collections</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">synchronizedSet</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> HashSet&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">    Set&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; ss </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Collections</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">synchronizedSortedSet</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> TreeSet&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">    Map&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; m </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Collections</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">synchronizedMap</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> HashMap&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">    Map&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; sm </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Collections</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">synchronizedSortedMap</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> TreeMap&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/Synchronization.java</span></span>
<span class="line"><span style="color:#6A737D;">// Using the Collections.synchronized methods</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Synchronization</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    Collection&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; c </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      Collections.</span><span style="color:#6F42C1;">synchronizedCollection</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">    List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; list </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Collections</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">synchronizedList</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">    Set&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Collections</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">synchronizedSet</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> HashSet&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">    Set&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; ss </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Collections</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">synchronizedSortedSet</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> TreeSet&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">    Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; m </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Collections</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">synchronizedMap</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> HashMap&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">    Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; sm </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Collections</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">synchronizedSortedMap</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> TreeMap&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>最好立即通过适当的 “synchronized” 方法传递新集合，如上所示。这样，就不会意外地暴露出非同步版本。</p><h4 id="fail-fast" tabindex="-1">Fail Fast <a class="header-anchor" href="#fail-fast" aria-label="Permalink to &quot;Fail Fast&quot;">​</a></h4><p>Java 集合还具有防止多个进程修改集合内容的机制。如果当前正在迭代集合，然后有其他一些进程介入并插入，删除或更改该集合中的对象，则会出现此问题。也许在集合中已经遍历过了那个元素，也许还没有遍历到，也许在调用 <code>size()</code> 之后集合的大小会缩小...有许多灾难情景。 Java 集合库使用一种 <em>fail-fast</em> 的机制，该机制可以检测到除了当前进程引起的更改之外，其它任何对集合的更改操作。如果它检测到其他人正在修改集合，则会立即生成 <strong>ConcurrentModificationException</strong> 异常。这就是“fail-fast”的含义——它不会在以后使用更复杂的算法尝试检测问题（快速失败）。</p><p>通过创建迭代器并向迭代器指向的集合中添加元素，可以很容易地看到操作中的 fail-fast 机制，如下所示：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/FailFast.java</span></span>
<span class="line"><span style="color:#6A737D;">// Demonstrates the &quot;fail-fast&quot; behavior</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FailFast</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    Collection&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; c </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">    Iterator&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; it </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> c.</span><span style="color:#B392F0;">iterator</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    c.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;An object&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      String s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> it.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;">(ConcurrentModificationException </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(e);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">java.util.ConcurrentModificationException</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/FailFast.java</span></span>
<span class="line"><span style="color:#6A737D;">// Demonstrates the &quot;fail-fast&quot; behavior</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FailFast</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    Collection&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; c </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">    Iterator&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; it </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> c.</span><span style="color:#6F42C1;">iterator</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    c.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;An object&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      String s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> it.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;">(ConcurrentModificationException </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(e);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">java.util.ConcurrentModificationException</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>异常来自于在从集合中获得迭代器之后，又尝试在集合中添加元素。程序的两个部分可能会修改同一个集合，这种可能性的存在会产生不确定状态，因此异常会通知你更改代码。在这种情况下，应先将所有元素添加到集合，然后再获取迭代器。</p><p><strong>ConcurrentHashMap</strong> ， <strong>CopyOnWriteArrayList</strong> 和 <strong>CopyOnWriteArraySet</strong> 使用了特定的技术来避免产生 <strong>ConcurrentModificationException</strong> 异常。</p><h2 id="持有引用" tabindex="-1">持有引用 <a class="header-anchor" href="#持有引用" aria-label="Permalink to &quot;持有引用&quot;">​</a></h2><p><strong>java.lang.ref</strong> 中库包含一组类，这些类允许垃圾收集具有更大的灵活性。特别是当拥有可能导致内存耗尽的大对象时，这些类特别有用。这里有三个从抽象类 <strong>Reference</strong> 继承来的类： <strong>SoftReference</strong> （软引用）， <strong>WeakReference</strong> （弱引用）和 <strong>PhantomReference</strong> （虚引用）继承了三个类。如果一个对象只能通过这其中的一个 <strong>Reference</strong> 对象访问，那么这三种类型每个都为垃圾收集器提供不同级别的间接引用（indirection）。</p><p>如果一个对象是 <em>可达的</em>（reachable），那么意味着在程序中的某个位置可以找到该对象。这可能意味着在栈上有一个直接引用该对象的普通引用，但也有可能是引用了一个对该对象有引用的对象，这可以有很多中间环节。如果某个对象是可达的，则垃圾收集器无法释放它，因为它仍然被程序所使用。如果某个对象是不可达的，则程序无法使用它，那么垃圾收集器回收该对象就是安全的。</p><p>使用 <strong>Reference</strong> 对象继续保持对该对象的引用，以到达该对象，但也允许垃圾收集器释放该对象。因此，程序可以使用该对象，但如果内存即将耗尽，则允许释放该对象。</p><p>可以通过使用 <strong>Reference</strong> 对象作为你和普通引用之间的中介（代理）来实现此目的。此外，必须没有对象的普通引用（未包含在 <strong>Reference</strong> 对象中的对象）。如果垃圾收集器发现对象可通过普通引用访问，则它不会释放该对象。</p><p>按照 <strong>SoftReference</strong> ， <strong>WeakReference</strong> 和 <strong>PhantomReference</strong> 的顺序，每个都比前一个更“弱”，并且对应于不同的可达性级别。软引用用于实现对内存敏感的缓存。弱引用用于实现“规范化映射”（ canonicalized mappings）——对象的实例可以在程序的多个位置同时使用，以节省存储，但不会阻止其键（或值）被回收。虚引用用于调度 pre-mortem 清理操作，这是一种比 Java 终结机制（Java finalization mechanism）更灵活的方式。</p><p>使用 <strong>SoftReference</strong> 和 <strong>WeakReference</strong> ，可以选择是否将它们放在 <strong>ReferenceQueue</strong> （用于 pre-mortem 清理操作的设备）中，但 <strong>PhantomReference</strong> 只能在 <strong>ReferenceQueue</strong> 上构建。下面是一个简单的演示：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/References.java</span></span>
<span class="line"><span style="color:#6A737D;">// Demonstrates Reference objects</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.lang.ref.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">VeryBig</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> SIZE </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10000</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;">[] la </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;">[SIZE];</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String ident;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">VeryBig</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">id</span><span style="color:#E1E4E8;">) { ident </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> id; }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> ident; }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">finalize</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Finalizing &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> ident);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">References</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> ReferenceQueue&lt;</span><span style="color:#F97583;">VeryBig</span><span style="color:#E1E4E8;">&gt; rq </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ReferenceQueue&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">checkQueue</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    Reference&lt;</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">VeryBig</span><span style="color:#E1E4E8;">&gt; inq </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> rq.</span><span style="color:#B392F0;">poll</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(inq </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;In queue: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> inq.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> size </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Or, choose size via the command line:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(args.length </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      size </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Integer.</span><span style="color:#B392F0;">valueOf</span><span style="color:#E1E4E8;">(args[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#E1E4E8;">    LinkedList&lt;SoftReference&lt;</span><span style="color:#F97583;">VeryBig</span><span style="color:#E1E4E8;">&gt;&gt; sa </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedList&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> size; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      sa.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> SoftReference&lt;&gt;(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">VeryBig</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Soft &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> i), rq));</span></span>
<span class="line"><span style="color:#E1E4E8;">      System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;Just created: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> sa.</span><span style="color:#B392F0;">getLast</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">checkQueue</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    LinkedList&lt;WeakReference&lt;</span><span style="color:#F97583;">VeryBig</span><span style="color:#E1E4E8;">&gt;&gt; wa </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedList&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> size; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      wa.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> WeakReference&lt;&gt;(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">VeryBig</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Weak &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> i), rq));</span></span>
<span class="line"><span style="color:#E1E4E8;">      System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;Just created: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> wa.</span><span style="color:#B392F0;">getLast</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">checkQueue</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    SoftReference&lt;</span><span style="color:#F97583;">VeryBig</span><span style="color:#E1E4E8;">&gt; s </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> SoftReference&lt;&gt;(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">VeryBig</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Soft&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    WeakReference&lt;</span><span style="color:#F97583;">VeryBig</span><span style="color:#E1E4E8;">&gt; w </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> WeakReference&lt;&gt;(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">VeryBig</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Weak&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.</span><span style="color:#B392F0;">gc</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    LinkedList&lt;PhantomReference&lt;</span><span style="color:#F97583;">VeryBig</span><span style="color:#E1E4E8;">&gt;&gt; pa </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedList&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> size; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      pa.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> PhantomReference&lt;&gt;(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">VeryBig</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Phantom &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> i), rq));</span></span>
<span class="line"><span style="color:#E1E4E8;">      System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;Just created: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> pa.</span><span style="color:#B392F0;">getLast</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">checkQueue</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output: (First and Last 10 Lines)</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.SoftReference@15db9742</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.SoftReference@6d06d69c</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.SoftReference@7852e922</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.SoftReference@4e25154f</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.SoftReference@70dea4e</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.SoftReference@5c647e05</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.SoftReference@33909752</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.SoftReference@55f96302</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.SoftReference@3d4eac69</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.SoftReference@42a57993</span></span>
<span class="line"><span style="color:#6A737D;">...________...________...________...________...</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.PhantomReference@45ee12a7</span></span>
<span class="line"><span style="color:#6A737D;">In queue: null</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.PhantomReference@330bedb4</span></span>
<span class="line"><span style="color:#6A737D;">In queue: null</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.PhantomReference@2503dbd3</span></span>
<span class="line"><span style="color:#6A737D;">In queue: null</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.PhantomReference@4b67cf4d</span></span>
<span class="line"><span style="color:#6A737D;">In queue: null</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.PhantomReference@7ea987ac</span></span>
<span class="line"><span style="color:#6A737D;">In queue: null</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/References.java</span></span>
<span class="line"><span style="color:#6A737D;">// Demonstrates Reference objects</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.lang.ref.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">VeryBig</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> SIZE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10000</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;">[] la </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;">[SIZE];</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String ident;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">VeryBig</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">id</span><span style="color:#24292E;">) { ident </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> id; }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">() { </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> ident; }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">protected</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">finalize</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Finalizing &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> ident);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">References</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> ReferenceQueue&lt;</span><span style="color:#D73A49;">VeryBig</span><span style="color:#24292E;">&gt; rq </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ReferenceQueue&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">checkQueue</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    Reference&lt;</span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">VeryBig</span><span style="color:#24292E;">&gt; inq </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> rq.</span><span style="color:#6F42C1;">poll</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(inq </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;In queue: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> inq.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> size </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Or, choose size via the command line:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(args.length </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      size </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Integer.</span><span style="color:#6F42C1;">valueOf</span><span style="color:#24292E;">(args[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">    LinkedList&lt;SoftReference&lt;</span><span style="color:#D73A49;">VeryBig</span><span style="color:#24292E;">&gt;&gt; sa </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedList&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> size; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      sa.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> SoftReference&lt;&gt;(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">VeryBig</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Soft &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> i), rq));</span></span>
<span class="line"><span style="color:#24292E;">      System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;Just created: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> sa.</span><span style="color:#6F42C1;">getLast</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">checkQueue</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    LinkedList&lt;WeakReference&lt;</span><span style="color:#D73A49;">VeryBig</span><span style="color:#24292E;">&gt;&gt; wa </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedList&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> size; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      wa.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> WeakReference&lt;&gt;(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">VeryBig</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Weak &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> i), rq));</span></span>
<span class="line"><span style="color:#24292E;">      System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;Just created: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> wa.</span><span style="color:#6F42C1;">getLast</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">checkQueue</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    SoftReference&lt;</span><span style="color:#D73A49;">VeryBig</span><span style="color:#24292E;">&gt; s </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> SoftReference&lt;&gt;(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">VeryBig</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Soft&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    WeakReference&lt;</span><span style="color:#D73A49;">VeryBig</span><span style="color:#24292E;">&gt; w </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> WeakReference&lt;&gt;(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">VeryBig</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Weak&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    System.</span><span style="color:#6F42C1;">gc</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    LinkedList&lt;PhantomReference&lt;</span><span style="color:#D73A49;">VeryBig</span><span style="color:#24292E;">&gt;&gt; pa </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedList&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> size; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      pa.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> PhantomReference&lt;&gt;(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">VeryBig</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Phantom &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> i), rq));</span></span>
<span class="line"><span style="color:#24292E;">      System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;Just created: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> pa.</span><span style="color:#6F42C1;">getLast</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">checkQueue</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output: (First and Last 10 Lines)</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.SoftReference@15db9742</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.SoftReference@6d06d69c</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.SoftReference@7852e922</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.SoftReference@4e25154f</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.SoftReference@70dea4e</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.SoftReference@5c647e05</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.SoftReference@33909752</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.SoftReference@55f96302</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.SoftReference@3d4eac69</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.SoftReference@42a57993</span></span>
<span class="line"><span style="color:#6A737D;">...________...________...________...________...</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.PhantomReference@45ee12a7</span></span>
<span class="line"><span style="color:#6A737D;">In queue: null</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.PhantomReference@330bedb4</span></span>
<span class="line"><span style="color:#6A737D;">In queue: null</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.PhantomReference@2503dbd3</span></span>
<span class="line"><span style="color:#6A737D;">In queue: null</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.PhantomReference@4b67cf4d</span></span>
<span class="line"><span style="color:#6A737D;">In queue: null</span></span>
<span class="line"><span style="color:#6A737D;">Just created: java.lang.ref.PhantomReference@7ea987ac</span></span>
<span class="line"><span style="color:#6A737D;">In queue: null</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>当运行此程序（将输出重定向到文本文件以查看页面中的输出）时，将会看到对象是被垃圾收集了的，虽然仍然可以通过 <strong>Reference</strong> 对象访问它们（使用 <code>get()</code> 来获取实际的对象引用）。 还可以看到 <strong>ReferenceQueue</strong> 始终生成包含 <strong>null</strong> 对象的 <strong>Reference</strong> 。 要使用它，请从特定的 <strong>Reference</strong> 类继承，并为新类添加更多有用的方法。</p><h3 id="weakhashmap" tabindex="-1">WeakHashMap <a class="header-anchor" href="#weakhashmap" aria-label="Permalink to &quot;WeakHashMap&quot;">​</a></h3><p>集合类库中有一个特殊的 <strong>Map</strong> 来保存弱引用： <strong>WeakHashMap</strong> 。 此类可以更轻松地创建规范化映射。在这种映射中，可以通过仅仅创建一个特定值的实例来节省存储空间。当程序需要该值时，它会查找映射中的现有对象并使用它（而不是从头开始创建一个）。 该映射可以将值作为其初始化的一部分，但更有可能的是在需要时创建该值。</p><p>由于这是一种节省存储空间的技术，因此 <strong>WeakHashMap</strong> 允许垃圾收集器自动清理键和值，这是非常方便的。不能对放在 <strong>WeakHashMap</strong> 中的键和值做任何特殊操作，它们由 map 自动包装在 <strong>WeakReference</strong> 中。当键不再被使用的时候才允许清理，如下所示：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/CanonicalMapping.java</span></span>
<span class="line"><span style="color:#6A737D;">// Demonstrates WeakHashMap</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Element</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String ident;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">Element</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">id</span><span style="color:#E1E4E8;">) { ident </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> id; }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">() { </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> ident; }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hashCode</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Objects.</span><span style="color:#B392F0;">hashCode</span><span style="color:#E1E4E8;">(ident);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(Object </span><span style="color:#FFAB70;">r</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> r </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> Element </span><span style="color:#F97583;">&amp;&amp;</span></span>
<span class="line"><span style="color:#E1E4E8;">      Objects.</span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(ident, ((Element)r).ident);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">finalize</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Finalizing &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">getClass</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getSimpleName</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> ident);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Key</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Element</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">Key</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">id</span><span style="color:#E1E4E8;">) { </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">(id); }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Value</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Element</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">Value</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">id</span><span style="color:#E1E4E8;">) { </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">(id); }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CanonicalMapping</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> size </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Or, choose size via the command line:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(args.length </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      size </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Integer.</span><span style="color:#B392F0;">valueOf</span><span style="color:#E1E4E8;">(args[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">Key</span><span style="color:#E1E4E8;">[] keys </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">Key</span><span style="color:#E1E4E8;">[size];</span></span>
<span class="line"><span style="color:#E1E4E8;">    WeakHashMap&lt;</span><span style="color:#F97583;">Key</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">Value</span><span style="color:#E1E4E8;">&gt; map </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> WeakHashMap&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> size; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      Key k </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Key</span><span style="color:#E1E4E8;">(Integer.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">(i));</span></span>
<span class="line"><span style="color:#E1E4E8;">      Value v </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Value</span><span style="color:#E1E4E8;">(Integer.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">(i));</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(i </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        keys[i] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> k; </span><span style="color:#6A737D;">// Save as &quot;real&quot; references</span></span>
<span class="line"><span style="color:#E1E4E8;">      map.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(k, v);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.</span><span style="color:#B392F0;">gc</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/CanonicalMapping.java</span></span>
<span class="line"><span style="color:#6A737D;">// Demonstrates WeakHashMap</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Element</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String ident;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">Element</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">id</span><span style="color:#24292E;">) { ident </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> id; }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">() { </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> ident; }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hashCode</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Objects.</span><span style="color:#6F42C1;">hashCode</span><span style="color:#24292E;">(ident);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(Object </span><span style="color:#E36209;">r</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> r </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> Element </span><span style="color:#D73A49;">&amp;&amp;</span></span>
<span class="line"><span style="color:#24292E;">      Objects.</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(ident, ((Element)r).ident);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">protected</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">finalize</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Finalizing &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">getClass</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getSimpleName</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> ident);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Key</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Element</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">Key</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">id</span><span style="color:#24292E;">) { </span><span style="color:#005CC5;">super</span><span style="color:#24292E;">(id); }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Value</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Element</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">Value</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">id</span><span style="color:#24292E;">) { </span><span style="color:#005CC5;">super</span><span style="color:#24292E;">(id); }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CanonicalMapping</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> size </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Or, choose size via the command line:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(args.length </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      size </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Integer.</span><span style="color:#6F42C1;">valueOf</span><span style="color:#24292E;">(args[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">Key</span><span style="color:#24292E;">[] keys </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">Key</span><span style="color:#24292E;">[size];</span></span>
<span class="line"><span style="color:#24292E;">    WeakHashMap&lt;</span><span style="color:#D73A49;">Key</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">Value</span><span style="color:#24292E;">&gt; map </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> WeakHashMap&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> size; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      Key k </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Key</span><span style="color:#24292E;">(Integer.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">(i));</span></span>
<span class="line"><span style="color:#24292E;">      Value v </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Value</span><span style="color:#24292E;">(Integer.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">(i));</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(i </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        keys[i] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> k; </span><span style="color:#6A737D;">// Save as &quot;real&quot; references</span></span>
<span class="line"><span style="color:#24292E;">      map.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(k, v);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    System.</span><span style="color:#6F42C1;">gc</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>Key</strong> 类必须具有 <code>hashCode()</code> 和 <code>equals()</code> ，因为它将被用作散列数据结构中的键。 <code>hashCode()</code> 的内容在<a href="./.html">附录：理解hashCode和equals方法</a>中进行了描述。</p><p>运行程序，你会看到垃圾收集器每三个键跳过一次。对该键的普通引用也被放置在 <strong>keys</strong> 数组中，因此这些对象不能被垃圾收集。</p><h2 id="java-1-0-1-1-的集合类" tabindex="-1">Java 1.0 / 1.1 的集合类 <a class="header-anchor" href="#java-1-0-1-1-的集合类" aria-label="Permalink to &quot;Java 1.0 / 1.1 的集合类&quot;">​</a></h2><p>不幸的是，许多代码是使用 Java 1.0 / 1.1 中的集合编写的，甚至新代码有时也是使用这些类编写的。编写新代码时切勿使用旧集合。旧的集合类有限，所以关于它们的讨论不多。由于它们是不合时宜的，所以我会尽量避免过分强调一些可怕的设计决定。</p><h3 id="vector-和-enumeration" tabindex="-1">Vector 和 Enumeration <a class="header-anchor" href="#vector-和-enumeration" aria-label="Permalink to &quot;Vector 和 Enumeration&quot;">​</a></h3><p>Java 1.0 / 1.1 中唯一的自扩展序列是 <strong>Vector</strong> ，因此它被用于很多地方。它的缺陷太多了，无法在这里描述（参见《Java编程思想》第1版，可从<a href="www.OnJava8.com">www.OnJava8.com</a>免费下载）。基本上，你可以将它看作是具有冗长且笨拙的方法名称的 <strong>ArrayList</strong> 。在修订后的 Java 集合库中，<strong>Vector</strong> 已经被调整适配过，因此可以作为 <strong>Collection</strong> 和 <strong>List</strong> 来使用。事实证明这有点不正常，集合类库仍然包含它只是为了支持旧的 Java 代码，但这会让一些人误以为 <strong>Vector</strong> 已经变得更好了。</p><p>迭代器的 Java 1.0 / 1.1 版本选择创建一个新名称“enumeration”，而不是使用每个人都熟悉的术语（“iterator”）。 <strong>Enumeration</strong> 接口小于 <strong>Iterator</strong> ，只包含两个方法，并且它使用更长的方法名称：如果还有更多元素，则 <code>boolean hasMoreElements()</code> 返回 <code>true</code> ， <code>Object nextElement()</code> 返回此enumeration的下一个元素 （否则会抛出异常）。</p><p><strong>Enumeration</strong> 只是一个接口，而不是一个实现，甚至新的类库有时仍然使用旧的 <strong>Enumeration</strong> ，这是不幸的，但通常是无害的。应该总是在自己的代码中使用 <strong>Iterator</strong> ，但要做好准备应对那些提供 <strong>Enumeration</strong> 的类库。</p><p>此外，可以使用 <code>Collections.enumeration()</code> 方法为任何 <strong>Collection</strong> 生成 <strong>Enumeration</strong> ，如下例所示：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/Enumerations.java</span></span>
<span class="line"><span style="color:#6A737D;">// Java 1.0/1.1 Vector and Enumeration</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> onjava.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Enumerations</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    Vector&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; v </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Vector&lt;&gt;(Countries.</span><span style="color:#B392F0;">names</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    Enumeration&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; e </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> v.</span><span style="color:#B392F0;">elements</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(e.</span><span style="color:#B392F0;">hasMoreElements</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">      System.out.</span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(e.</span><span style="color:#B392F0;">nextElement</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;, &quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Produce an Enumeration from a Collection:</span></span>
<span class="line"><span style="color:#E1E4E8;">    e </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Collections.</span><span style="color:#B392F0;">enumeration</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;());</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">ALGERIA, ANGOLA, BENIN, BOTSWANA, BURKINA FASO,</span></span>
<span class="line"><span style="color:#6A737D;">BURUNDI, CAMEROON, CAPE VERDE, CENTRAL AFRICAN</span></span>
<span class="line"><span style="color:#6A737D;">REPUBLIC, CHAD,</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/Enumerations.java</span></span>
<span class="line"><span style="color:#6A737D;">// Java 1.0/1.1 Vector and Enumeration</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> onjava.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Enumerations</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    Vector&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; v </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Vector&lt;&gt;(Countries.</span><span style="color:#6F42C1;">names</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    Enumeration&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; e </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> v.</span><span style="color:#6F42C1;">elements</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(e.</span><span style="color:#6F42C1;">hasMoreElements</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">      System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(e.</span><span style="color:#6F42C1;">nextElement</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;, &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Produce an Enumeration from a Collection:</span></span>
<span class="line"><span style="color:#24292E;">    e </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Collections.</span><span style="color:#6F42C1;">enumeration</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;());</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">ALGERIA, ANGOLA, BENIN, BOTSWANA, BURKINA FASO,</span></span>
<span class="line"><span style="color:#6A737D;">BURUNDI, CAMEROON, CAPE VERDE, CENTRAL AFRICAN</span></span>
<span class="line"><span style="color:#6A737D;">REPUBLIC, CHAD,</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>要生成 <strong>Enumeration</strong> ，可以调用 <code>elements()</code> ，然后可以使用它来执行向前迭代。</p><p>最后一行创建一个 <strong>ArrayList</strong> ，并使用 <code>enumeration() </code> 来将 <strong>ArrayList</strong> 适配为一个 <strong>Enumeration</strong> 。 因此，如果有旧代码需要使用 <strong>Enumeration</strong> ，你仍然可以使用新集合。</p><h3 id="hashtable" tabindex="-1">Hashtable <a class="header-anchor" href="#hashtable" aria-label="Permalink to &quot;Hashtable&quot;">​</a></h3><p>正如你在本附录中的性能比较中所看到的，基本的 <strong>Hashtable</strong> 与 <strong>HashMap</strong> 非常相似，甚至方法名称都相似。在新代码中没有理由使用 <strong>Hashtable</strong> 而不是 <strong>HashMap</strong> 。</p><h3 id="stack" tabindex="-1">Stack <a class="header-anchor" href="#stack" aria-label="Permalink to &quot;Stack&quot;">​</a></h3><p>之前使用 <strong>LinkedList</strong> 引入了栈的概念。 Java 1.0 / 1.1 <strong>Stack</strong> 的奇怪之处在于，不是以组合方式使用 <strong>Vector</strong> ，而是继承自 <strong>Vector</strong> 。 因此它具有 <strong>Vector</strong> 的所有特征和行为以及一些额外的 <strong>Stack</strong> 行为。很难去知道设计师是否有意识地认为这样做是有用的，或者它是否只是太天真了，无论如何，它在进入发行版之前显然没有经过审查，所以这个糟糕的设计仍然存在（但不要使用它）。</p><p>这是 <strong>Stack</strong> 的简单演示，向栈中放入枚举中每一个类型的 <strong>String</strong> 形式。它还展示了如何轻松地将 <strong>LinkedList</strong> 用作栈，或者使用在<a href="./.html">第十二章：集合</a>章节中创建的 <strong>Stack</strong> 类：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/Stacks.java</span></span>
<span class="line"><span style="color:#6A737D;">// Demonstration of Stack Class</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">enum</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Month</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">JANUARY</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">FEBRUARY</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">MARCH</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">APRIL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">MAY</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">JUNE</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">JULY</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">AUGUST</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">SEPTEMBER</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">OCTOBER</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">NOVEMBER</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Stacks</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    Stack&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; stack </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Stack&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(Month m </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Month.</span><span style="color:#B392F0;">values</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">      stack.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(m.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;stack = &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> stack);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Treating a stack as a Vector:</span></span>
<span class="line"><span style="color:#E1E4E8;">    stack.</span><span style="color:#B392F0;">addElement</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;The last line&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;element 5 = &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> stack.</span><span style="color:#B392F0;">elementAt</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;popping elements:&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">stack.</span><span style="color:#B392F0;">empty</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">      System.out.</span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(stack.</span><span style="color:#B392F0;">pop</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Using a LinkedList as a Stack:</span></span>
<span class="line"><span style="color:#E1E4E8;">    LinkedList&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; lstack </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedList&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(Month m </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Month.</span><span style="color:#B392F0;">values</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">      lstack.</span><span style="color:#B392F0;">addFirst</span><span style="color:#E1E4E8;">(m.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;lstack = &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> lstack);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">lstack.</span><span style="color:#B392F0;">isEmpty</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">      System.out.</span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(lstack.</span><span style="color:#B392F0;">removeFirst</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Using the Stack class from</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// the Collections Chapter:</span></span>
<span class="line"><span style="color:#E1E4E8;">    onjava.Stack&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; stack2 </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> onjava.Stack&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(Month m </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Month.</span><span style="color:#B392F0;">values</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">      stack2.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(m.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;stack2 = &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> stack2);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">stack2.</span><span style="color:#B392F0;">isEmpty</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">      System.out.</span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(stack2.</span><span style="color:#B392F0;">pop</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">stack = [JANUARY, FEBRUARY, MARCH, APRIL, MAY, JUNE,</span></span>
<span class="line"><span style="color:#6A737D;">JULY, AUGUST, SEPTEMBER, OCTOBER, NOVEMBER]</span></span>
<span class="line"><span style="color:#6A737D;">element 5 = JUNE</span></span>
<span class="line"><span style="color:#6A737D;">popping elements:</span></span>
<span class="line"><span style="color:#6A737D;">The last line NOVEMBER OCTOBER SEPTEMBER AUGUST JULY</span></span>
<span class="line"><span style="color:#6A737D;">JUNE MAY APRIL MARCH FEBRUARY JANUARY lstack =</span></span>
<span class="line"><span style="color:#6A737D;">[NOVEMBER, OCTOBER, SEPTEMBER, AUGUST, JULY, JUNE, MAY,</span></span>
<span class="line"><span style="color:#6A737D;">APRIL, MARCH, FEBRUARY, JANUARY]</span></span>
<span class="line"><span style="color:#6A737D;">NOVEMBER OCTOBER SEPTEMBER AUGUST JULY JUNE MAY APRIL</span></span>
<span class="line"><span style="color:#6A737D;">MARCH FEBRUARY JANUARY stack2 = [NOVEMBER, OCTOBER,</span></span>
<span class="line"><span style="color:#6A737D;">SEPTEMBER, AUGUST, JULY, JUNE, MAY, APRIL, MARCH,</span></span>
<span class="line"><span style="color:#6A737D;">FEBRUARY, JANUARY]</span></span>
<span class="line"><span style="color:#6A737D;">NOVEMBER OCTOBER SEPTEMBER AUGUST JULY JUNE MAY APRIL</span></span>
<span class="line"><span style="color:#6A737D;">MARCH FEBRUARY JANUARY</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/Stacks.java</span></span>
<span class="line"><span style="color:#6A737D;">// Demonstration of Stack Class</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">enum</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Month</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">JANUARY</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">FEBRUARY</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">MARCH</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">APRIL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">MAY</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">JUNE</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">JULY</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">AUGUST</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">SEPTEMBER</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">OCTOBER</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">NOVEMBER</span><span style="color:#24292E;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Stacks</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    Stack&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; stack </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Stack&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(Month m </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Month.</span><span style="color:#6F42C1;">values</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">      stack.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(m.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;stack = &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> stack);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Treating a stack as a Vector:</span></span>
<span class="line"><span style="color:#24292E;">    stack.</span><span style="color:#6F42C1;">addElement</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;The last line&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;element 5 = &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> stack.</span><span style="color:#6F42C1;">elementAt</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;popping elements:&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">stack.</span><span style="color:#6F42C1;">empty</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">      System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(stack.</span><span style="color:#6F42C1;">pop</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Using a LinkedList as a Stack:</span></span>
<span class="line"><span style="color:#24292E;">    LinkedList&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; lstack </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedList&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(Month m </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Month.</span><span style="color:#6F42C1;">values</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">      lstack.</span><span style="color:#6F42C1;">addFirst</span><span style="color:#24292E;">(m.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;lstack = &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> lstack);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">lstack.</span><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">      System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(lstack.</span><span style="color:#6F42C1;">removeFirst</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Using the Stack class from</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// the Collections Chapter:</span></span>
<span class="line"><span style="color:#24292E;">    onjava.Stack&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; stack2 </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> onjava.Stack&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(Month m </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Month.</span><span style="color:#6F42C1;">values</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">      stack2.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(m.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;stack2 = &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> stack2);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">stack2.</span><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">      System.out.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(stack2.</span><span style="color:#6F42C1;">pop</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">stack = [JANUARY, FEBRUARY, MARCH, APRIL, MAY, JUNE,</span></span>
<span class="line"><span style="color:#6A737D;">JULY, AUGUST, SEPTEMBER, OCTOBER, NOVEMBER]</span></span>
<span class="line"><span style="color:#6A737D;">element 5 = JUNE</span></span>
<span class="line"><span style="color:#6A737D;">popping elements:</span></span>
<span class="line"><span style="color:#6A737D;">The last line NOVEMBER OCTOBER SEPTEMBER AUGUST JULY</span></span>
<span class="line"><span style="color:#6A737D;">JUNE MAY APRIL MARCH FEBRUARY JANUARY lstack =</span></span>
<span class="line"><span style="color:#6A737D;">[NOVEMBER, OCTOBER, SEPTEMBER, AUGUST, JULY, JUNE, MAY,</span></span>
<span class="line"><span style="color:#6A737D;">APRIL, MARCH, FEBRUARY, JANUARY]</span></span>
<span class="line"><span style="color:#6A737D;">NOVEMBER OCTOBER SEPTEMBER AUGUST JULY JUNE MAY APRIL</span></span>
<span class="line"><span style="color:#6A737D;">MARCH FEBRUARY JANUARY stack2 = [NOVEMBER, OCTOBER,</span></span>
<span class="line"><span style="color:#6A737D;">SEPTEMBER, AUGUST, JULY, JUNE, MAY, APRIL, MARCH,</span></span>
<span class="line"><span style="color:#6A737D;">FEBRUARY, JANUARY]</span></span>
<span class="line"><span style="color:#6A737D;">NOVEMBER OCTOBER SEPTEMBER AUGUST JULY JUNE MAY APRIL</span></span>
<span class="line"><span style="color:#6A737D;">MARCH FEBRUARY JANUARY</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p><strong>String</strong> 形式是由 <strong>Month</strong> 中的枚举常量生成的，使用 <code>push()</code> 压入到栈中，然后使用 <code>pop()</code> 从栈顶部取出。为了说明一点，将 <strong>Vector</strong> 的操作也在 <strong>Stack</strong> 对象上执行， 这是可能的，因为凭借继承， <strong>Stack</strong> 是 <strong>Vector</strong> 。 因此，可以在 <strong>Vector</strong> 上执行的所有操作也可以在 <strong>Stack</strong> 上执行，例如 <code>elementAt()</code> 。</p><p>如前所述，在需要栈行为时使用 <strong>LinkedList</strong> ，或者从 <strong>LinkedList</strong> 类创建的 <strong>onjava.Stack</strong> 类。</p><h3 id="bitset" tabindex="-1">BitSet <a class="header-anchor" href="#bitset" aria-label="Permalink to &quot;BitSet&quot;">​</a></h3><p><strong>BitSet</strong> 用于有效地存储大量的开关信息。仅从尺寸大小的角度来看它是有效的，如果你正在寻找有效的访问，它比使用本机数组（native array）稍慢。</p><p>此外， <strong>BitSet</strong> 的最小大小是 <strong>long</strong> ：64位。这意味着如果你要存储更小的东西，比如8位， <strong>BitSet</strong> 就是浪费，如果尺寸有问题，你最好创建自己的类，或者只是用一个数组来保存你的标志。（只有在你创建许多包含开关信息列表的对象时才会出现这种情况，并且只应根据分析和其他指标来决定。如果你做出此决定只是因为您认为 <strong>BitSet</strong> 太大，那么最终会产生不必要的复杂性并且浪费大量时间。）</p><p>当添加更多元素时，普通集合会扩展， <strong>BitSet</strong>也会这样做。以下示例显示了 <strong>BitSet</strong> 的工作原理：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/Bits.java</span></span>
<span class="line"><span style="color:#6A737D;">// Demonstration of BitSet</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Bits</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">printBitSet</span><span style="color:#E1E4E8;">(BitSet </span><span style="color:#FFAB70;">b</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;bits: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> b);</span></span>
<span class="line"><span style="color:#E1E4E8;">    StringBuilder bbits </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">StringBuilder</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> j </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; j </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> b.</span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">() ; j</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      bbits.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(b.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(j) </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;1&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;0&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;bit pattern: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> bbits);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    Random rand </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Random</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">47</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Take the LSB of nextInt():</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;"> bt </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;">)rand.</span><span style="color:#B392F0;">nextInt</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    BitSet bb </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BitSet</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(((</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> i) </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">  bt) </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        bb.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(i);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">        bb.</span><span style="color:#B392F0;">clear</span><span style="color:#E1E4E8;">(i);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;byte value: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> bt);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">printBitSet</span><span style="color:#E1E4E8;">(bb);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">short</span><span style="color:#E1E4E8;"> st </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">short</span><span style="color:#E1E4E8;">)rand.</span><span style="color:#B392F0;">nextInt</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    BitSet bs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BitSet</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(((</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> i) </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">  st) </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        bs.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(i);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">        bs.</span><span style="color:#B392F0;">clear</span><span style="color:#E1E4E8;">(i);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;short value: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> st);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">printBitSet</span><span style="color:#E1E4E8;">(bs);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> it </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> rand.</span><span style="color:#B392F0;">nextInt</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    BitSet bi </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BitSet</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">31</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(((</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> i) </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">  it) </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        bi.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(i);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">        bi.</span><span style="color:#B392F0;">clear</span><span style="color:#E1E4E8;">(i);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;int value: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> it);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">printBitSet</span><span style="color:#E1E4E8;">(bi);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Test bitsets &gt;= 64 bits:</span></span>
<span class="line"><span style="color:#E1E4E8;">    BitSet b127 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BitSet</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    b127.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">127</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;set bit 127: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> b127);</span></span>
<span class="line"><span style="color:#E1E4E8;">    BitSet b255 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BitSet</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">65</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    b255.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">255</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;set bit 255: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> b255);</span></span>
<span class="line"><span style="color:#E1E4E8;">    BitSet b1023 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BitSet</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">512</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    b1023.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1023</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    b1023.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1024</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;set bit 1023: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> b1023);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">byte value: -107</span></span>
<span class="line"><span style="color:#6A737D;">bits: {0, 2, 4, 7}</span></span>
<span class="line"><span style="color:#6A737D;">bit pattern: 101010010000000000000000000000000000000000</span></span>
<span class="line"><span style="color:#6A737D;">0000000000000000000000</span></span>
<span class="line"><span style="color:#6A737D;">short value: 1302</span></span>
<span class="line"><span style="color:#6A737D;">bits: {1, 2, 4, 8, 10}</span></span>
<span class="line"><span style="color:#6A737D;">bit pattern: 011010001010000000000000000000000000000000</span></span>
<span class="line"><span style="color:#6A737D;">0000000000000000000000</span></span>
<span class="line"><span style="color:#6A737D;">int value: -2014573909</span></span>
<span class="line"><span style="color:#6A737D;">bits: {0, 1, 3, 5, 7, 9, 11, 18, 19, 21, 22, 23, 24,</span></span>
<span class="line"><span style="color:#6A737D;">25, 26, 31}</span></span>
<span class="line"><span style="color:#6A737D;">bit pattern: 110101010101000000110111111000010000000000</span></span>
<span class="line"><span style="color:#6A737D;">0000000000000000000000</span></span>
<span class="line"><span style="color:#6A737D;">set bit 127: {127}</span></span>
<span class="line"><span style="color:#6A737D;">set bit 255: {255}</span></span>
<span class="line"><span style="color:#6A737D;">set bit 1023: {1023, 1024}</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// collectiontopics/Bits.java</span></span>
<span class="line"><span style="color:#6A737D;">// Demonstration of BitSet</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> java.util.</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Bits</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">printBitSet</span><span style="color:#24292E;">(BitSet </span><span style="color:#E36209;">b</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;bits: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> b);</span></span>
<span class="line"><span style="color:#24292E;">    StringBuilder bbits </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StringBuilder</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; j </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> b.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">() ; j</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      bbits.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(b.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(j) </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;1&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;bit pattern: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> bbits);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    Random rand </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Random</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">47</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Take the LSB of nextInt():</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">byte</span><span style="color:#24292E;"> bt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">byte</span><span style="color:#24292E;">)rand.</span><span style="color:#6F42C1;">nextInt</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    BitSet bb </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BitSet</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(((</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> i) </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">  bt) </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        bb.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(i);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">        bb.</span><span style="color:#6F42C1;">clear</span><span style="color:#24292E;">(i);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;byte value: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> bt);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">printBitSet</span><span style="color:#24292E;">(bb);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">short</span><span style="color:#24292E;"> st </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">short</span><span style="color:#24292E;">)rand.</span><span style="color:#6F42C1;">nextInt</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    BitSet bs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BitSet</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">15</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(((</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> i) </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">  st) </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        bs.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(i);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">        bs.</span><span style="color:#6F42C1;">clear</span><span style="color:#24292E;">(i);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;short value: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> st);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">printBitSet</span><span style="color:#24292E;">(bs);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> it </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> rand.</span><span style="color:#6F42C1;">nextInt</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    BitSet bi </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BitSet</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">31</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(((</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> i) </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">  it) </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        bi.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(i);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">        bi.</span><span style="color:#6F42C1;">clear</span><span style="color:#24292E;">(i);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;int value: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> it);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">printBitSet</span><span style="color:#24292E;">(bi);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Test bitsets &gt;= 64 bits:</span></span>
<span class="line"><span style="color:#24292E;">    BitSet b127 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BitSet</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    b127.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">127</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;set bit 127: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> b127);</span></span>
<span class="line"><span style="color:#24292E;">    BitSet b255 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BitSet</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">65</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    b255.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">255</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;set bit 255: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> b255);</span></span>
<span class="line"><span style="color:#24292E;">    BitSet b1023 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BitSet</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">512</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    b1023.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1023</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    b1023.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1024</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;set bit 1023: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> b1023);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* Output:</span></span>
<span class="line"><span style="color:#6A737D;">byte value: -107</span></span>
<span class="line"><span style="color:#6A737D;">bits: {0, 2, 4, 7}</span></span>
<span class="line"><span style="color:#6A737D;">bit pattern: 101010010000000000000000000000000000000000</span></span>
<span class="line"><span style="color:#6A737D;">0000000000000000000000</span></span>
<span class="line"><span style="color:#6A737D;">short value: 1302</span></span>
<span class="line"><span style="color:#6A737D;">bits: {1, 2, 4, 8, 10}</span></span>
<span class="line"><span style="color:#6A737D;">bit pattern: 011010001010000000000000000000000000000000</span></span>
<span class="line"><span style="color:#6A737D;">0000000000000000000000</span></span>
<span class="line"><span style="color:#6A737D;">int value: -2014573909</span></span>
<span class="line"><span style="color:#6A737D;">bits: {0, 1, 3, 5, 7, 9, 11, 18, 19, 21, 22, 23, 24,</span></span>
<span class="line"><span style="color:#6A737D;">25, 26, 31}</span></span>
<span class="line"><span style="color:#6A737D;">bit pattern: 110101010101000000110111111000010000000000</span></span>
<span class="line"><span style="color:#6A737D;">0000000000000000000000</span></span>
<span class="line"><span style="color:#6A737D;">set bit 127: {127}</span></span>
<span class="line"><span style="color:#6A737D;">set bit 255: {255}</span></span>
<span class="line"><span style="color:#6A737D;">set bit 1023: {1023, 1024}</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div><p>随机数生成器用于创建随机 <strong>byte</strong> ， <strong>short</strong> 和 <strong>int</strong> ，并且每个都在 <strong>BitSet</strong> 中转换为相应的位模式。这样可以正常工作，因为 <strong>BitSet</strong> 是64位，所以这些都不会导致它的大小增加，然后创建更大的 <strong>BitSet</strong> 。 请注意， <strong>BitSet</strong> 会根据需要进行扩展。</p><p>对于可以命名的固定标志集， <strong>EnumSet</strong> （参见<a href="./.html">第二十二章：枚举</a>章节）通常比 <strong>BitSet</strong> 更好，因为 <strong>EnumSet</strong> 允许操作名称而不是数字位位置，从而可以减少错误。 <strong>EnumSet</strong> 还可以防止意外地添加新的标记位置，这可能会导致一些严重的，难以发现的错误。使用 <strong>BitSet</strong> 而不是 <strong>EnumSet</strong> 的唯一原因是，不知道在运行时需要多少标志，或者为标志分配名称是不合理的，或者需要 <strong>BitSet</strong> 中的一个特殊操作（请参阅 <strong>BitSet</strong> 和 <strong>EnumSet</strong> 的 JDK 文档）。</p><h2 id="本章小结" tabindex="-1">本章小结 <a class="header-anchor" href="#本章小结" aria-label="Permalink to &quot;本章小结&quot;">​</a></h2><p>集合可以说是编程语言中最常用的工具。有些语言（例如Python）甚至将基本集合组件（列表，映射和集合）作为内置函数包含在其中。</p><p>正如在<a href="./.html">第十二章：集合</a>章节中看到的那样，可以使用集合执行许多非常有用的操作，而不需要太多努力。但是，在某些时候，为了正确地使用它们而不得不更多地了解集合，特别是，必须充分了解散列操作以编写自己的 <code>hashCode()</code> 方法（并且必须知道何时需要），并且你必须充分了解各种集合实现，以根据你的需求选择合适的集合。本附录涵盖了这些概念，并讨论了有关集合库的其他有用详细信息。你现在应该已经准备好在日常编程任务中使用 Java 集合了。</p><p>集合库的设计很困难（大多数库设计问题都是如此）。在 C++ 中，集合类涵盖了许多不同类的基础。这比之前可用的 C++ 集合类更好，但它没有很好地转换为 Java 。在另一个极端，我看到了一个由单个类“collection”组成的集合库，它同时充当线性序列和关联数组。 Java 集合库试图在功能和复杂性之间取得平衡。结果在某些地方看起来有点奇怪。与早期 Java 库中的一些决策不同，这些奇怪的不是事故，而是在基于复杂性的权衡下而仔细考虑的决策。</p><p>[^1]: <strong>java.util</strong> 中的 <strong>Map</strong> 使用 <strong>Map</strong> 的 <code>getKey()</code> 和 <code>getValue()</code> 执行批量复制，因此这是有效的。如果自定义 <strong>Map</strong> 只是复制整个 <strong>Map.Entry</strong> ，那么这种方法就会出现问题。</p><p>[^2]: 虽然当我用这种方式描述它的时候听起来很奇怪而且好像没什么用处，但在<a href="./.html">第十九章 类型信息</a>章节中已经看到过，这种动态行为也可以非常强大有用。</p><p>[^3]: 如果这些加速仍然无法满足性能需求，则可以通过编写自己的 <strong>Map</strong> 并将其自定义为特定类型来进一步加速表查找，以避免因向 <strong>对象</strong> 转换而导致的延迟。为了达到更高的性能水平，速度爱好者可以使用 Donald Knuth 的《计算机程序设计艺术（第3卷）：排序与查找》（第二版），将溢出桶列表（overflow bucket lists）替换为具有两个额外优势的阵列：它们可以针对磁盘存储进行优化，并且它们可以节省大部分创建和回收个别记录（individual records）的时间。</p>`,235),e=[o];function t(c,r,E,y,i,F){return n(),a("div",null,e)}const D=s(p,[["render",t]]);export{A as __pageData,D as default};
